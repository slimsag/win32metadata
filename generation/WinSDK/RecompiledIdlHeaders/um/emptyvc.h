/*** Autogenerated by WIDL 7.0-rc1 from ./emptyvc.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __emptyvc_h__
#define __emptyvc_h__

/* Forward declarations */

#ifndef __IEmptyVolumeCacheCallBack_FWD_DEFINED__
#define __IEmptyVolumeCacheCallBack_FWD_DEFINED__
typedef interface IEmptyVolumeCacheCallBack IEmptyVolumeCacheCallBack;
#ifdef __cplusplus
interface IEmptyVolumeCacheCallBack;
#endif /* __cplusplus */
#endif

#ifndef __IEmptyVolumeCache_FWD_DEFINED__
#define __IEmptyVolumeCache_FWD_DEFINED__
typedef interface IEmptyVolumeCache IEmptyVolumeCache;
#ifdef __cplusplus
interface IEmptyVolumeCache;
#endif /* __cplusplus */
#endif

#ifndef __IEmptyVolumeCache2_FWD_DEFINED__
#define __IEmptyVolumeCache2_FWD_DEFINED__
typedef interface IEmptyVolumeCache2 IEmptyVolumeCache2;
#ifdef __cplusplus
interface IEmptyVolumeCache2;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <objidl.h>
#include <oleidl.h>
#include <oaidl.h>

#ifdef __cplusplus
extern "C" {
#endif

//=--------------------------------------------------------------------------=
// emptyvc.h
//=--------------------------------------------------------------------------=
// Copyright (c) Microsoft Corporation. All rights reserved.
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
// PARTICULAR PURPOSE.
//=--------------------------------------------------------------------------=

#include <winapifamily.h>
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
#pragma comment(lib,"uuid.lib")

//---------------------------------------------------------------------------=
// Empty Volume Cache Interfaces.

#ifndef __IEmptyVolumeCache_FWD_DEFINED__
#define __IEmptyVolumeCache_FWD_DEFINED__
typedef interface IEmptyVolumeCache IEmptyVolumeCache;
#ifdef __cplusplus
interface IEmptyVolumeCache;
#endif /* __cplusplus */
#endif

#ifndef __IEmptyVolumeCache2_FWD_DEFINED__
#define __IEmptyVolumeCache2_FWD_DEFINED__
typedef interface IEmptyVolumeCache2 IEmptyVolumeCache2;
#ifdef __cplusplus
interface IEmptyVolumeCache2;
#endif /* __cplusplus */
#endif

// IEmptyVolumeCache Flags
#define EVCF_HASSETTINGS             0x0001
#define EVCF_ENABLEBYDEFAULT         0x0002
#define EVCF_REMOVEFROMLIST          0x0004
#define EVCF_ENABLEBYDEFAULT_AUTO    0x0008
#define EVCF_DONTSHOWIFZERO          0x0010
#define EVCF_SETTINGSMODE            0x0020
#define EVCF_OUTOFDISKSPACE          0x0040
#define EVCF_USERCONSENTOBTAINED     0x0080
#define EVCF_SYSTEMAUTORUN           0x0100

// IEmptyVolumeCacheCallBack Flags
#define EVCCBF_LASTNOTIFICATION  0x0001

////////////////////////////////////////////////////////////////////////////
//  Interface Definitions
#ifndef _LPEMPTYVOLUMECACHECALLBACK_DEFINED
#define _LPEMPTYVOLUMECACHECALLBACK_DEFINED
/*****************************************************************************
 * IEmptyVolumeCacheCallBack interface
 */
#ifndef __IEmptyVolumeCacheCallBack_INTERFACE_DEFINED__
#define __IEmptyVolumeCacheCallBack_INTERFACE_DEFINED__

typedef IEmptyVolumeCacheCallBack *LPEMPTYVOLUMECACHECALLBACK;
DEFINE_GUID(IID_IEmptyVolumeCacheCallBack, 0x6e793361, 0x73c6, 0x11d0, 0x84,0x69, 0x00,0xaa,0x00,0x44,0x29,0x01);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("6e793361-73c6-11d0-8469-00aa00442901")
IEmptyVolumeCacheCallBack : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE ScanProgress(
        DWORDLONG dwlSpaceUsed,
        DWORD dwFlags,
        LPCWSTR pcwszStatus) = 0;

    virtual HRESULT STDMETHODCALLTYPE PurgeProgress(
        DWORDLONG dwlSpaceFreed,
        DWORDLONG dwlSpaceToFree,
        DWORD dwFlags,
        LPCWSTR pcwszStatus) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IEmptyVolumeCacheCallBack, 0x6e793361, 0x73c6, 0x11d0, 0x84,0x69, 0x00,0xaa,0x00,0x44,0x29,0x01)
#endif
#else
typedef struct IEmptyVolumeCacheCallBackVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IEmptyVolumeCacheCallBack *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IEmptyVolumeCacheCallBack *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IEmptyVolumeCacheCallBack *This);

    /*** IEmptyVolumeCacheCallBack methods ***/
    HRESULT (STDMETHODCALLTYPE *ScanProgress)(
        IEmptyVolumeCacheCallBack *This,
        DWORDLONG dwlSpaceUsed,
        DWORD dwFlags,
        LPCWSTR pcwszStatus);

    HRESULT (STDMETHODCALLTYPE *PurgeProgress)(
        IEmptyVolumeCacheCallBack *This,
        DWORDLONG dwlSpaceFreed,
        DWORDLONG dwlSpaceToFree,
        DWORD dwFlags,
        LPCWSTR pcwszStatus);

    END_INTERFACE
} IEmptyVolumeCacheCallBackVtbl;

interface IEmptyVolumeCacheCallBack {
    CONST_VTBL IEmptyVolumeCacheCallBackVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IEmptyVolumeCacheCallBack_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IEmptyVolumeCacheCallBack_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IEmptyVolumeCacheCallBack_Release(This) (This)->lpVtbl->Release(This)
/*** IEmptyVolumeCacheCallBack methods ***/
#define IEmptyVolumeCacheCallBack_ScanProgress(This,dwlSpaceUsed,dwFlags,pcwszStatus) (This)->lpVtbl->ScanProgress(This,dwlSpaceUsed,dwFlags,pcwszStatus)
#define IEmptyVolumeCacheCallBack_PurgeProgress(This,dwlSpaceFreed,dwlSpaceToFree,dwFlags,pcwszStatus) (This)->lpVtbl->PurgeProgress(This,dwlSpaceFreed,dwlSpaceToFree,dwFlags,pcwszStatus)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IEmptyVolumeCacheCallBack_QueryInterface(IEmptyVolumeCacheCallBack* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IEmptyVolumeCacheCallBack_AddRef(IEmptyVolumeCacheCallBack* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IEmptyVolumeCacheCallBack_Release(IEmptyVolumeCacheCallBack* This) {
    return This->lpVtbl->Release(This);
}
/*** IEmptyVolumeCacheCallBack methods ***/
static FORCEINLINE HRESULT IEmptyVolumeCacheCallBack_ScanProgress(IEmptyVolumeCacheCallBack* This,DWORDLONG dwlSpaceUsed,DWORD dwFlags,LPCWSTR pcwszStatus) {
    return This->lpVtbl->ScanProgress(This,dwlSpaceUsed,dwFlags,pcwszStatus);
}
static FORCEINLINE HRESULT IEmptyVolumeCacheCallBack_PurgeProgress(IEmptyVolumeCacheCallBack* This,DWORDLONG dwlSpaceFreed,DWORDLONG dwlSpaceToFree,DWORD dwFlags,LPCWSTR pcwszStatus) {
    return This->lpVtbl->PurgeProgress(This,dwlSpaceFreed,dwlSpaceToFree,dwFlags,pcwszStatus);
}
#endif
#endif

#endif


#endif  /* __IEmptyVolumeCacheCallBack_INTERFACE_DEFINED__ */

#endif
#ifndef _LPEMPTYVOLUMECACHE_DEFINED
#define _LPEMPTYVOLUMECACHE_DEFINED
/*****************************************************************************
 * IEmptyVolumeCache interface
 */
#ifndef __IEmptyVolumeCache_INTERFACE_DEFINED__
#define __IEmptyVolumeCache_INTERFACE_DEFINED__

typedef IEmptyVolumeCache *LPEMPTYVOLUMECACHE;
DEFINE_GUID(IID_IEmptyVolumeCache, 0x8fce5227, 0x04da, 0x11d1, 0xa0,0x04, 0x00,0x80,0x5f,0x8a,0xbe,0x06);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("8fce5227-04da-11d1-a004-00805f8abe06")
IEmptyVolumeCache : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE Initialize(
        HKEY hkRegKey,
        LPCWSTR pcwszVolume,
        LPWSTR *ppwszDisplayName,
        LPWSTR *ppwszDescription,
        DWORD *pdwFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetSpaceUsed(
        DWORDLONG *pdwlSpaceUsed,
        IEmptyVolumeCacheCallBack *picb) = 0;

    virtual HRESULT STDMETHODCALLTYPE Purge(
        DWORDLONG dwlSpaceToFree,
        IEmptyVolumeCacheCallBack *picb) = 0;

    virtual HRESULT STDMETHODCALLTYPE ShowProperties(
        HWND hwnd) = 0;

    virtual HRESULT STDMETHODCALLTYPE Deactivate(
        DWORD *pdwFlags) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IEmptyVolumeCache, 0x8fce5227, 0x04da, 0x11d1, 0xa0,0x04, 0x00,0x80,0x5f,0x8a,0xbe,0x06)
#endif
#else
typedef struct IEmptyVolumeCacheVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IEmptyVolumeCache *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IEmptyVolumeCache *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IEmptyVolumeCache *This);

    /*** IEmptyVolumeCache methods ***/
    HRESULT (STDMETHODCALLTYPE *Initialize)(
        IEmptyVolumeCache *This,
        HKEY hkRegKey,
        LPCWSTR pcwszVolume,
        LPWSTR *ppwszDisplayName,
        LPWSTR *ppwszDescription,
        DWORD *pdwFlags);

    HRESULT (STDMETHODCALLTYPE *GetSpaceUsed)(
        IEmptyVolumeCache *This,
        DWORDLONG *pdwlSpaceUsed,
        IEmptyVolumeCacheCallBack *picb);

    HRESULT (STDMETHODCALLTYPE *Purge)(
        IEmptyVolumeCache *This,
        DWORDLONG dwlSpaceToFree,
        IEmptyVolumeCacheCallBack *picb);

    HRESULT (STDMETHODCALLTYPE *ShowProperties)(
        IEmptyVolumeCache *This,
        HWND hwnd);

    HRESULT (STDMETHODCALLTYPE *Deactivate)(
        IEmptyVolumeCache *This,
        DWORD *pdwFlags);

    END_INTERFACE
} IEmptyVolumeCacheVtbl;

interface IEmptyVolumeCache {
    CONST_VTBL IEmptyVolumeCacheVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IEmptyVolumeCache_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IEmptyVolumeCache_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IEmptyVolumeCache_Release(This) (This)->lpVtbl->Release(This)
/*** IEmptyVolumeCache methods ***/
#define IEmptyVolumeCache_Initialize(This,hkRegKey,pcwszVolume,ppwszDisplayName,ppwszDescription,pdwFlags) (This)->lpVtbl->Initialize(This,hkRegKey,pcwszVolume,ppwszDisplayName,ppwszDescription,pdwFlags)
#define IEmptyVolumeCache_GetSpaceUsed(This,pdwlSpaceUsed,picb) (This)->lpVtbl->GetSpaceUsed(This,pdwlSpaceUsed,picb)
#define IEmptyVolumeCache_Purge(This,dwlSpaceToFree,picb) (This)->lpVtbl->Purge(This,dwlSpaceToFree,picb)
#define IEmptyVolumeCache_ShowProperties(This,hwnd) (This)->lpVtbl->ShowProperties(This,hwnd)
#define IEmptyVolumeCache_Deactivate(This,pdwFlags) (This)->lpVtbl->Deactivate(This,pdwFlags)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IEmptyVolumeCache_QueryInterface(IEmptyVolumeCache* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IEmptyVolumeCache_AddRef(IEmptyVolumeCache* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IEmptyVolumeCache_Release(IEmptyVolumeCache* This) {
    return This->lpVtbl->Release(This);
}
/*** IEmptyVolumeCache methods ***/
static FORCEINLINE HRESULT IEmptyVolumeCache_Initialize(IEmptyVolumeCache* This,HKEY hkRegKey,LPCWSTR pcwszVolume,LPWSTR *ppwszDisplayName,LPWSTR *ppwszDescription,DWORD *pdwFlags) {
    return This->lpVtbl->Initialize(This,hkRegKey,pcwszVolume,ppwszDisplayName,ppwszDescription,pdwFlags);
}
static FORCEINLINE HRESULT IEmptyVolumeCache_GetSpaceUsed(IEmptyVolumeCache* This,DWORDLONG *pdwlSpaceUsed,IEmptyVolumeCacheCallBack *picb) {
    return This->lpVtbl->GetSpaceUsed(This,pdwlSpaceUsed,picb);
}
static FORCEINLINE HRESULT IEmptyVolumeCache_Purge(IEmptyVolumeCache* This,DWORDLONG dwlSpaceToFree,IEmptyVolumeCacheCallBack *picb) {
    return This->lpVtbl->Purge(This,dwlSpaceToFree,picb);
}
static FORCEINLINE HRESULT IEmptyVolumeCache_ShowProperties(IEmptyVolumeCache* This,HWND hwnd) {
    return This->lpVtbl->ShowProperties(This,hwnd);
}
static FORCEINLINE HRESULT IEmptyVolumeCache_Deactivate(IEmptyVolumeCache* This,DWORD *pdwFlags) {
    return This->lpVtbl->Deactivate(This,pdwFlags);
}
#endif
#endif

#endif


#endif  /* __IEmptyVolumeCache_INTERFACE_DEFINED__ */

#endif
#ifndef _LPEMPTYVOLUMECACHE2_DEFINED
#define _LPEMPTYVOLUMECACHE2_DEFINED
/*****************************************************************************
 * IEmptyVolumeCache2 interface
 */
#ifndef __IEmptyVolumeCache2_INTERFACE_DEFINED__
#define __IEmptyVolumeCache2_INTERFACE_DEFINED__

typedef IEmptyVolumeCache2 *LPEMPTYVOLUMECACHE2;
DEFINE_GUID(IID_IEmptyVolumeCache2, 0x02b7e3ba, 0x4db3, 0x11d2, 0xb2,0xd9, 0x00,0xc0,0x4f,0x8e,0xec,0x8c);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("02b7e3ba-4db3-11d2-b2d9-00c04f8eec8c")
IEmptyVolumeCache2 : public IEmptyVolumeCache
{
    virtual HRESULT STDMETHODCALLTYPE InitializeEx(
        HKEY hkRegKey,
        LPCWSTR pcwszVolume,
        LPCWSTR pcwszKeyName,
        LPWSTR *ppwszDisplayName,
        LPWSTR *ppwszDescription,
        LPWSTR *ppwszBtnText,
        DWORD *pdwFlags) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IEmptyVolumeCache2, 0x02b7e3ba, 0x4db3, 0x11d2, 0xb2,0xd9, 0x00,0xc0,0x4f,0x8e,0xec,0x8c)
#endif
#else
typedef struct IEmptyVolumeCache2Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IEmptyVolumeCache2 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IEmptyVolumeCache2 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IEmptyVolumeCache2 *This);

    /*** IEmptyVolumeCache methods ***/
    HRESULT (STDMETHODCALLTYPE *Initialize)(
        IEmptyVolumeCache2 *This,
        HKEY hkRegKey,
        LPCWSTR pcwszVolume,
        LPWSTR *ppwszDisplayName,
        LPWSTR *ppwszDescription,
        DWORD *pdwFlags);

    HRESULT (STDMETHODCALLTYPE *GetSpaceUsed)(
        IEmptyVolumeCache2 *This,
        DWORDLONG *pdwlSpaceUsed,
        IEmptyVolumeCacheCallBack *picb);

    HRESULT (STDMETHODCALLTYPE *Purge)(
        IEmptyVolumeCache2 *This,
        DWORDLONG dwlSpaceToFree,
        IEmptyVolumeCacheCallBack *picb);

    HRESULT (STDMETHODCALLTYPE *ShowProperties)(
        IEmptyVolumeCache2 *This,
        HWND hwnd);

    HRESULT (STDMETHODCALLTYPE *Deactivate)(
        IEmptyVolumeCache2 *This,
        DWORD *pdwFlags);

    /*** IEmptyVolumeCache2 methods ***/
    HRESULT (STDMETHODCALLTYPE *InitializeEx)(
        IEmptyVolumeCache2 *This,
        HKEY hkRegKey,
        LPCWSTR pcwszVolume,
        LPCWSTR pcwszKeyName,
        LPWSTR *ppwszDisplayName,
        LPWSTR *ppwszDescription,
        LPWSTR *ppwszBtnText,
        DWORD *pdwFlags);

    END_INTERFACE
} IEmptyVolumeCache2Vtbl;

interface IEmptyVolumeCache2 {
    CONST_VTBL IEmptyVolumeCache2Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IEmptyVolumeCache2_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IEmptyVolumeCache2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IEmptyVolumeCache2_Release(This) (This)->lpVtbl->Release(This)
/*** IEmptyVolumeCache methods ***/
#define IEmptyVolumeCache2_Initialize(This,hkRegKey,pcwszVolume,ppwszDisplayName,ppwszDescription,pdwFlags) (This)->lpVtbl->Initialize(This,hkRegKey,pcwszVolume,ppwszDisplayName,ppwszDescription,pdwFlags)
#define IEmptyVolumeCache2_GetSpaceUsed(This,pdwlSpaceUsed,picb) (This)->lpVtbl->GetSpaceUsed(This,pdwlSpaceUsed,picb)
#define IEmptyVolumeCache2_Purge(This,dwlSpaceToFree,picb) (This)->lpVtbl->Purge(This,dwlSpaceToFree,picb)
#define IEmptyVolumeCache2_ShowProperties(This,hwnd) (This)->lpVtbl->ShowProperties(This,hwnd)
#define IEmptyVolumeCache2_Deactivate(This,pdwFlags) (This)->lpVtbl->Deactivate(This,pdwFlags)
/*** IEmptyVolumeCache2 methods ***/
#define IEmptyVolumeCache2_InitializeEx(This,hkRegKey,pcwszVolume,pcwszKeyName,ppwszDisplayName,ppwszDescription,ppwszBtnText,pdwFlags) (This)->lpVtbl->InitializeEx(This,hkRegKey,pcwszVolume,pcwszKeyName,ppwszDisplayName,ppwszDescription,ppwszBtnText,pdwFlags)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IEmptyVolumeCache2_QueryInterface(IEmptyVolumeCache2* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IEmptyVolumeCache2_AddRef(IEmptyVolumeCache2* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IEmptyVolumeCache2_Release(IEmptyVolumeCache2* This) {
    return This->lpVtbl->Release(This);
}
/*** IEmptyVolumeCache methods ***/
static FORCEINLINE HRESULT IEmptyVolumeCache2_Initialize(IEmptyVolumeCache2* This,HKEY hkRegKey,LPCWSTR pcwszVolume,LPWSTR *ppwszDisplayName,LPWSTR *ppwszDescription,DWORD *pdwFlags) {
    return This->lpVtbl->Initialize(This,hkRegKey,pcwszVolume,ppwszDisplayName,ppwszDescription,pdwFlags);
}
static FORCEINLINE HRESULT IEmptyVolumeCache2_GetSpaceUsed(IEmptyVolumeCache2* This,DWORDLONG *pdwlSpaceUsed,IEmptyVolumeCacheCallBack *picb) {
    return This->lpVtbl->GetSpaceUsed(This,pdwlSpaceUsed,picb);
}
static FORCEINLINE HRESULT IEmptyVolumeCache2_Purge(IEmptyVolumeCache2* This,DWORDLONG dwlSpaceToFree,IEmptyVolumeCacheCallBack *picb) {
    return This->lpVtbl->Purge(This,dwlSpaceToFree,picb);
}
static FORCEINLINE HRESULT IEmptyVolumeCache2_ShowProperties(IEmptyVolumeCache2* This,HWND hwnd) {
    return This->lpVtbl->ShowProperties(This,hwnd);
}
static FORCEINLINE HRESULT IEmptyVolumeCache2_Deactivate(IEmptyVolumeCache2* This,DWORD *pdwFlags) {
    return This->lpVtbl->Deactivate(This,pdwFlags);
}
/*** IEmptyVolumeCache2 methods ***/
static FORCEINLINE HRESULT IEmptyVolumeCache2_InitializeEx(IEmptyVolumeCache2* This,HKEY hkRegKey,LPCWSTR pcwszVolume,LPCWSTR pcwszKeyName,LPWSTR *ppwszDisplayName,LPWSTR *ppwszDescription,LPWSTR *ppwszBtnText,DWORD *pdwFlags) {
    return This->lpVtbl->InitializeEx(This,hkRegKey,pcwszVolume,pcwszKeyName,ppwszDisplayName,ppwszDescription,ppwszBtnText,pdwFlags);
}
#endif
#endif

#endif


#endif  /* __IEmptyVolumeCache2_INTERFACE_DEFINED__ */

#endif
#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */
/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER HWND_UserSize     (ULONG *, ULONG, HWND *);
unsigned char * __RPC_USER HWND_UserMarshal  (ULONG *, unsigned char *, HWND *);
unsigned char * __RPC_USER HWND_UserUnmarshal(ULONG *, unsigned char *, HWND *);
void            __RPC_USER HWND_UserFree     (ULONG *, HWND *);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __emptyvc_h__ */
