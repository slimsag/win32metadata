/*** Autogenerated by WIDL 5.0 from ./workspaceruntimeclientext.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __workspaceruntimeclientext_h__
#define __workspaceruntimeclientext_h__

/* Forward declarations */

#ifndef __IWorkspaceClientExt_FWD_DEFINED__
#define __IWorkspaceClientExt_FWD_DEFINED__
typedef interface IWorkspaceClientExt IWorkspaceClientExt;
#ifdef __cplusplus
interface IWorkspaceClientExt;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <oaidl.h>
#include <ocidl.h>

#ifdef __cplusplus
extern "C" {
#endif

#include <winapifamily.h>
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
/*****************************************************************************
 * IWorkspaceClientExt interface
 */
#ifndef __IWorkspaceClientExt_INTERFACE_DEFINED__
#define __IWorkspaceClientExt_INTERFACE_DEFINED__

DEFINE_GUID(IID_IWorkspaceClientExt, 0x12b952f4, 0x41ca, 0x4f21, 0xa8,0x29, 0xa6,0xd0,0x7d,0x9a,0x16,0xe5);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("12b952f4-41ca-4f21-a829-a6d07d9a16e5")
IWorkspaceClientExt : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE GetResourceId(
        BSTR *bstrWorkspaceId) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetResourceDisplayName(
        BSTR *bstrWorkspaceDisplayName) = 0;

    virtual HRESULT STDMETHODCALLTYPE IssueDisconnect(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IWorkspaceClientExt, 0x12b952f4, 0x41ca, 0x4f21, 0xa8,0x29, 0xa6,0xd0,0x7d,0x9a,0x16,0xe5)
#endif
#else
typedef struct IWorkspaceClientExtVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IWorkspaceClientExt *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IWorkspaceClientExt *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IWorkspaceClientExt *This);

    /*** IWorkspaceClientExt methods ***/
    HRESULT (STDMETHODCALLTYPE *GetResourceId)(
        IWorkspaceClientExt *This,
        BSTR *bstrWorkspaceId);

    HRESULT (STDMETHODCALLTYPE *GetResourceDisplayName)(
        IWorkspaceClientExt *This,
        BSTR *bstrWorkspaceDisplayName);

    HRESULT (STDMETHODCALLTYPE *IssueDisconnect)(
        IWorkspaceClientExt *This);

    END_INTERFACE
} IWorkspaceClientExtVtbl;

interface IWorkspaceClientExt {
    CONST_VTBL IWorkspaceClientExtVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IWorkspaceClientExt_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IWorkspaceClientExt_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IWorkspaceClientExt_Release(This) (This)->lpVtbl->Release(This)
/*** IWorkspaceClientExt methods ***/
#define IWorkspaceClientExt_GetResourceId(This,bstrWorkspaceId) (This)->lpVtbl->GetResourceId(This,bstrWorkspaceId)
#define IWorkspaceClientExt_GetResourceDisplayName(This,bstrWorkspaceDisplayName) (This)->lpVtbl->GetResourceDisplayName(This,bstrWorkspaceDisplayName)
#define IWorkspaceClientExt_IssueDisconnect(This) (This)->lpVtbl->IssueDisconnect(This)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IWorkspaceClientExt_QueryInterface(IWorkspaceClientExt* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IWorkspaceClientExt_AddRef(IWorkspaceClientExt* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IWorkspaceClientExt_Release(IWorkspaceClientExt* This) {
    return This->lpVtbl->Release(This);
}
/*** IWorkspaceClientExt methods ***/
static FORCEINLINE HRESULT IWorkspaceClientExt_GetResourceId(IWorkspaceClientExt* This,BSTR *bstrWorkspaceId) {
    return This->lpVtbl->GetResourceId(This,bstrWorkspaceId);
}
static FORCEINLINE HRESULT IWorkspaceClientExt_GetResourceDisplayName(IWorkspaceClientExt* This,BSTR *bstrWorkspaceDisplayName) {
    return This->lpVtbl->GetResourceDisplayName(This,bstrWorkspaceDisplayName);
}
static FORCEINLINE HRESULT IWorkspaceClientExt_IssueDisconnect(IWorkspaceClientExt* This) {
    return This->lpVtbl->IssueDisconnect(This);
}
#endif
#endif

#endif


#endif  /* __IWorkspaceClientExt_INTERFACE_DEFINED__ */

#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */
/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER BSTR_UserSize     (ULONG *, ULONG, BSTR *);
unsigned char * __RPC_USER BSTR_UserMarshal  (ULONG *, unsigned char *, BSTR *);
unsigned char * __RPC_USER BSTR_UserUnmarshal(ULONG *, unsigned char *, BSTR *);
void            __RPC_USER BSTR_UserFree     (ULONG *, BSTR *);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __workspaceruntimeclientext_h__ */
