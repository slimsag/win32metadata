/*** Autogenerated by WIDL 5.0 from ./sharewindowcommandsourceinterop.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __sharewindowcommandsourceinterop_h__
#define __sharewindowcommandsourceinterop_h__

/* Forward declarations */

#ifndef __IShareWindowCommandEventArgsInterop_FWD_DEFINED__
#define __IShareWindowCommandEventArgsInterop_FWD_DEFINED__
typedef interface IShareWindowCommandEventArgsInterop IShareWindowCommandEventArgsInterop;
#ifdef __cplusplus
interface IShareWindowCommandEventArgsInterop;
#endif /* __cplusplus */
#endif

#ifndef __IShareWindowCommandSourceInterop_FWD_DEFINED__
#define __IShareWindowCommandSourceInterop_FWD_DEFINED__
typedef interface IShareWindowCommandSourceInterop IShareWindowCommandSourceInterop;
#ifdef __cplusplus
interface IShareWindowCommandSourceInterop;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <objidl.h>

#ifdef __cplusplus
extern "C" {
#endif

#include <winapifamily.h>
#if (NTDDI_VERSION >= NTDDI_WIN10_CO)
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
/*****************************************************************************
 * IShareWindowCommandEventArgsInterop interface
 */
#ifndef __IShareWindowCommandEventArgsInterop_INTERFACE_DEFINED__
#define __IShareWindowCommandEventArgsInterop_INTERFACE_DEFINED__

DEFINE_GUID(IID_IShareWindowCommandEventArgsInterop, 0x6571a721, 0x643d, 0x43d4, 0xac,0xa4, 0x6b,0x6f,0x5f,0x30,0xf1,0xad);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("6571a721-643d-43d4-aca4-6b6f5f30f1ad")
IShareWindowCommandEventArgsInterop : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE GetWindow(
        HWND *value) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IShareWindowCommandEventArgsInterop, 0x6571a721, 0x643d, 0x43d4, 0xac,0xa4, 0x6b,0x6f,0x5f,0x30,0xf1,0xad)
#endif
#else
typedef struct IShareWindowCommandEventArgsInteropVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IShareWindowCommandEventArgsInterop *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IShareWindowCommandEventArgsInterop *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IShareWindowCommandEventArgsInterop *This);

    /*** IShareWindowCommandEventArgsInterop methods ***/
    HRESULT (STDMETHODCALLTYPE *GetWindow)(
        IShareWindowCommandEventArgsInterop *This,
        HWND *value);

    END_INTERFACE
} IShareWindowCommandEventArgsInteropVtbl;

interface IShareWindowCommandEventArgsInterop {
    CONST_VTBL IShareWindowCommandEventArgsInteropVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IShareWindowCommandEventArgsInterop_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IShareWindowCommandEventArgsInterop_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IShareWindowCommandEventArgsInterop_Release(This) (This)->lpVtbl->Release(This)
/*** IShareWindowCommandEventArgsInterop methods ***/
#define IShareWindowCommandEventArgsInterop_GetWindow(This,value) (This)->lpVtbl->GetWindow(This,value)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IShareWindowCommandEventArgsInterop_QueryInterface(IShareWindowCommandEventArgsInterop* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IShareWindowCommandEventArgsInterop_AddRef(IShareWindowCommandEventArgsInterop* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IShareWindowCommandEventArgsInterop_Release(IShareWindowCommandEventArgsInterop* This) {
    return This->lpVtbl->Release(This);
}
/*** IShareWindowCommandEventArgsInterop methods ***/
static FORCEINLINE HRESULT IShareWindowCommandEventArgsInterop_GetWindow(IShareWindowCommandEventArgsInterop* This,HWND *value) {
    return This->lpVtbl->GetWindow(This,value);
}
#endif
#endif

#endif


#endif  /* __IShareWindowCommandEventArgsInterop_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IShareWindowCommandSourceInterop interface
 */
#ifndef __IShareWindowCommandSourceInterop_INTERFACE_DEFINED__
#define __IShareWindowCommandSourceInterop_INTERFACE_DEFINED__

DEFINE_GUID(IID_IShareWindowCommandSourceInterop, 0x461a191f, 0x8424, 0x43a6, 0xa0,0xfa, 0x34,0x51,0xa2,0x2f,0x56,0xab);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("461a191f-8424-43a6-a0fa-3451a22f56ab")
IShareWindowCommandSourceInterop : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE GetForWindow(
        HWND appWindow,
        REFIID riid,
        void **shareWindowCommandSource) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IShareWindowCommandSourceInterop, 0x461a191f, 0x8424, 0x43a6, 0xa0,0xfa, 0x34,0x51,0xa2,0x2f,0x56,0xab)
#endif
#else
typedef struct IShareWindowCommandSourceInteropVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IShareWindowCommandSourceInterop *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IShareWindowCommandSourceInterop *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IShareWindowCommandSourceInterop *This);

    /*** IShareWindowCommandSourceInterop methods ***/
    HRESULT (STDMETHODCALLTYPE *GetForWindow)(
        IShareWindowCommandSourceInterop *This,
        HWND appWindow,
        REFIID riid,
        void **shareWindowCommandSource);

    END_INTERFACE
} IShareWindowCommandSourceInteropVtbl;

interface IShareWindowCommandSourceInterop {
    CONST_VTBL IShareWindowCommandSourceInteropVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IShareWindowCommandSourceInterop_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IShareWindowCommandSourceInterop_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IShareWindowCommandSourceInterop_Release(This) (This)->lpVtbl->Release(This)
/*** IShareWindowCommandSourceInterop methods ***/
#define IShareWindowCommandSourceInterop_GetForWindow(This,appWindow,riid,shareWindowCommandSource) (This)->lpVtbl->GetForWindow(This,appWindow,riid,shareWindowCommandSource)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IShareWindowCommandSourceInterop_QueryInterface(IShareWindowCommandSourceInterop* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IShareWindowCommandSourceInterop_AddRef(IShareWindowCommandSourceInterop* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IShareWindowCommandSourceInterop_Release(IShareWindowCommandSourceInterop* This) {
    return This->lpVtbl->Release(This);
}
/*** IShareWindowCommandSourceInterop methods ***/
static FORCEINLINE HRESULT IShareWindowCommandSourceInterop_GetForWindow(IShareWindowCommandSourceInterop* This,HWND appWindow,REFIID riid,void **shareWindowCommandSource) {
    return This->lpVtbl->GetForWindow(This,appWindow,riid,shareWindowCommandSource);
}
#endif
#endif

#endif


#endif  /* __IShareWindowCommandSourceInterop_INTERFACE_DEFINED__ */

#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */
#endif //(NTDDI_VERSION >= NTDDI_WIN10_CO)
/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER HWND_UserSize     (ULONG *, ULONG, HWND *);
unsigned char * __RPC_USER HWND_UserMarshal  (ULONG *, unsigned char *, HWND *);
unsigned char * __RPC_USER HWND_UserUnmarshal(ULONG *, unsigned char *, HWND *);
void            __RPC_USER HWND_UserFree     (ULONG *, HWND *);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __sharewindowcommandsourceinterop_h__ */
