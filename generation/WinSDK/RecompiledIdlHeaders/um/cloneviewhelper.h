/*** Autogenerated by WIDL 5.0 from ./cloneviewhelper.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __cloneviewhelper_h__
#define __cloneviewhelper_h__

/* Forward declarations */

#ifndef __ICloneViewHelper_FWD_DEFINED__
#define __ICloneViewHelper_FWD_DEFINED__
typedef interface ICloneViewHelper ICloneViewHelper;
#ifdef __cplusplus
interface ICloneViewHelper;
#endif /* __cplusplus */
#endif

#ifndef __IViewHelper_FWD_DEFINED__
#define __IViewHelper_FWD_DEFINED__
typedef interface IViewHelper IViewHelper;
#ifdef __cplusplus
interface IViewHelper;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <oaidl.h>
#include <ocidl.h>

#ifdef __cplusplus
extern "C" {
#endif

#include <winapifamily.h>
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
#define GETCONNECTEDIDS_TARGET 0
#define GETCONNECTEDIDS_SOURCE 1
#define S_INIT 2
// 0 == TMM's passed in configuration was applied
#define SETCONFIGURATION_STATUS_APPLIED 0
// 1 == TMM's passed in configuration was applied, with additional proprietary IHV settings
#define SETCONFIGURATION_STATUS_ADDITIONAL 1
// 2 == TMM's passed in configuration was overridden and IHV's own settings were applied
#define SETCONFIGURATION_STATUS_OVERRIDDEN 2

// Topology Data

typedef struct tagSources
{
    ULONG sourceId;
    int numTargets;
    ULONG aTargets[1];
} Sources;

typedef struct tagAdapter
{
    WCHAR AdapterName[128];
    int numSources;
    Sources sources[1];
} Adapter;

typedef struct tagAdapters
{
    int numAdapters;
    Adapter adapter[1];
} Adapters;

// Display Mode Data

typedef struct tagDisplayMode
{
    WCHAR DeviceName[32];
    DEVMODEW devMode;
} DisplayMode;

typedef struct tagDisplayModes
{
    int numDisplayModes;
    DisplayMode displayMode[1];
} DisplayModes;

/*****************************************************************************
 * ICloneViewHelper interface
 */
#ifndef __ICloneViewHelper_INTERFACE_DEFINED__
#define __ICloneViewHelper_INTERFACE_DEFINED__

DEFINE_GUID(IID_ICloneViewHelper, 0xf6a3d4c4, 0x5632, 0x4d83, 0xb0,0xa1, 0xfb,0x88,0x71,0x2b,0x1e,0xb7);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("f6a3d4c4-5632-4d83-b0a1-fb88712b1eb7")
ICloneViewHelper : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE GetConnectedIDs(
        LPCWSTR wszAdaptorName,
        ULONG *pulCount,
        ULONG *pulID,
        ULONG ulFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetActiveTopology(
        LPCWSTR wszAdaptorName,
        ULONG ulSourceID,
        ULONG *pulCount,
        ULONG *pulTargetID) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetActiveTopology(
        LPCWSTR wszAdaptorName,
        ULONG ulSourceID,
        ULONG ulCount,
        ULONG *pulTargetID) = 0;

    virtual HRESULT STDMETHODCALLTYPE Commit(
        BOOL fFinalCall) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ICloneViewHelper, 0xf6a3d4c4, 0x5632, 0x4d83, 0xb0,0xa1, 0xfb,0x88,0x71,0x2b,0x1e,0xb7)
#endif
#else
typedef struct ICloneViewHelperVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ICloneViewHelper *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ICloneViewHelper *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ICloneViewHelper *This);

    /*** ICloneViewHelper methods ***/
    HRESULT (STDMETHODCALLTYPE *GetConnectedIDs)(
        ICloneViewHelper *This,
        LPCWSTR wszAdaptorName,
        ULONG *pulCount,
        ULONG *pulID,
        ULONG ulFlags);

    HRESULT (STDMETHODCALLTYPE *GetActiveTopology)(
        ICloneViewHelper *This,
        LPCWSTR wszAdaptorName,
        ULONG ulSourceID,
        ULONG *pulCount,
        ULONG *pulTargetID);

    HRESULT (STDMETHODCALLTYPE *SetActiveTopology)(
        ICloneViewHelper *This,
        LPCWSTR wszAdaptorName,
        ULONG ulSourceID,
        ULONG ulCount,
        ULONG *pulTargetID);

    HRESULT (STDMETHODCALLTYPE *Commit)(
        ICloneViewHelper *This,
        BOOL fFinalCall);

    END_INTERFACE
} ICloneViewHelperVtbl;

interface ICloneViewHelper {
    CONST_VTBL ICloneViewHelperVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ICloneViewHelper_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ICloneViewHelper_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ICloneViewHelper_Release(This) (This)->lpVtbl->Release(This)
/*** ICloneViewHelper methods ***/
#define ICloneViewHelper_GetConnectedIDs(This,wszAdaptorName,pulCount,pulID,ulFlags) (This)->lpVtbl->GetConnectedIDs(This,wszAdaptorName,pulCount,pulID,ulFlags)
#define ICloneViewHelper_GetActiveTopology(This,wszAdaptorName,ulSourceID,pulCount,pulTargetID) (This)->lpVtbl->GetActiveTopology(This,wszAdaptorName,ulSourceID,pulCount,pulTargetID)
#define ICloneViewHelper_SetActiveTopology(This,wszAdaptorName,ulSourceID,ulCount,pulTargetID) (This)->lpVtbl->SetActiveTopology(This,wszAdaptorName,ulSourceID,ulCount,pulTargetID)
#define ICloneViewHelper_Commit(This,fFinalCall) (This)->lpVtbl->Commit(This,fFinalCall)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ICloneViewHelper_QueryInterface(ICloneViewHelper* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ICloneViewHelper_AddRef(ICloneViewHelper* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ICloneViewHelper_Release(ICloneViewHelper* This) {
    return This->lpVtbl->Release(This);
}
/*** ICloneViewHelper methods ***/
static FORCEINLINE HRESULT ICloneViewHelper_GetConnectedIDs(ICloneViewHelper* This,LPCWSTR wszAdaptorName,ULONG *pulCount,ULONG *pulID,ULONG ulFlags) {
    return This->lpVtbl->GetConnectedIDs(This,wszAdaptorName,pulCount,pulID,ulFlags);
}
static FORCEINLINE HRESULT ICloneViewHelper_GetActiveTopology(ICloneViewHelper* This,LPCWSTR wszAdaptorName,ULONG ulSourceID,ULONG *pulCount,ULONG *pulTargetID) {
    return This->lpVtbl->GetActiveTopology(This,wszAdaptorName,ulSourceID,pulCount,pulTargetID);
}
static FORCEINLINE HRESULT ICloneViewHelper_SetActiveTopology(ICloneViewHelper* This,LPCWSTR wszAdaptorName,ULONG ulSourceID,ULONG ulCount,ULONG *pulTargetID) {
    return This->lpVtbl->SetActiveTopology(This,wszAdaptorName,ulSourceID,ulCount,pulTargetID);
}
static FORCEINLINE HRESULT ICloneViewHelper_Commit(ICloneViewHelper* This,BOOL fFinalCall) {
    return This->lpVtbl->Commit(This,fFinalCall);
}
#endif
#endif

#endif


#endif  /* __ICloneViewHelper_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IViewHelper interface
 */
#ifndef __IViewHelper_INTERFACE_DEFINED__
#define __IViewHelper_INTERFACE_DEFINED__

DEFINE_GUID(IID_IViewHelper, 0xe85ccef5, 0xaaaa, 0x47f0, 0xb5,0xe3, 0x61,0xf7,0xae,0xcd,0xc4,0xc1);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("e85ccef5-aaaa-47f0-b5e3-61f7aecdc4c1")
IViewHelper : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE GetConnectedIDs(
        LPCWSTR wszAdaptorName,
        ULONG *pulCount,
        ULONG *pulID,
        ULONG ulFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetActiveTopology(
        LPCWSTR wszAdaptorName,
        ULONG ulSourceID,
        ULONG *pulCount,
        ULONG *pulTargetID) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetActiveTopology(
        LPCWSTR wszAdaptorName,
        ULONG ulSourceID,
        ULONG ulCount,
        ULONG *pulTargetID) = 0;

    virtual HRESULT STDMETHODCALLTYPE Commit(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetConfiguration(
        IStream *pIStream,
        ULONG *pulStatus) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetProceedOnNewConfiguration(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IViewHelper, 0xe85ccef5, 0xaaaa, 0x47f0, 0xb5,0xe3, 0x61,0xf7,0xae,0xcd,0xc4,0xc1)
#endif
#else
typedef struct IViewHelperVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IViewHelper *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IViewHelper *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IViewHelper *This);

    /*** IViewHelper methods ***/
    HRESULT (STDMETHODCALLTYPE *GetConnectedIDs)(
        IViewHelper *This,
        LPCWSTR wszAdaptorName,
        ULONG *pulCount,
        ULONG *pulID,
        ULONG ulFlags);

    HRESULT (STDMETHODCALLTYPE *GetActiveTopology)(
        IViewHelper *This,
        LPCWSTR wszAdaptorName,
        ULONG ulSourceID,
        ULONG *pulCount,
        ULONG *pulTargetID);

    HRESULT (STDMETHODCALLTYPE *SetActiveTopology)(
        IViewHelper *This,
        LPCWSTR wszAdaptorName,
        ULONG ulSourceID,
        ULONG ulCount,
        ULONG *pulTargetID);

    HRESULT (STDMETHODCALLTYPE *Commit)(
        IViewHelper *This);

    HRESULT (STDMETHODCALLTYPE *SetConfiguration)(
        IViewHelper *This,
        IStream *pIStream,
        ULONG *pulStatus);

    HRESULT (STDMETHODCALLTYPE *GetProceedOnNewConfiguration)(
        IViewHelper *This);

    END_INTERFACE
} IViewHelperVtbl;

interface IViewHelper {
    CONST_VTBL IViewHelperVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IViewHelper_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IViewHelper_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IViewHelper_Release(This) (This)->lpVtbl->Release(This)
/*** IViewHelper methods ***/
#define IViewHelper_GetConnectedIDs(This,wszAdaptorName,pulCount,pulID,ulFlags) (This)->lpVtbl->GetConnectedIDs(This,wszAdaptorName,pulCount,pulID,ulFlags)
#define IViewHelper_GetActiveTopology(This,wszAdaptorName,ulSourceID,pulCount,pulTargetID) (This)->lpVtbl->GetActiveTopology(This,wszAdaptorName,ulSourceID,pulCount,pulTargetID)
#define IViewHelper_SetActiveTopology(This,wszAdaptorName,ulSourceID,ulCount,pulTargetID) (This)->lpVtbl->SetActiveTopology(This,wszAdaptorName,ulSourceID,ulCount,pulTargetID)
#define IViewHelper_Commit(This) (This)->lpVtbl->Commit(This)
#define IViewHelper_SetConfiguration(This,pIStream,pulStatus) (This)->lpVtbl->SetConfiguration(This,pIStream,pulStatus)
#define IViewHelper_GetProceedOnNewConfiguration(This) (This)->lpVtbl->GetProceedOnNewConfiguration(This)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IViewHelper_QueryInterface(IViewHelper* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IViewHelper_AddRef(IViewHelper* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IViewHelper_Release(IViewHelper* This) {
    return This->lpVtbl->Release(This);
}
/*** IViewHelper methods ***/
static FORCEINLINE HRESULT IViewHelper_GetConnectedIDs(IViewHelper* This,LPCWSTR wszAdaptorName,ULONG *pulCount,ULONG *pulID,ULONG ulFlags) {
    return This->lpVtbl->GetConnectedIDs(This,wszAdaptorName,pulCount,pulID,ulFlags);
}
static FORCEINLINE HRESULT IViewHelper_GetActiveTopology(IViewHelper* This,LPCWSTR wszAdaptorName,ULONG ulSourceID,ULONG *pulCount,ULONG *pulTargetID) {
    return This->lpVtbl->GetActiveTopology(This,wszAdaptorName,ulSourceID,pulCount,pulTargetID);
}
static FORCEINLINE HRESULT IViewHelper_SetActiveTopology(IViewHelper* This,LPCWSTR wszAdaptorName,ULONG ulSourceID,ULONG ulCount,ULONG *pulTargetID) {
    return This->lpVtbl->SetActiveTopology(This,wszAdaptorName,ulSourceID,ulCount,pulTargetID);
}
static FORCEINLINE HRESULT IViewHelper_Commit(IViewHelper* This) {
    return This->lpVtbl->Commit(This);
}
static FORCEINLINE HRESULT IViewHelper_SetConfiguration(IViewHelper* This,IStream *pIStream,ULONG *pulStatus) {
    return This->lpVtbl->SetConfiguration(This,pIStream,pulStatus);
}
static FORCEINLINE HRESULT IViewHelper_GetProceedOnNewConfiguration(IViewHelper* This) {
    return This->lpVtbl->GetProceedOnNewConfiguration(This);
}
#endif
#endif

#endif


#endif  /* __IViewHelper_INTERFACE_DEFINED__ */

#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */
/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __cloneviewhelper_h__ */
