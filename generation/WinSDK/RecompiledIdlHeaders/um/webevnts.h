/*** Autogenerated by WIDL 7.0-rc1 from ./webevnts.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __webevnts_h__
#define __webevnts_h__

/* Forward declarations */

#ifndef __IWebBrowserEventsService_FWD_DEFINED__
#define __IWebBrowserEventsService_FWD_DEFINED__
typedef interface IWebBrowserEventsService IWebBrowserEventsService;
#ifdef __cplusplus
interface IWebBrowserEventsService;
#endif /* __cplusplus */
#endif

#ifndef __IWebBrowserEventsUrlService_FWD_DEFINED__
#define __IWebBrowserEventsUrlService_FWD_DEFINED__
typedef interface IWebBrowserEventsUrlService IWebBrowserEventsUrlService;
#ifdef __cplusplus
interface IWebBrowserEventsUrlService;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <objidl.h>
#include <oleidl.h>

#ifdef __cplusplus
extern "C" {
#endif

//=--------------------------------------------------------------------------=
// webevnts.h
//=--------------------------------------------------------------------------=
// (C) Copyright Microsoft Corporation.  All Rights Reserved.
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
// PARTICULAR PURPOSE.
//=--------------------------------------------------------------------------=

#include <winapifamily.h>
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
#pragma comment(lib,"uuid.lib")

//---------------------------------------------------------------------------=
// IWebBrowserEventsService and IWebBrowserUrlForEvents Interfaces.

#ifndef __IWebBrowserEventsService_FWD_DEFINED__
#define __IWebBrowserEventsService_FWD_DEFINED__
typedef interface IWebBrowserEventsService IWebBrowserEventsService;
#ifdef __cplusplus
interface IWebBrowserEventsService;
#endif /* __cplusplus */
#endif

#ifndef __IWebBrowserUrlForEvents_FWD_DEFINED__
#define __IWebBrowserUrlForEvents_FWD_DEFINED__
typedef interface IWebBrowserUrlForEvents IWebBrowserUrlForEvents;
#ifdef __cplusplus
interface IWebBrowserUrlForEvents;
#endif /* __cplusplus */
#endif

#ifndef _LPWEBEVNTS_DEFINED
#define _LPWEBEVNTS_DEFINED
/*****************************************************************************
 * IWebBrowserEventsService interface
 */
#ifndef __IWebBrowserEventsService_INTERFACE_DEFINED__
#define __IWebBrowserEventsService_INTERFACE_DEFINED__

DEFINE_GUID(IID_IWebBrowserEventsService, 0x54a8f188, 0x9ebd, 0x4795, 0xad,0x16, 0x9b,0x49,0x45,0x11,0x96,0x36);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("54a8f188-9ebd-4795-ad16-9b4945119636")
IWebBrowserEventsService : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE FireBeforeNavigate2Event(
        VARIANT_BOOL *pfCancel) = 0;

    virtual HRESULT STDMETHODCALLTYPE FireNavigateComplete2Event(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE FireDownloadBeginEvent(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE FireDownloadCompleteEvent(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE FireDocumentCompleteEvent(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IWebBrowserEventsService, 0x54a8f188, 0x9ebd, 0x4795, 0xad,0x16, 0x9b,0x49,0x45,0x11,0x96,0x36)
#endif
#else
typedef struct IWebBrowserEventsServiceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IWebBrowserEventsService *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IWebBrowserEventsService *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IWebBrowserEventsService *This);

    /*** IWebBrowserEventsService methods ***/
    HRESULT (STDMETHODCALLTYPE *FireBeforeNavigate2Event)(
        IWebBrowserEventsService *This,
        VARIANT_BOOL *pfCancel);

    HRESULT (STDMETHODCALLTYPE *FireNavigateComplete2Event)(
        IWebBrowserEventsService *This);

    HRESULT (STDMETHODCALLTYPE *FireDownloadBeginEvent)(
        IWebBrowserEventsService *This);

    HRESULT (STDMETHODCALLTYPE *FireDownloadCompleteEvent)(
        IWebBrowserEventsService *This);

    HRESULT (STDMETHODCALLTYPE *FireDocumentCompleteEvent)(
        IWebBrowserEventsService *This);

    END_INTERFACE
} IWebBrowserEventsServiceVtbl;

interface IWebBrowserEventsService {
    CONST_VTBL IWebBrowserEventsServiceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IWebBrowserEventsService_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IWebBrowserEventsService_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IWebBrowserEventsService_Release(This) (This)->lpVtbl->Release(This)
/*** IWebBrowserEventsService methods ***/
#define IWebBrowserEventsService_FireBeforeNavigate2Event(This,pfCancel) (This)->lpVtbl->FireBeforeNavigate2Event(This,pfCancel)
#define IWebBrowserEventsService_FireNavigateComplete2Event(This) (This)->lpVtbl->FireNavigateComplete2Event(This)
#define IWebBrowserEventsService_FireDownloadBeginEvent(This) (This)->lpVtbl->FireDownloadBeginEvent(This)
#define IWebBrowserEventsService_FireDownloadCompleteEvent(This) (This)->lpVtbl->FireDownloadCompleteEvent(This)
#define IWebBrowserEventsService_FireDocumentCompleteEvent(This) (This)->lpVtbl->FireDocumentCompleteEvent(This)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IWebBrowserEventsService_QueryInterface(IWebBrowserEventsService* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IWebBrowserEventsService_AddRef(IWebBrowserEventsService* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IWebBrowserEventsService_Release(IWebBrowserEventsService* This) {
    return This->lpVtbl->Release(This);
}
/*** IWebBrowserEventsService methods ***/
static FORCEINLINE HRESULT IWebBrowserEventsService_FireBeforeNavigate2Event(IWebBrowserEventsService* This,VARIANT_BOOL *pfCancel) {
    return This->lpVtbl->FireBeforeNavigate2Event(This,pfCancel);
}
static FORCEINLINE HRESULT IWebBrowserEventsService_FireNavigateComplete2Event(IWebBrowserEventsService* This) {
    return This->lpVtbl->FireNavigateComplete2Event(This);
}
static FORCEINLINE HRESULT IWebBrowserEventsService_FireDownloadBeginEvent(IWebBrowserEventsService* This) {
    return This->lpVtbl->FireDownloadBeginEvent(This);
}
static FORCEINLINE HRESULT IWebBrowserEventsService_FireDownloadCompleteEvent(IWebBrowserEventsService* This) {
    return This->lpVtbl->FireDownloadCompleteEvent(This);
}
static FORCEINLINE HRESULT IWebBrowserEventsService_FireDocumentCompleteEvent(IWebBrowserEventsService* This) {
    return This->lpVtbl->FireDocumentCompleteEvent(This);
}
#endif
#endif

#endif


#endif  /* __IWebBrowserEventsService_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IWebBrowserEventsUrlService interface
 */
#ifndef __IWebBrowserEventsUrlService_INTERFACE_DEFINED__
#define __IWebBrowserEventsUrlService_INTERFACE_DEFINED__

DEFINE_GUID(IID_IWebBrowserEventsUrlService, 0x87cc5d04, 0xeafa, 0x4833, 0x98,0x20, 0x8f,0x98,0x65,0x30,0xcc,0x00);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("87cc5d04-eafa-4833-9820-8f986530cc00")
IWebBrowserEventsUrlService : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE GetUrlForEvents(
        BSTR *pUrl) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IWebBrowserEventsUrlService, 0x87cc5d04, 0xeafa, 0x4833, 0x98,0x20, 0x8f,0x98,0x65,0x30,0xcc,0x00)
#endif
#else
typedef struct IWebBrowserEventsUrlServiceVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IWebBrowserEventsUrlService *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IWebBrowserEventsUrlService *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IWebBrowserEventsUrlService *This);

    /*** IWebBrowserEventsUrlService methods ***/
    HRESULT (STDMETHODCALLTYPE *GetUrlForEvents)(
        IWebBrowserEventsUrlService *This,
        BSTR *pUrl);

    END_INTERFACE
} IWebBrowserEventsUrlServiceVtbl;

interface IWebBrowserEventsUrlService {
    CONST_VTBL IWebBrowserEventsUrlServiceVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IWebBrowserEventsUrlService_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IWebBrowserEventsUrlService_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IWebBrowserEventsUrlService_Release(This) (This)->lpVtbl->Release(This)
/*** IWebBrowserEventsUrlService methods ***/
#define IWebBrowserEventsUrlService_GetUrlForEvents(This,pUrl) (This)->lpVtbl->GetUrlForEvents(This,pUrl)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IWebBrowserEventsUrlService_QueryInterface(IWebBrowserEventsUrlService* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IWebBrowserEventsUrlService_AddRef(IWebBrowserEventsUrlService* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IWebBrowserEventsUrlService_Release(IWebBrowserEventsUrlService* This) {
    return This->lpVtbl->Release(This);
}
/*** IWebBrowserEventsUrlService methods ***/
static FORCEINLINE HRESULT IWebBrowserEventsUrlService_GetUrlForEvents(IWebBrowserEventsUrlService* This,BSTR *pUrl) {
    return This->lpVtbl->GetUrlForEvents(This,pUrl);
}
#endif
#endif

#endif


#endif  /* __IWebBrowserEventsUrlService_INTERFACE_DEFINED__ */

#endif
#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */
/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER BSTR_UserSize     (ULONG *, ULONG, BSTR *);
unsigned char * __RPC_USER BSTR_UserMarshal  (ULONG *, unsigned char *, BSTR *);
unsigned char * __RPC_USER BSTR_UserUnmarshal(ULONG *, unsigned char *, BSTR *);
void            __RPC_USER BSTR_UserFree     (ULONG *, BSTR *);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __webevnts_h__ */
