/*** Autogenerated by WIDL 7.0-rc1 from ./wcsplugin.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __wcsplugin_h__
#define __wcsplugin_h__

/* Forward declarations */

#ifndef __IDeviceModelPlugIn_FWD_DEFINED__
#define __IDeviceModelPlugIn_FWD_DEFINED__
typedef interface IDeviceModelPlugIn IDeviceModelPlugIn;
#ifdef __cplusplus
interface IDeviceModelPlugIn;
#endif /* __cplusplus */
#endif

#ifndef __IGamutMapModelPlugIn_FWD_DEFINED__
#define __IGamutMapModelPlugIn_FWD_DEFINED__
typedef interface IGamutMapModelPlugIn IGamutMapModelPlugIn;
#ifdef __cplusplus
interface IGamutMapModelPlugIn;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <oaidl.h>

#ifdef __cplusplus
extern "C" {
#endif

//+-------------------------------------------------------------------------
//
//  Copyright (c) Microsoft Corporation.  All rights reserved.
//
//--------------------------------------------------------------------------
#include <winapifamily.h>
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
typedef struct _XYZColorF {
    FLOAT X;
    FLOAT Y;
    FLOAT Z;
} XYZColorF;
typedef struct _JChColorF {
    FLOAT J;
    FLOAT C;
    FLOAT h;
} JChColorF;
typedef struct _JabColorF {
    FLOAT J;
    FLOAT a;
    FLOAT b;
} JabColorF;
typedef struct _GamutShellTriangle {
    UINT aVertexIndex[3];
} GamutShellTriangle;
typedef struct _GamutShell {
    FLOAT JMin;
    FLOAT JMax;
    UINT cVertices;
    UINT cTriangles;
    JabColorF *pVertices;
    GamutShellTriangle *pTriangles;
} GamutShell;
typedef struct _PrimaryJabColors {
    JabColorF red;
    JabColorF yellow;
    JabColorF green;
    JabColorF cyan;
    JabColorF blue;
    JabColorF magenta;
    JabColorF black;
    JabColorF white;
} PrimaryJabColors;
typedef struct _PrimaryXYZColors {
    XYZColorF red;
    XYZColorF yellow;
    XYZColorF green;
    XYZColorF cyan;
    XYZColorF blue;
    XYZColorF magenta;
    XYZColorF black;
    XYZColorF white;
} PrimaryXYZColors;
typedef struct _GamutBoundaryDescription {
    PrimaryJabColors *pPrimaries;
    UINT cNeutralSamples;
    JabColorF *pNeutralSamples;
    GamutShell *pReferenceShell;
    GamutShell *pPlausibleShell;
    GamutShell *pPossibleShell;
} GamutBoundaryDescription;
typedef struct _BlackInformation {
    BOOL fBlackOnly;
    FLOAT blackWeight;
} BlackInformation;
/*****************************************************************************
 * IDeviceModelPlugIn interface
 */
#ifndef __IDeviceModelPlugIn_INTERFACE_DEFINED__
#define __IDeviceModelPlugIn_INTERFACE_DEFINED__

DEFINE_GUID(IID_IDeviceModelPlugIn, 0x1cd63475, 0x07c4, 0x46fe, 0xa9,0x03, 0xd6,0x55,0x31,0x6d,0x11,0xfd);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("1cd63475-07c4-46fe-a903-d655316d11fd")
IDeviceModelPlugIn : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE Initialize(
        BSTR bstrXml,
        UINT cNumModels,
        UINT iModelPosition) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetNumChannels(
        UINT *pNumChannels) = 0;

    virtual HRESULT STDMETHODCALLTYPE DeviceToColorimetricColors(
        UINT cColors,
        UINT cChannels,
        const FLOAT *pDeviceValues,
        XYZColorF *pXYZColors) = 0;

    virtual HRESULT STDMETHODCALLTYPE ColorimetricToDeviceColors(
        UINT cColors,
        UINT cChannels,
        const XYZColorF *pXYZColors,
        FLOAT *pDeviceValues) = 0;

    virtual HRESULT STDMETHODCALLTYPE ColorimetricToDeviceColorsWithBlack(
        UINT cColors,
        UINT cChannels,
        const XYZColorF *pXYZColors,
        const BlackInformation *pBlackInformation,
        FLOAT *pDeviceValues) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetTransformDeviceModelInfo(
        UINT iModelPosition,
        IDeviceModelPlugIn *pIDeviceModelOther) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetPrimarySamples(
        PrimaryXYZColors *pPrimaryColor) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetGamutBoundaryMeshSize(
        UINT *pNumVertices,
        UINT *pNumTriangles) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetGamutBoundaryMesh(
        UINT cChannels,
        UINT cVertices,
        UINT cTriangles,
        FLOAT *pVertices,
        GamutShellTriangle *pTriangles) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetNeutralAxisSize(
        UINT *pcColors) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetNeutralAxis(
        UINT cColors,
        XYZColorF *pXYZColors) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IDeviceModelPlugIn, 0x1cd63475, 0x07c4, 0x46fe, 0xa9,0x03, 0xd6,0x55,0x31,0x6d,0x11,0xfd)
#endif
#else
typedef struct IDeviceModelPlugInVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IDeviceModelPlugIn *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IDeviceModelPlugIn *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IDeviceModelPlugIn *This);

    /*** IDeviceModelPlugIn methods ***/
    HRESULT (STDMETHODCALLTYPE *Initialize)(
        IDeviceModelPlugIn *This,
        BSTR bstrXml,
        UINT cNumModels,
        UINT iModelPosition);

    HRESULT (STDMETHODCALLTYPE *GetNumChannels)(
        IDeviceModelPlugIn *This,
        UINT *pNumChannels);

    HRESULT (STDMETHODCALLTYPE *DeviceToColorimetricColors)(
        IDeviceModelPlugIn *This,
        UINT cColors,
        UINT cChannels,
        const FLOAT *pDeviceValues,
        XYZColorF *pXYZColors);

    HRESULT (STDMETHODCALLTYPE *ColorimetricToDeviceColors)(
        IDeviceModelPlugIn *This,
        UINT cColors,
        UINT cChannels,
        const XYZColorF *pXYZColors,
        FLOAT *pDeviceValues);

    HRESULT (STDMETHODCALLTYPE *ColorimetricToDeviceColorsWithBlack)(
        IDeviceModelPlugIn *This,
        UINT cColors,
        UINT cChannels,
        const XYZColorF *pXYZColors,
        const BlackInformation *pBlackInformation,
        FLOAT *pDeviceValues);

    HRESULT (STDMETHODCALLTYPE *SetTransformDeviceModelInfo)(
        IDeviceModelPlugIn *This,
        UINT iModelPosition,
        IDeviceModelPlugIn *pIDeviceModelOther);

    HRESULT (STDMETHODCALLTYPE *GetPrimarySamples)(
        IDeviceModelPlugIn *This,
        PrimaryXYZColors *pPrimaryColor);

    HRESULT (STDMETHODCALLTYPE *GetGamutBoundaryMeshSize)(
        IDeviceModelPlugIn *This,
        UINT *pNumVertices,
        UINT *pNumTriangles);

    HRESULT (STDMETHODCALLTYPE *GetGamutBoundaryMesh)(
        IDeviceModelPlugIn *This,
        UINT cChannels,
        UINT cVertices,
        UINT cTriangles,
        FLOAT *pVertices,
        GamutShellTriangle *pTriangles);

    HRESULT (STDMETHODCALLTYPE *GetNeutralAxisSize)(
        IDeviceModelPlugIn *This,
        UINT *pcColors);

    HRESULT (STDMETHODCALLTYPE *GetNeutralAxis)(
        IDeviceModelPlugIn *This,
        UINT cColors,
        XYZColorF *pXYZColors);

    END_INTERFACE
} IDeviceModelPlugInVtbl;

interface IDeviceModelPlugIn {
    CONST_VTBL IDeviceModelPlugInVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IDeviceModelPlugIn_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IDeviceModelPlugIn_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IDeviceModelPlugIn_Release(This) (This)->lpVtbl->Release(This)
/*** IDeviceModelPlugIn methods ***/
#define IDeviceModelPlugIn_Initialize(This,bstrXml,cNumModels,iModelPosition) (This)->lpVtbl->Initialize(This,bstrXml,cNumModels,iModelPosition)
#define IDeviceModelPlugIn_GetNumChannels(This,pNumChannels) (This)->lpVtbl->GetNumChannels(This,pNumChannels)
#define IDeviceModelPlugIn_DeviceToColorimetricColors(This,cColors,cChannels,pDeviceValues,pXYZColors) (This)->lpVtbl->DeviceToColorimetricColors(This,cColors,cChannels,pDeviceValues,pXYZColors)
#define IDeviceModelPlugIn_ColorimetricToDeviceColors(This,cColors,cChannels,pXYZColors,pDeviceValues) (This)->lpVtbl->ColorimetricToDeviceColors(This,cColors,cChannels,pXYZColors,pDeviceValues)
#define IDeviceModelPlugIn_ColorimetricToDeviceColorsWithBlack(This,cColors,cChannels,pXYZColors,pBlackInformation,pDeviceValues) (This)->lpVtbl->ColorimetricToDeviceColorsWithBlack(This,cColors,cChannels,pXYZColors,pBlackInformation,pDeviceValues)
#define IDeviceModelPlugIn_SetTransformDeviceModelInfo(This,iModelPosition,pIDeviceModelOther) (This)->lpVtbl->SetTransformDeviceModelInfo(This,iModelPosition,pIDeviceModelOther)
#define IDeviceModelPlugIn_GetPrimarySamples(This,pPrimaryColor) (This)->lpVtbl->GetPrimarySamples(This,pPrimaryColor)
#define IDeviceModelPlugIn_GetGamutBoundaryMeshSize(This,pNumVertices,pNumTriangles) (This)->lpVtbl->GetGamutBoundaryMeshSize(This,pNumVertices,pNumTriangles)
#define IDeviceModelPlugIn_GetGamutBoundaryMesh(This,cChannels,cVertices,cTriangles,pVertices,pTriangles) (This)->lpVtbl->GetGamutBoundaryMesh(This,cChannels,cVertices,cTriangles,pVertices,pTriangles)
#define IDeviceModelPlugIn_GetNeutralAxisSize(This,pcColors) (This)->lpVtbl->GetNeutralAxisSize(This,pcColors)
#define IDeviceModelPlugIn_GetNeutralAxis(This,cColors,pXYZColors) (This)->lpVtbl->GetNeutralAxis(This,cColors,pXYZColors)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IDeviceModelPlugIn_QueryInterface(IDeviceModelPlugIn* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IDeviceModelPlugIn_AddRef(IDeviceModelPlugIn* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IDeviceModelPlugIn_Release(IDeviceModelPlugIn* This) {
    return This->lpVtbl->Release(This);
}
/*** IDeviceModelPlugIn methods ***/
static FORCEINLINE HRESULT IDeviceModelPlugIn_Initialize(IDeviceModelPlugIn* This,BSTR bstrXml,UINT cNumModels,UINT iModelPosition) {
    return This->lpVtbl->Initialize(This,bstrXml,cNumModels,iModelPosition);
}
static FORCEINLINE HRESULT IDeviceModelPlugIn_GetNumChannels(IDeviceModelPlugIn* This,UINT *pNumChannels) {
    return This->lpVtbl->GetNumChannels(This,pNumChannels);
}
static FORCEINLINE HRESULT IDeviceModelPlugIn_DeviceToColorimetricColors(IDeviceModelPlugIn* This,UINT cColors,UINT cChannels,const FLOAT *pDeviceValues,XYZColorF *pXYZColors) {
    return This->lpVtbl->DeviceToColorimetricColors(This,cColors,cChannels,pDeviceValues,pXYZColors);
}
static FORCEINLINE HRESULT IDeviceModelPlugIn_ColorimetricToDeviceColors(IDeviceModelPlugIn* This,UINT cColors,UINT cChannels,const XYZColorF *pXYZColors,FLOAT *pDeviceValues) {
    return This->lpVtbl->ColorimetricToDeviceColors(This,cColors,cChannels,pXYZColors,pDeviceValues);
}
static FORCEINLINE HRESULT IDeviceModelPlugIn_ColorimetricToDeviceColorsWithBlack(IDeviceModelPlugIn* This,UINT cColors,UINT cChannels,const XYZColorF *pXYZColors,const BlackInformation *pBlackInformation,FLOAT *pDeviceValues) {
    return This->lpVtbl->ColorimetricToDeviceColorsWithBlack(This,cColors,cChannels,pXYZColors,pBlackInformation,pDeviceValues);
}
static FORCEINLINE HRESULT IDeviceModelPlugIn_SetTransformDeviceModelInfo(IDeviceModelPlugIn* This,UINT iModelPosition,IDeviceModelPlugIn *pIDeviceModelOther) {
    return This->lpVtbl->SetTransformDeviceModelInfo(This,iModelPosition,pIDeviceModelOther);
}
static FORCEINLINE HRESULT IDeviceModelPlugIn_GetPrimarySamples(IDeviceModelPlugIn* This,PrimaryXYZColors *pPrimaryColor) {
    return This->lpVtbl->GetPrimarySamples(This,pPrimaryColor);
}
static FORCEINLINE HRESULT IDeviceModelPlugIn_GetGamutBoundaryMeshSize(IDeviceModelPlugIn* This,UINT *pNumVertices,UINT *pNumTriangles) {
    return This->lpVtbl->GetGamutBoundaryMeshSize(This,pNumVertices,pNumTriangles);
}
static FORCEINLINE HRESULT IDeviceModelPlugIn_GetGamutBoundaryMesh(IDeviceModelPlugIn* This,UINT cChannels,UINT cVertices,UINT cTriangles,FLOAT *pVertices,GamutShellTriangle *pTriangles) {
    return This->lpVtbl->GetGamutBoundaryMesh(This,cChannels,cVertices,cTriangles,pVertices,pTriangles);
}
static FORCEINLINE HRESULT IDeviceModelPlugIn_GetNeutralAxisSize(IDeviceModelPlugIn* This,UINT *pcColors) {
    return This->lpVtbl->GetNeutralAxisSize(This,pcColors);
}
static FORCEINLINE HRESULT IDeviceModelPlugIn_GetNeutralAxis(IDeviceModelPlugIn* This,UINT cColors,XYZColorF *pXYZColors) {
    return This->lpVtbl->GetNeutralAxis(This,cColors,pXYZColors);
}
#endif
#endif

#endif


#endif  /* __IDeviceModelPlugIn_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IGamutMapModelPlugIn interface
 */
#ifndef __IGamutMapModelPlugIn_INTERFACE_DEFINED__
#define __IGamutMapModelPlugIn_INTERFACE_DEFINED__

DEFINE_GUID(IID_IGamutMapModelPlugIn, 0x2dd80115, 0xad1e, 0x41f6, 0xa2,0x19, 0xa4,0xf4,0xb5,0x83,0xd1,0xf9);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("2dd80115-ad1e-41f6-a219-a4f4b583d1f9")
IGamutMapModelPlugIn : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE Initialize(
        BSTR bstrXml,
        IDeviceModelPlugIn *pSrcPlugIn,
        IDeviceModelPlugIn *pDestPlugIn,
        GamutBoundaryDescription *pSrcGBD,
        GamutBoundaryDescription *pDestGBD) = 0;

    virtual HRESULT STDMETHODCALLTYPE SourceToDestinationAppearanceColors(
        UINT cColors,
        const JChColorF *pInputColors,
        JChColorF *pOutputColors) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IGamutMapModelPlugIn, 0x2dd80115, 0xad1e, 0x41f6, 0xa2,0x19, 0xa4,0xf4,0xb5,0x83,0xd1,0xf9)
#endif
#else
typedef struct IGamutMapModelPlugInVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IGamutMapModelPlugIn *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IGamutMapModelPlugIn *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IGamutMapModelPlugIn *This);

    /*** IGamutMapModelPlugIn methods ***/
    HRESULT (STDMETHODCALLTYPE *Initialize)(
        IGamutMapModelPlugIn *This,
        BSTR bstrXml,
        IDeviceModelPlugIn *pSrcPlugIn,
        IDeviceModelPlugIn *pDestPlugIn,
        GamutBoundaryDescription *pSrcGBD,
        GamutBoundaryDescription *pDestGBD);

    HRESULT (STDMETHODCALLTYPE *SourceToDestinationAppearanceColors)(
        IGamutMapModelPlugIn *This,
        UINT cColors,
        const JChColorF *pInputColors,
        JChColorF *pOutputColors);

    END_INTERFACE
} IGamutMapModelPlugInVtbl;

interface IGamutMapModelPlugIn {
    CONST_VTBL IGamutMapModelPlugInVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IGamutMapModelPlugIn_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IGamutMapModelPlugIn_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IGamutMapModelPlugIn_Release(This) (This)->lpVtbl->Release(This)
/*** IGamutMapModelPlugIn methods ***/
#define IGamutMapModelPlugIn_Initialize(This,bstrXml,pSrcPlugIn,pDestPlugIn,pSrcGBD,pDestGBD) (This)->lpVtbl->Initialize(This,bstrXml,pSrcPlugIn,pDestPlugIn,pSrcGBD,pDestGBD)
#define IGamutMapModelPlugIn_SourceToDestinationAppearanceColors(This,cColors,pInputColors,pOutputColors) (This)->lpVtbl->SourceToDestinationAppearanceColors(This,cColors,pInputColors,pOutputColors)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IGamutMapModelPlugIn_QueryInterface(IGamutMapModelPlugIn* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IGamutMapModelPlugIn_AddRef(IGamutMapModelPlugIn* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IGamutMapModelPlugIn_Release(IGamutMapModelPlugIn* This) {
    return This->lpVtbl->Release(This);
}
/*** IGamutMapModelPlugIn methods ***/
static FORCEINLINE HRESULT IGamutMapModelPlugIn_Initialize(IGamutMapModelPlugIn* This,BSTR bstrXml,IDeviceModelPlugIn *pSrcPlugIn,IDeviceModelPlugIn *pDestPlugIn,GamutBoundaryDescription *pSrcGBD,GamutBoundaryDescription *pDestGBD) {
    return This->lpVtbl->Initialize(This,bstrXml,pSrcPlugIn,pDestPlugIn,pSrcGBD,pDestGBD);
}
static FORCEINLINE HRESULT IGamutMapModelPlugIn_SourceToDestinationAppearanceColors(IGamutMapModelPlugIn* This,UINT cColors,const JChColorF *pInputColors,JChColorF *pOutputColors) {
    return This->lpVtbl->SourceToDestinationAppearanceColors(This,cColors,pInputColors,pOutputColors);
}
#endif
#endif

#endif


#endif  /* __IGamutMapModelPlugIn_INTERFACE_DEFINED__ */

DEFINE_GUID(CATID_WcsPlugin, 0xa0b402e0, 0x8240, 0x405f, 0x8a, 0x16, 0x8a, 0x5b, 0x4d, 0xf2, 0xf0, 0xdd);
#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */
/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER BSTR_UserSize     (ULONG *, ULONG, BSTR *);
unsigned char * __RPC_USER BSTR_UserMarshal  (ULONG *, unsigned char *, BSTR *);
unsigned char * __RPC_USER BSTR_UserUnmarshal(ULONG *, unsigned char *, BSTR *);
void            __RPC_USER BSTR_UserFree     (ULONG *, BSTR *);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __wcsplugin_h__ */
