/*** Autogenerated by WIDL 5.0 from ./ctfspui.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __ctfspui_h__
#define __ctfspui_h__

/* Forward declarations */

#ifndef __ITfSpeechUIServer_FWD_DEFINED__
#define __ITfSpeechUIServer_FWD_DEFINED__
typedef interface ITfSpeechUIServer ITfSpeechUIServer;
#ifdef __cplusplus
interface ITfSpeechUIServer;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <oaidl.h>
#include <ocidl.h>
#include <msctf.h>

#ifdef __cplusplus
extern "C" {
#endif

//=--------------------------------------------------------------------------=
// ctfspui.h


// Speech UI declarations.

//=--------------------------------------------------------------------------=
// (C) Copyright 1995-2001 Microsoft Corporation.  All Rights Reserved.
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESSED OR TFPLIED, INCLUDING BUT NOT LIMITED TO
// THE TFPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
// PARTICULAR PURPOSE.
//=--------------------------------------------------------------------------=

#ifndef CTFSPUI_DEFINED
#define CTFSPUI_DEFINED

#include <windows.h>
#include <winapifamily.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifdef __cplusplus
}
#endif  /* __cplusplus */
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
EXTERN_C const CLSID CLSID_SpeechUIServer;
/*****************************************************************************
 * ITfSpeechUIServer interface
 */
#ifndef __ITfSpeechUIServer_INTERFACE_DEFINED__
#define __ITfSpeechUIServer_INTERFACE_DEFINED__

DEFINE_GUID(IID_ITfSpeechUIServer, 0x90e9a944, 0x9244, 0x489f, 0xa7,0x8f, 0xde,0x67,0xaf,0xc0,0x13,0xa7);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("90e9a944-9244-489f-a78f-de67afc013a7")
ITfSpeechUIServer : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE Initialize(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE ShowUI(
        BOOL fShow) = 0;

    virtual HRESULT STDMETHODCALLTYPE UpdateBalloon(
        TfLBBalloonStyle style,
        const WCHAR *pch,
        ULONG cch) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ITfSpeechUIServer, 0x90e9a944, 0x9244, 0x489f, 0xa7,0x8f, 0xde,0x67,0xaf,0xc0,0x13,0xa7)
#endif
#else
typedef struct ITfSpeechUIServerVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ITfSpeechUIServer *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ITfSpeechUIServer *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ITfSpeechUIServer *This);

    /*** ITfSpeechUIServer methods ***/
    HRESULT (STDMETHODCALLTYPE *Initialize)(
        ITfSpeechUIServer *This);

    HRESULT (STDMETHODCALLTYPE *ShowUI)(
        ITfSpeechUIServer *This,
        BOOL fShow);

    HRESULT (STDMETHODCALLTYPE *UpdateBalloon)(
        ITfSpeechUIServer *This,
        TfLBBalloonStyle style,
        const WCHAR *pch,
        ULONG cch);

    END_INTERFACE
} ITfSpeechUIServerVtbl;

interface ITfSpeechUIServer {
    CONST_VTBL ITfSpeechUIServerVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ITfSpeechUIServer_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ITfSpeechUIServer_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ITfSpeechUIServer_Release(This) (This)->lpVtbl->Release(This)
/*** ITfSpeechUIServer methods ***/
#define ITfSpeechUIServer_Initialize(This) (This)->lpVtbl->Initialize(This)
#define ITfSpeechUIServer_ShowUI(This,fShow) (This)->lpVtbl->ShowUI(This,fShow)
#define ITfSpeechUIServer_UpdateBalloon(This,style,pch,cch) (This)->lpVtbl->UpdateBalloon(This,style,pch,cch)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ITfSpeechUIServer_QueryInterface(ITfSpeechUIServer* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ITfSpeechUIServer_AddRef(ITfSpeechUIServer* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ITfSpeechUIServer_Release(ITfSpeechUIServer* This) {
    return This->lpVtbl->Release(This);
}
/*** ITfSpeechUIServer methods ***/
static FORCEINLINE HRESULT ITfSpeechUIServer_Initialize(ITfSpeechUIServer* This) {
    return This->lpVtbl->Initialize(This);
}
static FORCEINLINE HRESULT ITfSpeechUIServer_ShowUI(ITfSpeechUIServer* This,BOOL fShow) {
    return This->lpVtbl->ShowUI(This,fShow);
}
static FORCEINLINE HRESULT ITfSpeechUIServer_UpdateBalloon(ITfSpeechUIServer* This,TfLBBalloonStyle style,const WCHAR *pch,ULONG cch) {
    return This->lpVtbl->UpdateBalloon(This,style,pch,cch);
}
#endif
#endif

#endif


#endif  /* __ITfSpeechUIServer_INTERFACE_DEFINED__ */


DEFINE_GUID(IID_ITfSpeechUIServer, 0x90e9a944, 0x9244, 0x489f, 0xa7, 0x8f, 0xde, 0x67, 0xaf, 0xc0, 0x13, 0xa7 );

#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */

#endif // CTFSPUI_DEFINED
/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __ctfspui_h__ */
