/*** Autogenerated by WIDL 7.0-rc1 from ./imnact.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __imnact_h__
#define __imnact_h__

/* Forward declarations */

#ifndef __IImnAdviseAccount_FWD_DEFINED__
#define __IImnAdviseAccount_FWD_DEFINED__
typedef interface IImnAdviseAccount IImnAdviseAccount;
#ifdef __cplusplus
interface IImnAdviseAccount;
#endif /* __cplusplus */
#endif

#ifndef __IImnAdviseMigrateServer_FWD_DEFINED__
#define __IImnAdviseMigrateServer_FWD_DEFINED__
typedef interface IImnAdviseMigrateServer IImnAdviseMigrateServer;
#ifdef __cplusplus
interface IImnAdviseMigrateServer;
#endif /* __cplusplus */
#endif

#ifndef __IImnEnumAccounts_FWD_DEFINED__
#define __IImnEnumAccounts_FWD_DEFINED__
typedef interface IImnEnumAccounts IImnEnumAccounts;
#ifdef __cplusplus
interface IImnEnumAccounts;
#endif /* __cplusplus */
#endif

#ifndef __IImnAccountManager_FWD_DEFINED__
#define __IImnAccountManager_FWD_DEFINED__
typedef interface IImnAccountManager IImnAccountManager;
#ifdef __cplusplus
interface IImnAccountManager;
#endif /* __cplusplus */
#endif

#ifndef __IImnAccountManager2_FWD_DEFINED__
#define __IImnAccountManager2_FWD_DEFINED__
typedef interface IImnAccountManager2 IImnAccountManager2;
#ifdef __cplusplus
interface IImnAccountManager2;
#endif /* __cplusplus */
#endif

#ifndef __IPropertyContainer_FWD_DEFINED__
#define __IPropertyContainer_FWD_DEFINED__
typedef interface IPropertyContainer IPropertyContainer;
#ifdef __cplusplus
interface IPropertyContainer;
#endif /* __cplusplus */
#endif

#ifndef __IImnAccount_FWD_DEFINED__
#define __IImnAccount_FWD_DEFINED__
typedef interface IImnAccount IImnAccount;
#ifdef __cplusplus
interface IImnAccount;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <objidl.h>
#include <unknwn.h>
#include <unknwn.h>
#include <unknwn.h>
#include <unknwn.h>
#include <unknwn.h>
#include <unknwn.h>
#include <unknwn.h>

#ifdef __cplusplus
extern "C" {
#endif

#include <winapifamily.h>
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
#ifndef __IImnAccount_FWD_DEFINED__
#define __IImnAccount_FWD_DEFINED__
typedef interface IImnAccount IImnAccount;
#ifdef __cplusplus
interface IImnAccount;
#endif /* __cplusplus */
#endif

//=--------------------------------------------------------------------------=
// Imnact.h
//=--------------------------------------------------------------------------=
// (C) Copyright 1995-1998 Microsoft Corporation.  All Rights Reserved.
//
// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
// PARTICULAR PURPOSE.
//=--------------------------------------------------------------------------=

#pragma comment(lib,"uuid.lib")

//---------------------------------------------------------------------------=
// Internet Mail and News Account Manager Interfaces.

// --------------------------------------------------------------------------------
// GUIDS
// --------------------------------------------------------------------------------
#if !defined( WIN16 ) || defined( __cplusplus )
// {8D4B04E1-1331-11d0-81B8-00C04FD85AB4}
DEFINE_GUID(CLSID_ImnAccountManager, 0x8d4b04e1, 0x1331, 0x11d0, 0x81, 0xb8, 0x0, 0xc0, 0x4f, 0xd8, 0x5a, 0xb4);

// {FD465484-1384-11d0-ABBD-0020AFDFD10A}
DEFINE_GUID(IID_IPropertyContainer, 0xfd465484, 0x1384, 0x11d0, 0xab, 0xbd, 0x0, 0x20, 0xaf, 0xdf, 0xd1, 0xa);

// {FD465481-1384-11d0-ABBD-0020AFDFD10A}
DEFINE_GUID(IID_IImnAccountManager, 0xfd465481, 0x1384, 0x11d0, 0xab, 0xbd, 0x0, 0x20, 0xaf, 0xdf, 0xd1, 0xa);

// {C43DFC6F-62BB-11d2-A727-00C04F79E7C8}
DEFINE_GUID(IID_IImnAccountManager2, 0xc43dfc6f, 0x62bb, 0x11d2, 0xa7, 0x27, 0x0, 0xc0, 0x4f, 0x79, 0xe7, 0xc8);

// {FD465482-1384-11d0-ABBD-0020AFDFD10A}
DEFINE_GUID(IID_IImnAccount, 0xfd465482, 0x1384, 0x11d0, 0xab, 0xbd, 0x0, 0x20, 0xaf, 0xdf, 0xd1, 0xa);

// {FD465483-1384-11d0-ABBD-0020AFDFD10A}
DEFINE_GUID(IID_IImnEnumAccounts, 0xfd465483, 0x1384, 0x11d0, 0xab, 0xbd, 0x0, 0x20, 0xaf, 0xdf, 0xd1, 0xa);

// {8D0AED11-1638-11d0-81B9-00C04FD85AB4}
DEFINE_GUID(IID_IImnAdviseMigrateServer, 0x8d0aed11, 0x1638, 0x11d0, 0x81, 0xb9, 0x0, 0xc0, 0x4f, 0xd8, 0x5a, 0xb4);

// {0A06BD31-166F-11d0-81B9-00C04FD85AB4}
DEFINE_GUID(IID_IImnAdviseAccount, 0xa06bd31, 0x166f, 0x11d0, 0x81, 0xb9, 0x0, 0xc0, 0x4f, 0xd8, 0x5a, 0xb4);

#endif //!WIN16 || __cplusplus

// --------------------------------------------------------------------------------
// Exported C Functions
// --------------------------------------------------------------------------------
#if !defined(_IMNACCT_)
#define IMNACCTAPI DECLSPEC_IMPORT HRESULT WINAPI
#define IMNACCTAPI_(_type_) DECLSPEC_IMPORT _type_ WINAPI
#else
#define IMNACCTAPI HRESULT WINAPI
#define IMNACCTAPI_(_type_) _type_ WINAPI
#endif
#ifdef __cplusplus
extern "C" {
#endif

IMNACCTAPI HrCreateAccountManager(IImnAccountManager **ppAccountManager);
IMNACCTAPI ValidEmailAddress(LPCSTR lpAddress);

#ifdef __cplusplus
}
#endif

// --------------------------------------------------------------------------------
// Errors
// --------------------------------------------------------------------------------
#ifndef FACILITY_INTERNET
#define FACILITY_INTERNET 12
#endif
#ifndef HR_E
#define HR_E(n) MAKE_SCODE(SEVERITY_ERROR, FACILITY_INTERNET, n)
#endif
#ifndef HR_S
#define HR_S(n) MAKE_SCODE(SEVERITY_SUCCESS, FACILITY_INTERNET, n)
#endif
#ifndef HR_CODE
#define HR_CODE(hr) (INT)(hr & 0xffff)
#endif

// --------------------------------------------------------------------------------
// General Errors
// --------------------------------------------------------------------------------
#define E_RegCreateKeyFailed         HR_E(0xCD00)
#define E_RegQueryInfoKeyFailed      HR_E(0xCD01)
#define E_UserCancel                 HR_E(0xCD02)
#define E_RegOpenKeyFailed           HR_E(0xCD03)
#define E_RegSetValueFailed          HR_E(0xCD04)
#define E_RegDeleteKeyFailed         HR_E(0xCD05)
#define E_DuplicateAccountName       HR_E(0xCD06)
#define S_NonStandardValue           HR_S(0xCD07)
#define E_InvalidValue               HR_E(0xCD08)
#define S_AlreadyInitialized         HR_S(0xCD09)

// --------------------------------------------------------------------------------
// IPropertyContainer Errors
// --------------------------------------------------------------------------------
#define E_NoPropData                 HR_E(0xCDA0)
#define E_BufferTooSmall             HR_E(0xCDA1)
#define E_BadPropType                HR_E(0xCDA2)
#define E_BufferSizeMismatch         HR_E(0xCDA3)
#define E_InvalidBooleanValue        HR_E(0xCDA4)
#define E_InvalidMinMaxValue         HR_E(0xCDA5)
#define E_PropNotFound               HR_E(0xCDA6)
#define E_InvalidPropTag             HR_E(0xCDA7)
#define E_InvalidPropertySet         HR_E(0xCDA8)
#define E_EnumFinished               HR_E(0xCDA9)
#define S_NoSaveNeeded               HR_S(0xCDAA)
#define S_PasswordDeleted            HR_S(0xCDAB)
#define S_PasswordNotFound           HR_S(0xCDAC)

// --------------------------------------------------------------------------------
// ImnAccountManager errors
// --------------------------------------------------------------------------------
#define E_NoAccounts                 HR_E(0xCDD0)
#define E_BadFriendlyName            HR_E(0xCDD1)
#define E_NoIdentities               HR_E(0xCDD2)

// --------------------------------------------------------------------------------
// RAS Connection Types
// --------------------------------------------------------------------------------
#define CF_AUTO_CONNECT          FLAG02 // Automatically connect

// --------------------------------------------------------------------------------
// Property Macros
// --------------------------------------------------------------------------------
#define PROPTAG_MASK                 ((ULONG)0x0000FFFF)
#define PROPTAG_TYPE(ulPropTag)      (PROPTYPE)(((ULONG)(ulPropTag)) & PROPTAG_MASK)
#define PROPTAG_ID(ulPropTag)        (((ULONG)(ulPropTag))>>16)
#define PROPTAG(ulPropType,ulPropID) ((((ULONG)(ulPropID))<<16)|((ULONG)(ulPropType)))
#define MAX_PROPID                   ((ULONG) 0xFFFF)

// --------------------------------------------------------------------------------
// IImnAccount Properties
// --------------------------------------------------------------------------------
#define AP_FIRST                    0X1234
// per account properties
#define AP_ACCOUNT_NAME             PROPTAG(TYPE_STRING,    AP_FIRST+1)
#define AP_ACCOUNT_FIRST            AP_ACCOUNT_NAME
#define AP_TEMP_ACCOUNT             PROPTAG(TYPE_DWORD,     AP_FIRST+3)
#define AP_LAST_UPDATED             PROPTAG(TYPE_FILETIME,  AP_FIRST+4)
#define AP_RAS_CONNECTION_TYPE      PROPTAG(TYPE_DWORD,     AP_FIRST+5)
#define AP_RAS_CONNECTOID           PROPTAG(TYPE_STRING,    AP_FIRST+6)
#define AP_RAS_CONNECTION_FLAGS     PROPTAG(TYPE_DWORD,     AP_FIRST+7)
#define AP_ACCOUNT_ID               PROPTAG(TYPE_STRING,    AP_FIRST+9)
#define AP_RAS_BACKUP_CONNECTOID    PROPTAG(TYPE_STRING,    AP_FIRST+10)
#define AP_SERVICE                  PROPTAG(TYPE_STRING,    AP_FIRST+11)
#define AP_AVAIL_OFFLINE            PROPTAG(TYPE_DWORD,     AP_FIRST+12)
#define AP_UNIQUE_ID                PROPTAG(TYPE_BINARY,    AP_FIRST+13)
#define AP_SERVER_READ_ONLY         PROPTAG(TYPE_BOOL,      AP_FIRST+14)
#define AP_ACCOUNT_LAST             AP_SERVER_READ_ONLY

// IMAP properties
#define AP_IMAP_SERVER              PROPTAG(TYPE_STRING,    AP_FIRST+100)
#define AP_IMAP_FIRST               AP_IMAP_SERVER
#define AP_IMAP_USERNAME            PROPTAG(TYPE_STRING,    AP_FIRST+101)
#define AP_IMAP_PASSWORD            PROPTAG(TYPE_PASS,      AP_FIRST+102)
#define AP_IMAP_USE_SICILY          PROPTAG(TYPE_BOOL,      AP_FIRST+104)
#define AP_IMAP_PORT                PROPTAG(TYPE_DWORD,     AP_FIRST+105)
#define AP_IMAP_SSL                 PROPTAG(TYPE_BOOL,      AP_FIRST+106)
#define AP_IMAP_TIMEOUT             PROPTAG(TYPE_DWORD,     AP_FIRST+107)
#define AP_IMAP_ROOT_FOLDER         PROPTAG(TYPE_STRING,    AP_FIRST+108)
#define AP_IMAP_DATA_DIR            PROPTAG(TYPE_STRING,    AP_FIRST+109)
#define AP_IMAP_USE_LSUB            PROPTAG(TYPE_BOOL,      AP_FIRST+111)
#define AP_IMAP_POLL                PROPTAG(TYPE_BOOL,      AP_FIRST+112)
#define AP_IMAP_FULL_LIST           PROPTAG(TYPE_BOOL,      AP_FIRST+113)
#define AP_IMAP_NOOP_INTERVAL       PROPTAG(TYPE_DWORD,     AP_FIRST+114)
#define AP_IMAP_SVRSPECIALFLDRS     PROPTAG(TYPE_BOOL,      AP_FIRST+116)
#define AP_IMAP_SENTITEMSFLDR       PROPTAG(TYPE_STRING,    AP_FIRST+117)
#define AP_IMAP_DRAFTSFLDR          PROPTAG(TYPE_STRING,    AP_FIRST+119)
#define AP_IMAP_PROMPT_PASSWORD     PROPTAG(TYPE_BOOL,      AP_FIRST+124)
#define AP_IMAP_DIRTY               PROPTAG(TYPE_DWORD,     AP_FIRST+125)
#define AP_IMAP_POLL_ALL_FOLDERS    PROPTAG(TYPE_BOOL,      AP_FIRST+126)
#define AP_IMAP_DELETEDITEMSFLDR    PROPTAG(TYPE_STRING,    AP_FIRST+127)
#define AP_IMAP_JUNKFLDR            PROPTAG(TYPE_STRING,    AP_FIRST+128)
#define AP_IMAP_LAST                AP_IMAP_JUNKFLDR

// LDAP properties
#define AP_LDAP_SERVER              PROPTAG(TYPE_STRING,    AP_FIRST+200)
#define AP_LDAP_FIRST               AP_LDAP_SERVER
#define AP_LDAP_USERNAME            PROPTAG(TYPE_STRING,    AP_FIRST+201)
#define AP_LDAP_PASSWORD            PROPTAG(TYPE_PASS,      AP_FIRST+202)
#define AP_LDAP_AUTHENTICATION      PROPTAG(TYPE_DWORD,     AP_FIRST+203)
#define AP_LDAP_TIMEOUT             PROPTAG(TYPE_DWORD,     AP_FIRST+204)
#define AP_LDAP_SEARCH_RETURN       PROPTAG(TYPE_DWORD,     AP_FIRST+205)
#define AP_LDAP_SEARCH_BASE         PROPTAG(TYPE_STRING,    AP_FIRST+206)
#define AP_LDAP_SERVER_ID           PROPTAG(TYPE_DWORD,     AP_FIRST+207)
#define AP_LDAP_RESOLVE_FLAG        PROPTAG(TYPE_DWORD,     AP_FIRST+208)
#define AP_LDAP_URL                 PROPTAG(TYPE_STRING,    AP_FIRST+209)
#define AP_LDAP_PORT                PROPTAG(TYPE_DWORD,     AP_FIRST+210)
#define AP_LDAP_SSL                 PROPTAG(TYPE_BOOL,      AP_FIRST+211)
#define AP_LDAP_LOGO                PROPTAG(TYPE_STRING,    AP_FIRST+212)
#define AP_LDAP_USE_BIND_DN         PROPTAG(TYPE_DWORD,     AP_FIRST+213)
#define AP_LDAP_SIMPLE_SEARCH       PROPTAG(TYPE_DWORD,     AP_FIRST+214)
#define AP_LDAP_ADVANCED_SEARCH_ATTR PROPTAG(TYPE_STRING,   AP_FIRST+215)
#define AP_LDAP_PAGED_RESULTS       PROPTAG(TYPE_DWORD,     AP_FIRST+216)
#define AP_LDAP_NTDS                PROPTAG(TYPE_DWORD,     AP_FIRST+217)
#define AP_LDAP_LAST                AP_LDAP_NTDS

// HTTPMail properties
#define AP_HTTPMAIL_SERVER           PROPTAG(TYPE_STRING,    AP_FIRST+250)
#define AP_HTTPMAIL_FIRST            AP_HTTPMAIL_SERVER
#define AP_HTTPMAIL_USERNAME         PROPTAG(TYPE_STRING,    AP_FIRST+251)
#define AP_HTTPMAIL_PASSWORD         PROPTAG(TYPE_PASS,      AP_FIRST+252)
#define AP_HTTPMAIL_PROMPT_PASSWORD  PROPTAG(TYPE_BOOL,      AP_FIRST+253)
#define AP_HTTPMAIL_USE_SICILY       PROPTAG(TYPE_DWORD,     AP_FIRST+254)
#define AP_HTTPMAIL_FRIENDLY_NAME    PROPTAG(TYPE_STRING,    AP_FIRST+255)
#define AP_HTTPMAIL_DOMAIN_MSN       PROPTAG(TYPE_BOOL,      AP_FIRST+256)
#define AP_HTTPMAIL_POLL             PROPTAG(TYPE_BOOL,      AP_FIRST+257)
#define AP_HTTPMAIL_ADURL              PROPTAG(TYPE_STRING,          AP_FIRST+258)
#define AP_HTTPMAIL_SHOW_ADBAR         PROPTAG(TYPE_BOOL,            AP_FIRST+259)
#define AP_HTTPMAIL_MINPOLLINGINTERVAL PROPTAG(TYPE_ULARGEINTEGER,   AP_FIRST+260)
#define AP_HTTPMAIL_GOTPOLLINGINTERVAL PROPTAG(TYPE_BOOL,            AP_FIRST+261)
#define AP_HTTPMAIL_LASTPOLLEDTIME     PROPTAG(TYPE_ULARGEINTEGER,   AP_FIRST+262)
#define AP_HTTPMAIL_ROOTTIMESTAMP      PROPTAG(TYPE_STRING,          AP_FIRST+263)
#define AP_HTTPMAIL_ROOTINBOXTIMESTAMP PROPTAG(TYPE_STRING,          AP_FIRST+264)
#define AP_HTTPMAIL_INBOXTIMESTAMP     PROPTAG(TYPE_STRING,          AP_FIRST+265)
#define AP_HTTPMAIL_MAXPOLLINGINTERVAL PROPTAG(TYPE_ULARGEINTEGER,   AP_FIRST+266)
#define AP_HTTPMAIL_ADBAR              PROPTAG(TYPE_STRING,          AP_FIRST+267)
#define AP_HTTPMAIL_CONTACTS           PROPTAG(TYPE_STRING,          AP_FIRST+268)
#define AP_HTTPMAIL_INBOX              PROPTAG(TYPE_STRING,          AP_FIRST+269)
#define AP_HTTPMAIL_OUTBOX             PROPTAG(TYPE_STRING,          AP_FIRST+270)
#define AP_HTTPMAIL_SENDMSG            PROPTAG(TYPE_STRING,          AP_FIRST+271)
#define AP_HTTPMAIL_SENTITEMS          PROPTAG(TYPE_STRING,          AP_FIRST+272)
#define AP_HTTPMAIL_DELETEDITEMS       PROPTAG(TYPE_STRING,          AP_FIRST+273)
#define AP_HTTPMAIL_DRAFTS             PROPTAG(TYPE_STRING,          AP_FIRST+274)
#define AP_HTTPMAIL_MSGFOLDERROOT      PROPTAG(TYPE_STRING,          AP_FIRST+275)
#define AP_HTTPMAIL_SIG                PROPTAG(TYPE_STRING,          AP_FIRST+276)
#define AP_HTTPMAIL_HASROOTPROPS       PROPTAG(TYPE_BOOL,            AP_FIRST+277)
#define AP_HTTPMAIL_LAST               AP_HTTPMAIL_HASROOTPROPS

// NNTP properties
#define AP_NNTP_SERVER              PROPTAG(TYPE_STRING,    AP_FIRST+300)
#define AP_NNTP_FIRST               AP_NNTP_SERVER
#define AP_NNTP_USERNAME            PROPTAG(TYPE_STRING,    AP_FIRST+301)
#define AP_NNTP_PASSWORD            PROPTAG(TYPE_PASS,      AP_FIRST+302)
#define AP_NNTP_USE_SICILY          PROPTAG(TYPE_BOOL,      AP_FIRST+304)
#define AP_NNTP_PORT                PROPTAG(TYPE_DWORD,     AP_FIRST+305)
#define AP_NNTP_SSL                 PROPTAG(TYPE_BOOL,      AP_FIRST+306)
#define AP_NNTP_TIMEOUT             PROPTAG(TYPE_DWORD,     AP_FIRST+307)
#define AP_NNTP_DISPLAY_NAME        PROPTAG(TYPE_STRING,    AP_FIRST+308)
#define AP_NNTP_ORG_NAME            PROPTAG(TYPE_STRING,    AP_FIRST+309)
#define AP_NNTP_EMAIL_ADDRESS       PROPTAG(TYPE_STRING,    AP_FIRST+310)
#define AP_NNTP_REPLY_EMAIL_ADDRESS PROPTAG(TYPE_STRING,    AP_FIRST+311)
#define AP_NNTP_SPLIT_MESSAGES      PROPTAG(TYPE_BOOL,      AP_FIRST+312)
#define AP_NNTP_SPLIT_SIZE          PROPTAG(TYPE_DWORD,     AP_FIRST+313)
#define AP_NNTP_USE_DESCRIPTIONS    PROPTAG(TYPE_BOOL,      AP_FIRST+314)
#define AP_NNTP_DATA_DIR            PROPTAG(TYPE_STRING,    AP_FIRST+315)
#define AP_NNTP_POLL                PROPTAG(TYPE_BOOL,      AP_FIRST+316)
#define AP_NNTP_POST_FORMAT         PROPTAG(TYPE_DWORD,     AP_FIRST+317)
#define AP_NNTP_SIGNATURE           PROPTAG(TYPE_STRING,    AP_FIRST+318)
#define AP_NNTP_PROMPT_PASSWORD     PROPTAG(TYPE_BOOL,      AP_FIRST+319)
#define AP_NNTP_COMMUNITIES         PROPTAG(TYPE_DWORD,     AP_FIRST+320)
#define AP_NNTP_PASSPORT_MEMBERNAME PROPTAG(TYPE_STRING,    AP_FIRST+321)
#define AP_NNTP_COMMUNITYSERVERDATA PROPTAG(TYPE_BINARY,    AP_FIRST+322)
#define AP_NNTP_PASSPORTSESSIONDATA PROPTAG(TYPE_BINARY,    AP_FIRST+323)
#define AP_NNTP_USER_INFORMATION    PROPTAG(TYPE_DWORD,     AP_FIRST+324)
#define AP_NNTP_LAST                AP_NNTP_USER_INFORMATION

// POP3 properties
#define AP_POP3_SERVER              PROPTAG(TYPE_STRING,    AP_FIRST+400)
#define AP_POP3_FIRST               AP_POP3_SERVER
#define AP_POP3_USERNAME            PROPTAG(TYPE_STRING,    AP_FIRST+401)
#define AP_POP3_PASSWORD            PROPTAG(TYPE_PASS,      AP_FIRST+402)
#define AP_POP3_USE_SICILY          PROPTAG(TYPE_BOOL,      AP_FIRST+404)
#define AP_POP3_PORT                PROPTAG(TYPE_DWORD,     AP_FIRST+405)
#define AP_POP3_SSL                 PROPTAG(TYPE_BOOL,      AP_FIRST+406)
#define AP_POP3_TIMEOUT             PROPTAG(TYPE_DWORD,     AP_FIRST+407)
#define AP_POP3_LEAVE_ON_SERVER     PROPTAG(TYPE_BOOL,      AP_FIRST+408)
#define AP_POP3_REMOVE_DELETED      PROPTAG(TYPE_BOOL,      AP_FIRST+409)
#define AP_POP3_REMOVE_EXPIRED      PROPTAG(TYPE_BOOL,      AP_FIRST+410)
#define AP_POP3_EXPIRE_DAYS         PROPTAG(TYPE_DWORD,     AP_FIRST+411)
#define AP_POP3_SKIP                PROPTAG(TYPE_BOOL,      AP_FIRST+412)
#define AP_POP3_OUTLOOK_CACHE_NAME  PROPTAG(TYPE_STRING,    AP_FIRST+413)
#define AP_POP3_PROMPT_PASSWORD     PROPTAG(TYPE_BOOL,      AP_FIRST+414)
#define AP_POP3_LAST                AP_POP3_PROMPT_PASSWORD

// SMTP properties
#define AP_SMTP_SERVER              PROPTAG(TYPE_STRING,    AP_FIRST+500)
#define AP_SMTP_FIRST               AP_SMTP_SERVER
#define AP_SMTP_USERNAME            PROPTAG(TYPE_STRING,    AP_FIRST+501)
#define AP_SMTP_PASSWORD            PROPTAG(TYPE_PASS,      AP_FIRST+502)
#define AP_SMTP_USE_SICILY          PROPTAG(TYPE_DWORD,     AP_FIRST+504) // SMTPAUTHTYEP
#define AP_SMTP_PORT                PROPTAG(TYPE_DWORD,     AP_FIRST+505)
#define AP_SMTP_SSL                 PROPTAG(TYPE_BOOL,      AP_FIRST+506)
#define AP_SMTP_TIMEOUT             PROPTAG(TYPE_DWORD,     AP_FIRST+507)
#define AP_SMTP_DISPLAY_NAME        PROPTAG(TYPE_STRING,    AP_FIRST+508)
#define AP_SMTP_ORG_NAME            PROPTAG(TYPE_STRING,    AP_FIRST+509)
#define AP_SMTP_EMAIL_ADDRESS       PROPTAG(TYPE_STRING,    AP_FIRST+510)
#define AP_SMTP_REPLY_EMAIL_ADDRESS PROPTAG(TYPE_STRING,    AP_FIRST+511)
#define AP_SMTP_SPLIT_MESSAGES      PROPTAG(TYPE_BOOL,      AP_FIRST+512)
#define AP_SMTP_SPLIT_SIZE          PROPTAG(TYPE_DWORD,     AP_FIRST+513)
#define AP_SMTP_CERTIFICATE         PROPTAG(TYPE_BINARY,    AP_FIRST+514)
#define AP_SMTP_SIGNATURE           PROPTAG(TYPE_STRING,    AP_FIRST+515)
#define AP_SMTP_PROMPT_PASSWORD     PROPTAG(TYPE_BOOL,      AP_FIRST+516)
#define AP_SMTP_ENCRYPT_CERT           PROPTAG(TYPE_BINARY,      AP_FIRST+517)
#define AP_SMTP_ENCRYPT_ALGTH       PROPTAG(TYPE_BINARY,      AP_FIRST+518)
#define AP_SMTP_LAST                AP_SMTP_ENCRYPT_ALGTH

// --------------------------------------------------------------------------------
// Account Flags
// --------------------------------------------------------------------------------
#define ACCT_FLAG_NEWS           ((DWORD)1)
#define ACCT_FLAG_MAIL           ((DWORD)2)
#define ACCT_FLAG_DIR_SERV       ((DWORD)4)
#define ACCT_FLAG_ALL            (ACCT_FLAG_NEWS | ACCT_FLAG_MAIL | ACCT_FLAG_DIR_SERV)

// --------------------------------------------------------------------------------
// Server Types
// --------------------------------------------------------------------------------
#define SRV_NNTP                 ((DWORD)1)
#define SRV_IMAP                 ((DWORD)2)
#define SRV_POP3                 ((DWORD)4)
#define SRV_SMTP                 ((DWORD)8)
#define SRV_LDAP                 ((DWORD)16)
#define SRV_HTTPMAIL             ((DWORD)32)
#define SRV_MAIL                 ((DWORD)(SRV_IMAP | SRV_POP3 | SRV_SMTP | SRV_HTTPMAIL))
#define SRV_ALL                  ((DWORD)(SRV_NNTP | SRV_IMAP | SRV_POP3 | SRV_SMTP | SRV_LDAP | SRV_HTTPMAIL))

// --------------------------------------------------------------------------------
// LDAP Authentication Types
// --------------------------------------------------------------------------------
#define LDAP_AUTH_ANONYMOUS      ((DWORD)0)
#define LDAP_AUTH_PASSWORD       ((DWORD)1)
#define LDAP_AUTH_MEMBER_SYSTEM  ((DWORD)2)
#define LDAP_AUTH_MAX            ((DWORD)2)

// --------------------------------------------------------------------------------
// LDAP Paged Result Support Types
// --------------------------------------------------------------------------------
#define LDAP_PRESULT_UNKNOWN         ((DWORD)0)
#define LDAP_PRESULT_SUPPORTED       ((DWORD)1)
#define LDAP_PRESULT_NOTSUPPORTED    ((DWORD)2)
#define LDAP_PRESULT_MAX             ((DWORD)2)

// --------------------------------------------------------------------------------
// LDAP NTDS Types
// --------------------------------------------------------------------------------
#define LDAP_NTDS_UNKNOWN      ((DWORD)0)
#define LDAP_NTDS_IS           ((DWORD)1)
#define LDAP_NTDS_ISNOT        ((DWORD)2)
#define LDAP_NTDS_MAX          ((DWORD)2)

// --------------------------------------------------------------------------------
// AP_NNTP_POST_FORMAT types
// --------------------------------------------------------------------------------
#define POST_USE_DEFAULT         ((DWORD)0)
#define POST_USE_PLAIN_TEXT      ((DWORD)1)
#define POST_USE_HTML            ((DWORD)2)

// --------------------------------------------------------------------------------
// AP_NNTP_USER_INFORMATION types
// --------------------------------------------------------------------------------
#define NNTP_USER_AUTOCONFIG     ((DWORD)0)
#define NNTP_USER_NOTIFIED       ((DWORD)1)
#define NNTP_USER_DONTSHOW       ((DWORD)2)
#define NNTP_USER_APPROVED       ((DWORD)3)

// -----------------------------------------------------------------------------
// Account Manager Notification Types
// -----------------------------------------------------------------------------
#define AN_ACCOUNT_DELETED           WM_USER + 1
#define AN_ACCOUNT_ADDED             WM_USER + 2
#define AN_ACCOUNT_CHANGED           WM_USER + 3
#define AN_DEFAULT_CHANGED           WM_USER + 4
#define AN_SERVERTYPES_CHANGED       WM_USER + 5
#define AN_ACCOUNT_PREDELETE         WM_USER + 6

// IImnAccountManager::AccountListDialog flags
// IImnAccount::ShowProperties flags
#define ACCTDLG_NO_IMAP          0x0001
#define ACCTDLG_NO_REMOVEDELETE  0x0002
#define ACCTDLG_NO_BREAKMESSAGES 0x0004
#define ACCTDLG_NO_REMOVEAFTER   0x0008
#define ACCTDLG_NO_SENDRECEIVE   0x0010
#define ACCTDLG_NO_NEWSPOLL      0x0020
#define ACCTDLG_NO_SECURITY      0x0040
#define ACCTDLG_BACKUP_CONNECT   0x0080
#define ACCTDLG_NO_IMAPPOLL      0x0100
#define ACCTDLG_NO_NEW_POP       0x0200
#define ACCTDLG_SHOWIMAPSPECIAL  0x0400
#define ACCTDLG_INTERNETCONNECTION   0x0800
#define ACCTDLG_HTTPMAIL             0x1000
#define ACCTDLG_REVOCATION           0x2000
#define ACCTDLG_OE                   0x4000
#define ACCTDLG_PASSPORT             0x8000
#define ACCTDLG_ALL                  0xffff

// AP_RAS_CONNECTION_TYPE            values
#define CONNECTION_TYPE_LAN               0
#define CONNECTION_TYPE_MANUAL            1
#define CONNECTION_TYPE_RAS               2
#define CONNECTION_TYPE_INETSETTINGS      3

// IImnAccount::DoWizard flags
#define ACCT_WIZ_MIGRATE             0x0001
#define ACCT_WIZ_MAILIMPORT          0x0002
#define ACCT_WIZ_OUTLOOK             0x0004
#define ACCT_WIZ_NEWSIMPORT          0x0008
#define ACCT_WIZ_NO_NEW_POP          0x0010
#define ACCT_WIZ_INTERNETCONNECTION  0x0020
#define ACCT_WIZ_HTTPMAIL            0x0040
#define ACCT_WIZ_OE                  0x0080
#define ACCT_WIZ_COMMUNITIES         0x0100

// IImnAccount::InitEx flags
#define ACCT_INIT_ATHENA         0x0001
#define ACCT_INIT_OUTLOOK        0x0002

 // AP_IMAP_DIRTY flags
#define IMAP_FLDRLIST_DIRTY      0x0001
#define IMAP_OE4MIGRATE_DIRTY    0x0002
#define IMAP_SENTITEMS_DIRTY     0x0004
#define IMAP_DRAFTS_DIRTY        0x0008
#define IMAP_DELETEDITEMS_DIRTY  0x0010
#define IMAP_JUNK_DIRTY          0x0020
typedef enum tagSMTPAUTHTYPE {
    SMTP_AUTH_NONE = 0,
    SMTP_AUTH_SICILY = 1,
    SMTP_AUTH_USE_POP3ORIMAP_SETTINGS = 2,
    SMTP_AUTH_USE_SMTP_SETTINGS = 3
} SMTPAUTHTYPE;
#define CCHMAX_ORG_NAME (256)

#define CCHMAX_DISPLAY_NAME (256)

#define CCHMAX_ACCOUNT_NAME (256)

#define CCHMAX_SERVER_NAME (256)

#define CCHMAX_PASSWORD (256)

#define CCHMAX_USERNAME (256)

#define CCHMAX_EMAIL_ADDRESS (256)

#define CCHMAX_CONNECTOID (256)

#define CCHMAX_SEARCH_BASE (256)

#define CCHMAX_ROOT_FOLDER (256)

#define CCHMAX_SIGNATURE (16)

#define CCHMAX_SERVICE (256)

/*****************************************************************************
 * IImnAdviseAccount interface
 */
#ifndef __IImnAdviseAccount_INTERFACE_DEFINED__
#define __IImnAdviseAccount_INTERFACE_DEFINED__

typedef enum __WIDL_imnact_generated_name_0000000E {
    ACCT_NEWS = 0,
    ACCT_MAIL = 1,
    ACCT_DIR_SERV = 2,
    ACCT_LAST = 3
} ACCTTYPE;
typedef struct tagAccountContext {
    ACCTTYPE AcctType;
    LPSTR pszAccountID;
    LPSTR pszOldName;
    DWORD dwServerType;
} ACTX;
DEFINE_GUID(IID_IImnAdviseAccount, 0x0a06bd31, 0x166f, 0x11d0, 0x81,0xb9, 0x00,0xc0,0x4f,0xd8,0x5a,0xb4);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("0a06bd31-166f-11d0-81b9-00c04fd85ab4")
IImnAdviseAccount : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE AdviseAccount(
        DWORD dwAdviseType,
        ACTX *pAcctCtx) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IImnAdviseAccount, 0x0a06bd31, 0x166f, 0x11d0, 0x81,0xb9, 0x00,0xc0,0x4f,0xd8,0x5a,0xb4)
#endif
#else
typedef struct IImnAdviseAccountVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IImnAdviseAccount *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IImnAdviseAccount *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IImnAdviseAccount *This);

    /*** IImnAdviseAccount methods ***/
    HRESULT (STDMETHODCALLTYPE *AdviseAccount)(
        IImnAdviseAccount *This,
        DWORD dwAdviseType,
        ACTX *pAcctCtx);

    END_INTERFACE
} IImnAdviseAccountVtbl;

interface IImnAdviseAccount {
    CONST_VTBL IImnAdviseAccountVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IImnAdviseAccount_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IImnAdviseAccount_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IImnAdviseAccount_Release(This) (This)->lpVtbl->Release(This)
/*** IImnAdviseAccount methods ***/
#define IImnAdviseAccount_AdviseAccount(This,dwAdviseType,pAcctCtx) (This)->lpVtbl->AdviseAccount(This,dwAdviseType,pAcctCtx)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IImnAdviseAccount_QueryInterface(IImnAdviseAccount* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IImnAdviseAccount_AddRef(IImnAdviseAccount* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IImnAdviseAccount_Release(IImnAdviseAccount* This) {
    return This->lpVtbl->Release(This);
}
/*** IImnAdviseAccount methods ***/
static FORCEINLINE HRESULT IImnAdviseAccount_AdviseAccount(IImnAdviseAccount* This,DWORD dwAdviseType,ACTX *pAcctCtx) {
    return This->lpVtbl->AdviseAccount(This,dwAdviseType,pAcctCtx);
}
#endif
#endif

#endif


#endif  /* __IImnAdviseAccount_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IImnAdviseMigrateServer interface
 */
#ifndef __IImnAdviseMigrateServer_INTERFACE_DEFINED__
#define __IImnAdviseMigrateServer_INTERFACE_DEFINED__

DEFINE_GUID(IID_IImnAdviseMigrateServer, 0x8d0aed11, 0x1638, 0x11d0, 0x81,0xb9, 0x00,0xc0,0x4f,0xd8,0x5a,0xb4);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("8d0aed11-1638-11d0-81b9-00c04fd85ab4")
IImnAdviseMigrateServer : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE MigrateServer(
        DWORD dwSrvType,
        IImnAccount *pAccount) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IImnAdviseMigrateServer, 0x8d0aed11, 0x1638, 0x11d0, 0x81,0xb9, 0x00,0xc0,0x4f,0xd8,0x5a,0xb4)
#endif
#else
typedef struct IImnAdviseMigrateServerVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IImnAdviseMigrateServer *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IImnAdviseMigrateServer *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IImnAdviseMigrateServer *This);

    /*** IImnAdviseMigrateServer methods ***/
    HRESULT (STDMETHODCALLTYPE *MigrateServer)(
        IImnAdviseMigrateServer *This,
        DWORD dwSrvType,
        IImnAccount *pAccount);

    END_INTERFACE
} IImnAdviseMigrateServerVtbl;

interface IImnAdviseMigrateServer {
    CONST_VTBL IImnAdviseMigrateServerVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IImnAdviseMigrateServer_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IImnAdviseMigrateServer_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IImnAdviseMigrateServer_Release(This) (This)->lpVtbl->Release(This)
/*** IImnAdviseMigrateServer methods ***/
#define IImnAdviseMigrateServer_MigrateServer(This,dwSrvType,pAccount) (This)->lpVtbl->MigrateServer(This,dwSrvType,pAccount)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IImnAdviseMigrateServer_QueryInterface(IImnAdviseMigrateServer* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IImnAdviseMigrateServer_AddRef(IImnAdviseMigrateServer* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IImnAdviseMigrateServer_Release(IImnAdviseMigrateServer* This) {
    return This->lpVtbl->Release(This);
}
/*** IImnAdviseMigrateServer methods ***/
static FORCEINLINE HRESULT IImnAdviseMigrateServer_MigrateServer(IImnAdviseMigrateServer* This,DWORD dwSrvType,IImnAccount *pAccount) {
    return This->lpVtbl->MigrateServer(This,dwSrvType,pAccount);
}
#endif
#endif

#endif


#endif  /* __IImnAdviseMigrateServer_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IImnEnumAccounts interface
 */
#ifndef __IImnEnumAccounts_INTERFACE_DEFINED__
#define __IImnEnumAccounts_INTERFACE_DEFINED__

DEFINE_GUID(IID_IImnEnumAccounts, 0xfd465483, 0x1384, 0x11d0, 0xab,0xbd, 0x00,0x20,0xaf,0xdf,0xd1,0x0a);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("fd465483-1384-11d0-abbd-0020afdfd10a")
IImnEnumAccounts : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE GetCount(
        ULONG *pcItems) = 0;

    virtual HRESULT STDMETHODCALLTYPE SortByAccountName(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetNext(
        IImnAccount **ppAccount) = 0;

    virtual HRESULT STDMETHODCALLTYPE Reset(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IImnEnumAccounts, 0xfd465483, 0x1384, 0x11d0, 0xab,0xbd, 0x00,0x20,0xaf,0xdf,0xd1,0x0a)
#endif
#else
typedef struct IImnEnumAccountsVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IImnEnumAccounts *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IImnEnumAccounts *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IImnEnumAccounts *This);

    /*** IImnEnumAccounts methods ***/
    HRESULT (STDMETHODCALLTYPE *GetCount)(
        IImnEnumAccounts *This,
        ULONG *pcItems);

    HRESULT (STDMETHODCALLTYPE *SortByAccountName)(
        IImnEnumAccounts *This);

    HRESULT (STDMETHODCALLTYPE *GetNext)(
        IImnEnumAccounts *This,
        IImnAccount **ppAccount);

    HRESULT (STDMETHODCALLTYPE *Reset)(
        IImnEnumAccounts *This);

    END_INTERFACE
} IImnEnumAccountsVtbl;

interface IImnEnumAccounts {
    CONST_VTBL IImnEnumAccountsVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IImnEnumAccounts_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IImnEnumAccounts_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IImnEnumAccounts_Release(This) (This)->lpVtbl->Release(This)
/*** IImnEnumAccounts methods ***/
#define IImnEnumAccounts_GetCount(This,pcItems) (This)->lpVtbl->GetCount(This,pcItems)
#define IImnEnumAccounts_SortByAccountName(This) (This)->lpVtbl->SortByAccountName(This)
#define IImnEnumAccounts_GetNext(This,ppAccount) (This)->lpVtbl->GetNext(This,ppAccount)
#define IImnEnumAccounts_Reset(This) (This)->lpVtbl->Reset(This)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IImnEnumAccounts_QueryInterface(IImnEnumAccounts* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IImnEnumAccounts_AddRef(IImnEnumAccounts* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IImnEnumAccounts_Release(IImnEnumAccounts* This) {
    return This->lpVtbl->Release(This);
}
/*** IImnEnumAccounts methods ***/
static FORCEINLINE HRESULT IImnEnumAccounts_GetCount(IImnEnumAccounts* This,ULONG *pcItems) {
    return This->lpVtbl->GetCount(This,pcItems);
}
static FORCEINLINE HRESULT IImnEnumAccounts_SortByAccountName(IImnEnumAccounts* This) {
    return This->lpVtbl->SortByAccountName(This);
}
static FORCEINLINE HRESULT IImnEnumAccounts_GetNext(IImnEnumAccounts* This,IImnAccount **ppAccount) {
    return This->lpVtbl->GetNext(This,ppAccount);
}
static FORCEINLINE HRESULT IImnEnumAccounts_Reset(IImnEnumAccounts* This) {
    return This->lpVtbl->Reset(This);
}
#endif
#endif

#endif


#endif  /* __IImnEnumAccounts_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IImnAccountManager interface
 */
#ifndef __IImnAccountManager_INTERFACE_DEFINED__
#define __IImnAccountManager_INTERFACE_DEFINED__

typedef struct tagACCTLISTINFO {
    DWORD cbSize;
    ACCTTYPE AcctTypeInit;
    DWORD dwAcctFlags;
    DWORD dwFlags;
} ACCTLISTINFO;
DEFINE_GUID(IID_IImnAccountManager, 0xfd465481, 0x1384, 0x11d0, 0xab,0xbd, 0x00,0x20,0xaf,0xdf,0xd1,0x0a);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("fd465481-1384-11d0-abbd-0020afdfd10a")
IImnAccountManager : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE Init(
        IImnAdviseMigrateServer *pAdviseMigrateServer) = 0;

    virtual HRESULT STDMETHODCALLTYPE CreateAccountObject(
        ACCTTYPE AcctType,
        IImnAccount **ppAccount) = 0;

    virtual HRESULT STDMETHODCALLTYPE Enumerate(
        DWORD dwSrvTypes,
        IImnEnumAccounts **ppEnumAccounts) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetAccountCount(
        ACCTTYPE AcctType,
        ULONG *pcServers) = 0;

    virtual HRESULT STDMETHODCALLTYPE FindAccount(
        DWORD dwPropTag,
        LPCSTR pszSearchData,
        IImnAccount **ppAccount) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetDefaultAccount(
        ACCTTYPE AcctType,
        IImnAccount **ppAccount) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetDefaultAccountName(
        ACCTTYPE AcctType,
        LPSTR pszAccount,
        ULONG cchMax) = 0;

    virtual HRESULT STDMETHODCALLTYPE ProcessNotification(
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam) = 0;

    virtual HRESULT STDMETHODCALLTYPE ValidateDefaultSendAccount(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE AccountListDialog(
        HWND hwnd,
        ACCTLISTINFO *pinfo) = 0;

    virtual HRESULT STDMETHODCALLTYPE Advise(
        IImnAdviseAccount *pAdviseAccount,
        DWORD *pdwConnection) = 0;

    virtual HRESULT STDMETHODCALLTYPE Unadvise(
        DWORD dwConnection) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetUniqueAccountName(
        LPSTR szName,
        UINT cch) = 0;

    virtual HRESULT STDMETHODCALLTYPE InitEx(
        IImnAdviseMigrateServer *pAdviseMigrateServer,
        DWORD dwFlags) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IImnAccountManager, 0xfd465481, 0x1384, 0x11d0, 0xab,0xbd, 0x00,0x20,0xaf,0xdf,0xd1,0x0a)
#endif
#else
typedef struct IImnAccountManagerVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IImnAccountManager *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IImnAccountManager *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IImnAccountManager *This);

    /*** IImnAccountManager methods ***/
    HRESULT (STDMETHODCALLTYPE *Init)(
        IImnAccountManager *This,
        IImnAdviseMigrateServer *pAdviseMigrateServer);

    HRESULT (STDMETHODCALLTYPE *CreateAccountObject)(
        IImnAccountManager *This,
        ACCTTYPE AcctType,
        IImnAccount **ppAccount);

    HRESULT (STDMETHODCALLTYPE *Enumerate)(
        IImnAccountManager *This,
        DWORD dwSrvTypes,
        IImnEnumAccounts **ppEnumAccounts);

    HRESULT (STDMETHODCALLTYPE *GetAccountCount)(
        IImnAccountManager *This,
        ACCTTYPE AcctType,
        ULONG *pcServers);

    HRESULT (STDMETHODCALLTYPE *FindAccount)(
        IImnAccountManager *This,
        DWORD dwPropTag,
        LPCSTR pszSearchData,
        IImnAccount **ppAccount);

    HRESULT (STDMETHODCALLTYPE *GetDefaultAccount)(
        IImnAccountManager *This,
        ACCTTYPE AcctType,
        IImnAccount **ppAccount);

    HRESULT (STDMETHODCALLTYPE *GetDefaultAccountName)(
        IImnAccountManager *This,
        ACCTTYPE AcctType,
        LPSTR pszAccount,
        ULONG cchMax);

    HRESULT (STDMETHODCALLTYPE *ProcessNotification)(
        IImnAccountManager *This,
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam);

    HRESULT (STDMETHODCALLTYPE *ValidateDefaultSendAccount)(
        IImnAccountManager *This);

    HRESULT (STDMETHODCALLTYPE *AccountListDialog)(
        IImnAccountManager *This,
        HWND hwnd,
        ACCTLISTINFO *pinfo);

    HRESULT (STDMETHODCALLTYPE *Advise)(
        IImnAccountManager *This,
        IImnAdviseAccount *pAdviseAccount,
        DWORD *pdwConnection);

    HRESULT (STDMETHODCALLTYPE *Unadvise)(
        IImnAccountManager *This,
        DWORD dwConnection);

    HRESULT (STDMETHODCALLTYPE *GetUniqueAccountName)(
        IImnAccountManager *This,
        LPSTR szName,
        UINT cch);

    HRESULT (STDMETHODCALLTYPE *InitEx)(
        IImnAccountManager *This,
        IImnAdviseMigrateServer *pAdviseMigrateServer,
        DWORD dwFlags);

    END_INTERFACE
} IImnAccountManagerVtbl;

interface IImnAccountManager {
    CONST_VTBL IImnAccountManagerVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IImnAccountManager_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IImnAccountManager_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IImnAccountManager_Release(This) (This)->lpVtbl->Release(This)
/*** IImnAccountManager methods ***/
#define IImnAccountManager_Init(This,pAdviseMigrateServer) (This)->lpVtbl->Init(This,pAdviseMigrateServer)
#define IImnAccountManager_CreateAccountObject(This,AcctType,ppAccount) (This)->lpVtbl->CreateAccountObject(This,AcctType,ppAccount)
#define IImnAccountManager_Enumerate(This,dwSrvTypes,ppEnumAccounts) (This)->lpVtbl->Enumerate(This,dwSrvTypes,ppEnumAccounts)
#define IImnAccountManager_GetAccountCount(This,AcctType,pcServers) (This)->lpVtbl->GetAccountCount(This,AcctType,pcServers)
#define IImnAccountManager_FindAccount(This,dwPropTag,pszSearchData,ppAccount) (This)->lpVtbl->FindAccount(This,dwPropTag,pszSearchData,ppAccount)
#define IImnAccountManager_GetDefaultAccount(This,AcctType,ppAccount) (This)->lpVtbl->GetDefaultAccount(This,AcctType,ppAccount)
#define IImnAccountManager_GetDefaultAccountName(This,AcctType,pszAccount,cchMax) (This)->lpVtbl->GetDefaultAccountName(This,AcctType,pszAccount,cchMax)
#define IImnAccountManager_ProcessNotification(This,uMsg,wParam,lParam) (This)->lpVtbl->ProcessNotification(This,uMsg,wParam,lParam)
#define IImnAccountManager_ValidateDefaultSendAccount(This) (This)->lpVtbl->ValidateDefaultSendAccount(This)
#define IImnAccountManager_AccountListDialog(This,hwnd,pinfo) (This)->lpVtbl->AccountListDialog(This,hwnd,pinfo)
#define IImnAccountManager_Advise(This,pAdviseAccount,pdwConnection) (This)->lpVtbl->Advise(This,pAdviseAccount,pdwConnection)
#define IImnAccountManager_Unadvise(This,dwConnection) (This)->lpVtbl->Unadvise(This,dwConnection)
#define IImnAccountManager_GetUniqueAccountName(This,szName,cch) (This)->lpVtbl->GetUniqueAccountName(This,szName,cch)
#define IImnAccountManager_InitEx(This,pAdviseMigrateServer,dwFlags) (This)->lpVtbl->InitEx(This,pAdviseMigrateServer,dwFlags)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IImnAccountManager_QueryInterface(IImnAccountManager* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IImnAccountManager_AddRef(IImnAccountManager* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IImnAccountManager_Release(IImnAccountManager* This) {
    return This->lpVtbl->Release(This);
}
/*** IImnAccountManager methods ***/
static FORCEINLINE HRESULT IImnAccountManager_Init(IImnAccountManager* This,IImnAdviseMigrateServer *pAdviseMigrateServer) {
    return This->lpVtbl->Init(This,pAdviseMigrateServer);
}
static FORCEINLINE HRESULT IImnAccountManager_CreateAccountObject(IImnAccountManager* This,ACCTTYPE AcctType,IImnAccount **ppAccount) {
    return This->lpVtbl->CreateAccountObject(This,AcctType,ppAccount);
}
static FORCEINLINE HRESULT IImnAccountManager_Enumerate(IImnAccountManager* This,DWORD dwSrvTypes,IImnEnumAccounts **ppEnumAccounts) {
    return This->lpVtbl->Enumerate(This,dwSrvTypes,ppEnumAccounts);
}
static FORCEINLINE HRESULT IImnAccountManager_GetAccountCount(IImnAccountManager* This,ACCTTYPE AcctType,ULONG *pcServers) {
    return This->lpVtbl->GetAccountCount(This,AcctType,pcServers);
}
static FORCEINLINE HRESULT IImnAccountManager_FindAccount(IImnAccountManager* This,DWORD dwPropTag,LPCSTR pszSearchData,IImnAccount **ppAccount) {
    return This->lpVtbl->FindAccount(This,dwPropTag,pszSearchData,ppAccount);
}
static FORCEINLINE HRESULT IImnAccountManager_GetDefaultAccount(IImnAccountManager* This,ACCTTYPE AcctType,IImnAccount **ppAccount) {
    return This->lpVtbl->GetDefaultAccount(This,AcctType,ppAccount);
}
static FORCEINLINE HRESULT IImnAccountManager_GetDefaultAccountName(IImnAccountManager* This,ACCTTYPE AcctType,LPSTR pszAccount,ULONG cchMax) {
    return This->lpVtbl->GetDefaultAccountName(This,AcctType,pszAccount,cchMax);
}
static FORCEINLINE HRESULT IImnAccountManager_ProcessNotification(IImnAccountManager* This,UINT uMsg,WPARAM wParam,LPARAM lParam) {
    return This->lpVtbl->ProcessNotification(This,uMsg,wParam,lParam);
}
static FORCEINLINE HRESULT IImnAccountManager_ValidateDefaultSendAccount(IImnAccountManager* This) {
    return This->lpVtbl->ValidateDefaultSendAccount(This);
}
static FORCEINLINE HRESULT IImnAccountManager_AccountListDialog(IImnAccountManager* This,HWND hwnd,ACCTLISTINFO *pinfo) {
    return This->lpVtbl->AccountListDialog(This,hwnd,pinfo);
}
static FORCEINLINE HRESULT IImnAccountManager_Advise(IImnAccountManager* This,IImnAdviseAccount *pAdviseAccount,DWORD *pdwConnection) {
    return This->lpVtbl->Advise(This,pAdviseAccount,pdwConnection);
}
static FORCEINLINE HRESULT IImnAccountManager_Unadvise(IImnAccountManager* This,DWORD dwConnection) {
    return This->lpVtbl->Unadvise(This,dwConnection);
}
static FORCEINLINE HRESULT IImnAccountManager_GetUniqueAccountName(IImnAccountManager* This,LPSTR szName,UINT cch) {
    return This->lpVtbl->GetUniqueAccountName(This,szName,cch);
}
static FORCEINLINE HRESULT IImnAccountManager_InitEx(IImnAccountManager* This,IImnAdviseMigrateServer *pAdviseMigrateServer,DWORD dwFlags) {
    return This->lpVtbl->InitEx(This,pAdviseMigrateServer,dwFlags);
}
#endif
#endif

#endif


#endif  /* __IImnAccountManager_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IImnAccountManager2 interface
 */
#ifndef __IImnAccountManager2_INTERFACE_DEFINED__
#define __IImnAccountManager2_INTERFACE_DEFINED__

DEFINE_GUID(IID_IImnAccountManager2, 0xc43dfc6f, 0x62bb, 0x11d2, 0xa7,0x27, 0x00,0xc0,0x4f,0x79,0xe7,0xc8);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("c43dfc6f-62bb-11d2-a727-00c04f79e7c8")
IImnAccountManager2 : public IImnAccountManager
{
    virtual HRESULT STDMETHODCALLTYPE InitUser(
        IImnAdviseMigrateServer *pAdviseMigrateServer,
        REFGUID rguidID,
        DWORD dwFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetIncompleteAccount(
        ACCTTYPE AcctType,
        LPSTR pszAccountId,
        ULONG cchMax) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetIncompleteAccount(
        ACCTTYPE AcctType,
        LPCSTR pszAccountId) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IImnAccountManager2, 0xc43dfc6f, 0x62bb, 0x11d2, 0xa7,0x27, 0x00,0xc0,0x4f,0x79,0xe7,0xc8)
#endif
#else
typedef struct IImnAccountManager2Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IImnAccountManager2 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IImnAccountManager2 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IImnAccountManager2 *This);

    /*** IImnAccountManager methods ***/
    HRESULT (STDMETHODCALLTYPE *Init)(
        IImnAccountManager2 *This,
        IImnAdviseMigrateServer *pAdviseMigrateServer);

    HRESULT (STDMETHODCALLTYPE *CreateAccountObject)(
        IImnAccountManager2 *This,
        ACCTTYPE AcctType,
        IImnAccount **ppAccount);

    HRESULT (STDMETHODCALLTYPE *Enumerate)(
        IImnAccountManager2 *This,
        DWORD dwSrvTypes,
        IImnEnumAccounts **ppEnumAccounts);

    HRESULT (STDMETHODCALLTYPE *GetAccountCount)(
        IImnAccountManager2 *This,
        ACCTTYPE AcctType,
        ULONG *pcServers);

    HRESULT (STDMETHODCALLTYPE *FindAccount)(
        IImnAccountManager2 *This,
        DWORD dwPropTag,
        LPCSTR pszSearchData,
        IImnAccount **ppAccount);

    HRESULT (STDMETHODCALLTYPE *GetDefaultAccount)(
        IImnAccountManager2 *This,
        ACCTTYPE AcctType,
        IImnAccount **ppAccount);

    HRESULT (STDMETHODCALLTYPE *GetDefaultAccountName)(
        IImnAccountManager2 *This,
        ACCTTYPE AcctType,
        LPSTR pszAccount,
        ULONG cchMax);

    HRESULT (STDMETHODCALLTYPE *ProcessNotification)(
        IImnAccountManager2 *This,
        UINT uMsg,
        WPARAM wParam,
        LPARAM lParam);

    HRESULT (STDMETHODCALLTYPE *ValidateDefaultSendAccount)(
        IImnAccountManager2 *This);

    HRESULT (STDMETHODCALLTYPE *AccountListDialog)(
        IImnAccountManager2 *This,
        HWND hwnd,
        ACCTLISTINFO *pinfo);

    HRESULT (STDMETHODCALLTYPE *Advise)(
        IImnAccountManager2 *This,
        IImnAdviseAccount *pAdviseAccount,
        DWORD *pdwConnection);

    HRESULT (STDMETHODCALLTYPE *Unadvise)(
        IImnAccountManager2 *This,
        DWORD dwConnection);

    HRESULT (STDMETHODCALLTYPE *GetUniqueAccountName)(
        IImnAccountManager2 *This,
        LPSTR szName,
        UINT cch);

    HRESULT (STDMETHODCALLTYPE *InitEx)(
        IImnAccountManager2 *This,
        IImnAdviseMigrateServer *pAdviseMigrateServer,
        DWORD dwFlags);

    /*** IImnAccountManager2 methods ***/
    HRESULT (STDMETHODCALLTYPE *InitUser)(
        IImnAccountManager2 *This,
        IImnAdviseMigrateServer *pAdviseMigrateServer,
        REFGUID rguidID,
        DWORD dwFlags);

    HRESULT (STDMETHODCALLTYPE *GetIncompleteAccount)(
        IImnAccountManager2 *This,
        ACCTTYPE AcctType,
        LPSTR pszAccountId,
        ULONG cchMax);

    HRESULT (STDMETHODCALLTYPE *SetIncompleteAccount)(
        IImnAccountManager2 *This,
        ACCTTYPE AcctType,
        LPCSTR pszAccountId);

    END_INTERFACE
} IImnAccountManager2Vtbl;

interface IImnAccountManager2 {
    CONST_VTBL IImnAccountManager2Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IImnAccountManager2_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IImnAccountManager2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IImnAccountManager2_Release(This) (This)->lpVtbl->Release(This)
/*** IImnAccountManager methods ***/
#define IImnAccountManager2_Init(This,pAdviseMigrateServer) (This)->lpVtbl->Init(This,pAdviseMigrateServer)
#define IImnAccountManager2_CreateAccountObject(This,AcctType,ppAccount) (This)->lpVtbl->CreateAccountObject(This,AcctType,ppAccount)
#define IImnAccountManager2_Enumerate(This,dwSrvTypes,ppEnumAccounts) (This)->lpVtbl->Enumerate(This,dwSrvTypes,ppEnumAccounts)
#define IImnAccountManager2_GetAccountCount(This,AcctType,pcServers) (This)->lpVtbl->GetAccountCount(This,AcctType,pcServers)
#define IImnAccountManager2_FindAccount(This,dwPropTag,pszSearchData,ppAccount) (This)->lpVtbl->FindAccount(This,dwPropTag,pszSearchData,ppAccount)
#define IImnAccountManager2_GetDefaultAccount(This,AcctType,ppAccount) (This)->lpVtbl->GetDefaultAccount(This,AcctType,ppAccount)
#define IImnAccountManager2_GetDefaultAccountName(This,AcctType,pszAccount,cchMax) (This)->lpVtbl->GetDefaultAccountName(This,AcctType,pszAccount,cchMax)
#define IImnAccountManager2_ProcessNotification(This,uMsg,wParam,lParam) (This)->lpVtbl->ProcessNotification(This,uMsg,wParam,lParam)
#define IImnAccountManager2_ValidateDefaultSendAccount(This) (This)->lpVtbl->ValidateDefaultSendAccount(This)
#define IImnAccountManager2_AccountListDialog(This,hwnd,pinfo) (This)->lpVtbl->AccountListDialog(This,hwnd,pinfo)
#define IImnAccountManager2_Advise(This,pAdviseAccount,pdwConnection) (This)->lpVtbl->Advise(This,pAdviseAccount,pdwConnection)
#define IImnAccountManager2_Unadvise(This,dwConnection) (This)->lpVtbl->Unadvise(This,dwConnection)
#define IImnAccountManager2_GetUniqueAccountName(This,szName,cch) (This)->lpVtbl->GetUniqueAccountName(This,szName,cch)
#define IImnAccountManager2_InitEx(This,pAdviseMigrateServer,dwFlags) (This)->lpVtbl->InitEx(This,pAdviseMigrateServer,dwFlags)
/*** IImnAccountManager2 methods ***/
#define IImnAccountManager2_InitUser(This,pAdviseMigrateServer,rguidID,dwFlags) (This)->lpVtbl->InitUser(This,pAdviseMigrateServer,rguidID,dwFlags)
#define IImnAccountManager2_GetIncompleteAccount(This,AcctType,pszAccountId,cchMax) (This)->lpVtbl->GetIncompleteAccount(This,AcctType,pszAccountId,cchMax)
#define IImnAccountManager2_SetIncompleteAccount(This,AcctType,pszAccountId) (This)->lpVtbl->SetIncompleteAccount(This,AcctType,pszAccountId)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IImnAccountManager2_QueryInterface(IImnAccountManager2* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IImnAccountManager2_AddRef(IImnAccountManager2* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IImnAccountManager2_Release(IImnAccountManager2* This) {
    return This->lpVtbl->Release(This);
}
/*** IImnAccountManager methods ***/
static FORCEINLINE HRESULT IImnAccountManager2_Init(IImnAccountManager2* This,IImnAdviseMigrateServer *pAdviseMigrateServer) {
    return This->lpVtbl->Init(This,pAdviseMigrateServer);
}
static FORCEINLINE HRESULT IImnAccountManager2_CreateAccountObject(IImnAccountManager2* This,ACCTTYPE AcctType,IImnAccount **ppAccount) {
    return This->lpVtbl->CreateAccountObject(This,AcctType,ppAccount);
}
static FORCEINLINE HRESULT IImnAccountManager2_Enumerate(IImnAccountManager2* This,DWORD dwSrvTypes,IImnEnumAccounts **ppEnumAccounts) {
    return This->lpVtbl->Enumerate(This,dwSrvTypes,ppEnumAccounts);
}
static FORCEINLINE HRESULT IImnAccountManager2_GetAccountCount(IImnAccountManager2* This,ACCTTYPE AcctType,ULONG *pcServers) {
    return This->lpVtbl->GetAccountCount(This,AcctType,pcServers);
}
static FORCEINLINE HRESULT IImnAccountManager2_FindAccount(IImnAccountManager2* This,DWORD dwPropTag,LPCSTR pszSearchData,IImnAccount **ppAccount) {
    return This->lpVtbl->FindAccount(This,dwPropTag,pszSearchData,ppAccount);
}
static FORCEINLINE HRESULT IImnAccountManager2_GetDefaultAccount(IImnAccountManager2* This,ACCTTYPE AcctType,IImnAccount **ppAccount) {
    return This->lpVtbl->GetDefaultAccount(This,AcctType,ppAccount);
}
static FORCEINLINE HRESULT IImnAccountManager2_GetDefaultAccountName(IImnAccountManager2* This,ACCTTYPE AcctType,LPSTR pszAccount,ULONG cchMax) {
    return This->lpVtbl->GetDefaultAccountName(This,AcctType,pszAccount,cchMax);
}
static FORCEINLINE HRESULT IImnAccountManager2_ProcessNotification(IImnAccountManager2* This,UINT uMsg,WPARAM wParam,LPARAM lParam) {
    return This->lpVtbl->ProcessNotification(This,uMsg,wParam,lParam);
}
static FORCEINLINE HRESULT IImnAccountManager2_ValidateDefaultSendAccount(IImnAccountManager2* This) {
    return This->lpVtbl->ValidateDefaultSendAccount(This);
}
static FORCEINLINE HRESULT IImnAccountManager2_AccountListDialog(IImnAccountManager2* This,HWND hwnd,ACCTLISTINFO *pinfo) {
    return This->lpVtbl->AccountListDialog(This,hwnd,pinfo);
}
static FORCEINLINE HRESULT IImnAccountManager2_Advise(IImnAccountManager2* This,IImnAdviseAccount *pAdviseAccount,DWORD *pdwConnection) {
    return This->lpVtbl->Advise(This,pAdviseAccount,pdwConnection);
}
static FORCEINLINE HRESULT IImnAccountManager2_Unadvise(IImnAccountManager2* This,DWORD dwConnection) {
    return This->lpVtbl->Unadvise(This,dwConnection);
}
static FORCEINLINE HRESULT IImnAccountManager2_GetUniqueAccountName(IImnAccountManager2* This,LPSTR szName,UINT cch) {
    return This->lpVtbl->GetUniqueAccountName(This,szName,cch);
}
static FORCEINLINE HRESULT IImnAccountManager2_InitEx(IImnAccountManager2* This,IImnAdviseMigrateServer *pAdviseMigrateServer,DWORD dwFlags) {
    return This->lpVtbl->InitEx(This,pAdviseMigrateServer,dwFlags);
}
/*** IImnAccountManager2 methods ***/
static FORCEINLINE HRESULT IImnAccountManager2_InitUser(IImnAccountManager2* This,IImnAdviseMigrateServer *pAdviseMigrateServer,REFGUID rguidID,DWORD dwFlags) {
    return This->lpVtbl->InitUser(This,pAdviseMigrateServer,rguidID,dwFlags);
}
static FORCEINLINE HRESULT IImnAccountManager2_GetIncompleteAccount(IImnAccountManager2* This,ACCTTYPE AcctType,LPSTR pszAccountId,ULONG cchMax) {
    return This->lpVtbl->GetIncompleteAccount(This,AcctType,pszAccountId,cchMax);
}
static FORCEINLINE HRESULT IImnAccountManager2_SetIncompleteAccount(IImnAccountManager2* This,ACCTTYPE AcctType,LPCSTR pszAccountId) {
    return This->lpVtbl->SetIncompleteAccount(This,AcctType,pszAccountId);
}
#endif
#endif

#endif


#endif  /* __IImnAccountManager2_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IPropertyContainer interface
 */
#ifndef __IPropertyContainer_INTERFACE_DEFINED__
#define __IPropertyContainer_INTERFACE_DEFINED__

typedef enum __WIDL_imnact_generated_name_0000000F {
    TYPE_ERROR = 1000,
    TYPE_DWORD = 1001,
    TYPE_LONG = 1002,
    TYPE_WORD = 1003,
    TYPE_SHORT = 1004,
    TYPE_BYTE = 1005,
    TYPE_CHAR = 1006,
    TYPE_FILETIME = 1007,
    TYPE_STRING = 1008,
    TYPE_BINARY = 1009,
    TYPE_FLAGS = 1010,
    TYPE_STREAM = 1011,
    TYPE_WSTRING = 1012,
    TYPE_BOOL = 1013,
    TYPE_PASS = 1014,
    TYPE_ULARGEINTEGER = 1015,
    TYPE_LAST = 1016
} PROPTYPE;
DEFINE_GUID(IID_IPropertyContainer, 0xfd465484, 0x1384, 0x11d0, 0xab,0xbd, 0x00,0x20,0xaf,0xdf,0xd1,0x0a);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("fd465484-1384-11d0-abbd-0020afdfd10a")
IPropertyContainer : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE GetProp(
        DWORD dwPropTag,
        BYTE *pb,
        ULONG *pcb) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetPropDw(
        DWORD dwPropTag,
        DWORD *pdw) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetPropSz(
        DWORD dwPropTag,
        LPSTR psz,
        ULONG cchMax) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetProp(
        DWORD dwPropTag,
        BYTE *pb,
        ULONG cb) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetPropDw(
        DWORD dwPropTag,
        DWORD dw) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetPropSz(
        DWORD dwPropTag,
        LPSTR psz) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IPropertyContainer, 0xfd465484, 0x1384, 0x11d0, 0xab,0xbd, 0x00,0x20,0xaf,0xdf,0xd1,0x0a)
#endif
#else
typedef struct IPropertyContainerVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IPropertyContainer *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IPropertyContainer *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IPropertyContainer *This);

    /*** IPropertyContainer methods ***/
    HRESULT (STDMETHODCALLTYPE *GetProp)(
        IPropertyContainer *This,
        DWORD dwPropTag,
        BYTE *pb,
        ULONG *pcb);

    HRESULT (STDMETHODCALLTYPE *GetPropDw)(
        IPropertyContainer *This,
        DWORD dwPropTag,
        DWORD *pdw);

    HRESULT (STDMETHODCALLTYPE *GetPropSz)(
        IPropertyContainer *This,
        DWORD dwPropTag,
        LPSTR psz,
        ULONG cchMax);

    HRESULT (STDMETHODCALLTYPE *SetProp)(
        IPropertyContainer *This,
        DWORD dwPropTag,
        BYTE *pb,
        ULONG cb);

    HRESULT (STDMETHODCALLTYPE *SetPropDw)(
        IPropertyContainer *This,
        DWORD dwPropTag,
        DWORD dw);

    HRESULT (STDMETHODCALLTYPE *SetPropSz)(
        IPropertyContainer *This,
        DWORD dwPropTag,
        LPSTR psz);

    END_INTERFACE
} IPropertyContainerVtbl;

interface IPropertyContainer {
    CONST_VTBL IPropertyContainerVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IPropertyContainer_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IPropertyContainer_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IPropertyContainer_Release(This) (This)->lpVtbl->Release(This)
/*** IPropertyContainer methods ***/
#define IPropertyContainer_GetProp(This,dwPropTag,pb,pcb) (This)->lpVtbl->GetProp(This,dwPropTag,pb,pcb)
#define IPropertyContainer_GetPropDw(This,dwPropTag,pdw) (This)->lpVtbl->GetPropDw(This,dwPropTag,pdw)
#define IPropertyContainer_GetPropSz(This,dwPropTag,psz,cchMax) (This)->lpVtbl->GetPropSz(This,dwPropTag,psz,cchMax)
#define IPropertyContainer_SetProp(This,dwPropTag,pb,cb) (This)->lpVtbl->SetProp(This,dwPropTag,pb,cb)
#define IPropertyContainer_SetPropDw(This,dwPropTag,dw) (This)->lpVtbl->SetPropDw(This,dwPropTag,dw)
#define IPropertyContainer_SetPropSz(This,dwPropTag,psz) (This)->lpVtbl->SetPropSz(This,dwPropTag,psz)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IPropertyContainer_QueryInterface(IPropertyContainer* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IPropertyContainer_AddRef(IPropertyContainer* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IPropertyContainer_Release(IPropertyContainer* This) {
    return This->lpVtbl->Release(This);
}
/*** IPropertyContainer methods ***/
static FORCEINLINE HRESULT IPropertyContainer_GetProp(IPropertyContainer* This,DWORD dwPropTag,BYTE *pb,ULONG *pcb) {
    return This->lpVtbl->GetProp(This,dwPropTag,pb,pcb);
}
static FORCEINLINE HRESULT IPropertyContainer_GetPropDw(IPropertyContainer* This,DWORD dwPropTag,DWORD *pdw) {
    return This->lpVtbl->GetPropDw(This,dwPropTag,pdw);
}
static FORCEINLINE HRESULT IPropertyContainer_GetPropSz(IPropertyContainer* This,DWORD dwPropTag,LPSTR psz,ULONG cchMax) {
    return This->lpVtbl->GetPropSz(This,dwPropTag,psz,cchMax);
}
static FORCEINLINE HRESULT IPropertyContainer_SetProp(IPropertyContainer* This,DWORD dwPropTag,BYTE *pb,ULONG cb) {
    return This->lpVtbl->SetProp(This,dwPropTag,pb,cb);
}
static FORCEINLINE HRESULT IPropertyContainer_SetPropDw(IPropertyContainer* This,DWORD dwPropTag,DWORD dw) {
    return This->lpVtbl->SetPropDw(This,dwPropTag,dw);
}
static FORCEINLINE HRESULT IPropertyContainer_SetPropSz(IPropertyContainer* This,DWORD dwPropTag,LPSTR psz) {
    return This->lpVtbl->SetPropSz(This,dwPropTag,psz);
}
#endif
#endif

#endif


#endif  /* __IPropertyContainer_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IImnAccount interface
 */
#ifndef __IImnAccount_INTERFACE_DEFINED__
#define __IImnAccount_INTERFACE_DEFINED__

DEFINE_GUID(IID_IImnAccount, 0xfd465482, 0x1384, 0x11d0, 0xab,0xbd, 0x00,0x20,0xaf,0xdf,0xd1,0x0a);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("fd465482-1384-11d0-abbd-0020afdfd10a")
IImnAccount : public IPropertyContainer
{
    virtual HRESULT STDMETHODCALLTYPE Exist(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE SetAsDefault(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE Delete(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE SaveChanges(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetAccountType(
        ACCTTYPE *pAcctType) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetServerTypes(
        DWORD *pdwSrvTypes) = 0;

    virtual HRESULT STDMETHODCALLTYPE ShowProperties(
        HWND hwnd,
        DWORD dwFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE ValidateProperty(
        DWORD dwPropTag,
        BYTE *pb,
        ULONG cb) = 0;

    virtual HRESULT STDMETHODCALLTYPE DoWizard(
        HWND hwnd,
        DWORD dwFlags) = 0;

    virtual HRESULT STDMETHODCALLTYPE DoImportWizard(
        HWND hwnd,
        CLSID clsid,
        DWORD dwFlags) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IImnAccount, 0xfd465482, 0x1384, 0x11d0, 0xab,0xbd, 0x00,0x20,0xaf,0xdf,0xd1,0x0a)
#endif
#else
typedef struct IImnAccountVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IImnAccount *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IImnAccount *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IImnAccount *This);

    /*** IPropertyContainer methods ***/
    HRESULT (STDMETHODCALLTYPE *GetProp)(
        IImnAccount *This,
        DWORD dwPropTag,
        BYTE *pb,
        ULONG *pcb);

    HRESULT (STDMETHODCALLTYPE *GetPropDw)(
        IImnAccount *This,
        DWORD dwPropTag,
        DWORD *pdw);

    HRESULT (STDMETHODCALLTYPE *GetPropSz)(
        IImnAccount *This,
        DWORD dwPropTag,
        LPSTR psz,
        ULONG cchMax);

    HRESULT (STDMETHODCALLTYPE *SetProp)(
        IImnAccount *This,
        DWORD dwPropTag,
        BYTE *pb,
        ULONG cb);

    HRESULT (STDMETHODCALLTYPE *SetPropDw)(
        IImnAccount *This,
        DWORD dwPropTag,
        DWORD dw);

    HRESULT (STDMETHODCALLTYPE *SetPropSz)(
        IImnAccount *This,
        DWORD dwPropTag,
        LPSTR psz);

    /*** IImnAccount methods ***/
    HRESULT (STDMETHODCALLTYPE *Exist)(
        IImnAccount *This);

    HRESULT (STDMETHODCALLTYPE *SetAsDefault)(
        IImnAccount *This);

    HRESULT (STDMETHODCALLTYPE *Delete)(
        IImnAccount *This);

    HRESULT (STDMETHODCALLTYPE *SaveChanges)(
        IImnAccount *This);

    HRESULT (STDMETHODCALLTYPE *GetAccountType)(
        IImnAccount *This,
        ACCTTYPE *pAcctType);

    HRESULT (STDMETHODCALLTYPE *GetServerTypes)(
        IImnAccount *This,
        DWORD *pdwSrvTypes);

    HRESULT (STDMETHODCALLTYPE *ShowProperties)(
        IImnAccount *This,
        HWND hwnd,
        DWORD dwFlags);

    HRESULT (STDMETHODCALLTYPE *ValidateProperty)(
        IImnAccount *This,
        DWORD dwPropTag,
        BYTE *pb,
        ULONG cb);

    HRESULT (STDMETHODCALLTYPE *DoWizard)(
        IImnAccount *This,
        HWND hwnd,
        DWORD dwFlags);

    HRESULT (STDMETHODCALLTYPE *DoImportWizard)(
        IImnAccount *This,
        HWND hwnd,
        CLSID clsid,
        DWORD dwFlags);

    END_INTERFACE
} IImnAccountVtbl;

interface IImnAccount {
    CONST_VTBL IImnAccountVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IImnAccount_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IImnAccount_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IImnAccount_Release(This) (This)->lpVtbl->Release(This)
/*** IPropertyContainer methods ***/
#define IImnAccount_GetProp(This,dwPropTag,pb,pcb) (This)->lpVtbl->GetProp(This,dwPropTag,pb,pcb)
#define IImnAccount_GetPropDw(This,dwPropTag,pdw) (This)->lpVtbl->GetPropDw(This,dwPropTag,pdw)
#define IImnAccount_GetPropSz(This,dwPropTag,psz,cchMax) (This)->lpVtbl->GetPropSz(This,dwPropTag,psz,cchMax)
#define IImnAccount_SetProp(This,dwPropTag,pb,cb) (This)->lpVtbl->SetProp(This,dwPropTag,pb,cb)
#define IImnAccount_SetPropDw(This,dwPropTag,dw) (This)->lpVtbl->SetPropDw(This,dwPropTag,dw)
#define IImnAccount_SetPropSz(This,dwPropTag,psz) (This)->lpVtbl->SetPropSz(This,dwPropTag,psz)
/*** IImnAccount methods ***/
#define IImnAccount_Exist(This) (This)->lpVtbl->Exist(This)
#define IImnAccount_SetAsDefault(This) (This)->lpVtbl->SetAsDefault(This)
#define IImnAccount_Delete(This) (This)->lpVtbl->Delete(This)
#define IImnAccount_SaveChanges(This) (This)->lpVtbl->SaveChanges(This)
#define IImnAccount_GetAccountType(This,pAcctType) (This)->lpVtbl->GetAccountType(This,pAcctType)
#define IImnAccount_GetServerTypes(This,pdwSrvTypes) (This)->lpVtbl->GetServerTypes(This,pdwSrvTypes)
#define IImnAccount_ShowProperties(This,hwnd,dwFlags) (This)->lpVtbl->ShowProperties(This,hwnd,dwFlags)
#define IImnAccount_ValidateProperty(This,dwPropTag,pb,cb) (This)->lpVtbl->ValidateProperty(This,dwPropTag,pb,cb)
#define IImnAccount_DoWizard(This,hwnd,dwFlags) (This)->lpVtbl->DoWizard(This,hwnd,dwFlags)
#define IImnAccount_DoImportWizard(This,hwnd,clsid,dwFlags) (This)->lpVtbl->DoImportWizard(This,hwnd,clsid,dwFlags)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IImnAccount_QueryInterface(IImnAccount* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IImnAccount_AddRef(IImnAccount* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IImnAccount_Release(IImnAccount* This) {
    return This->lpVtbl->Release(This);
}
/*** IPropertyContainer methods ***/
static FORCEINLINE HRESULT IImnAccount_GetProp(IImnAccount* This,DWORD dwPropTag,BYTE *pb,ULONG *pcb) {
    return This->lpVtbl->GetProp(This,dwPropTag,pb,pcb);
}
static FORCEINLINE HRESULT IImnAccount_GetPropDw(IImnAccount* This,DWORD dwPropTag,DWORD *pdw) {
    return This->lpVtbl->GetPropDw(This,dwPropTag,pdw);
}
static FORCEINLINE HRESULT IImnAccount_GetPropSz(IImnAccount* This,DWORD dwPropTag,LPSTR psz,ULONG cchMax) {
    return This->lpVtbl->GetPropSz(This,dwPropTag,psz,cchMax);
}
static FORCEINLINE HRESULT IImnAccount_SetProp(IImnAccount* This,DWORD dwPropTag,BYTE *pb,ULONG cb) {
    return This->lpVtbl->SetProp(This,dwPropTag,pb,cb);
}
static FORCEINLINE HRESULT IImnAccount_SetPropDw(IImnAccount* This,DWORD dwPropTag,DWORD dw) {
    return This->lpVtbl->SetPropDw(This,dwPropTag,dw);
}
static FORCEINLINE HRESULT IImnAccount_SetPropSz(IImnAccount* This,DWORD dwPropTag,LPSTR psz) {
    return This->lpVtbl->SetPropSz(This,dwPropTag,psz);
}
/*** IImnAccount methods ***/
static FORCEINLINE HRESULT IImnAccount_Exist(IImnAccount* This) {
    return This->lpVtbl->Exist(This);
}
static FORCEINLINE HRESULT IImnAccount_SetAsDefault(IImnAccount* This) {
    return This->lpVtbl->SetAsDefault(This);
}
static FORCEINLINE HRESULT IImnAccount_Delete(IImnAccount* This) {
    return This->lpVtbl->Delete(This);
}
static FORCEINLINE HRESULT IImnAccount_SaveChanges(IImnAccount* This) {
    return This->lpVtbl->SaveChanges(This);
}
static FORCEINLINE HRESULT IImnAccount_GetAccountType(IImnAccount* This,ACCTTYPE *pAcctType) {
    return This->lpVtbl->GetAccountType(This,pAcctType);
}
static FORCEINLINE HRESULT IImnAccount_GetServerTypes(IImnAccount* This,DWORD *pdwSrvTypes) {
    return This->lpVtbl->GetServerTypes(This,pdwSrvTypes);
}
static FORCEINLINE HRESULT IImnAccount_ShowProperties(IImnAccount* This,HWND hwnd,DWORD dwFlags) {
    return This->lpVtbl->ShowProperties(This,hwnd,dwFlags);
}
static FORCEINLINE HRESULT IImnAccount_ValidateProperty(IImnAccount* This,DWORD dwPropTag,BYTE *pb,ULONG cb) {
    return This->lpVtbl->ValidateProperty(This,dwPropTag,pb,cb);
}
static FORCEINLINE HRESULT IImnAccount_DoWizard(IImnAccount* This,HWND hwnd,DWORD dwFlags) {
    return This->lpVtbl->DoWizard(This,hwnd,dwFlags);
}
static FORCEINLINE HRESULT IImnAccount_DoImportWizard(IImnAccount* This,HWND hwnd,CLSID clsid,DWORD dwFlags) {
    return This->lpVtbl->DoImportWizard(This,hwnd,clsid,dwFlags);
}
#endif
#endif

#endif


#endif  /* __IImnAccount_INTERFACE_DEFINED__ */

#if defined( WIN16 ) && !defined( __cplusplus )
// {8D4B04E1-1331-11d0-81B8-00C04FD85AB4}
EXTERN_C const IID CLSID_ImnAccountManager =
    { 0x8d4b04e1, 0x1331, 0x11d0, { 0x81, 0xb8, 0x0, 0xc0, 0x4f, 0xd8, 0x5a, 0xb4 } };

// {FD465484-1384-11d0-ABBD-0020AFDFD10A}
EXTERN_C const IID IID_IPropertyContainer =
    { 0xfd465484, 0x1384, 0x11d0, { 0xab, 0xbd, 0x0, 0x20, 0xaf, 0xdf, 0xd1, 0xa } };

// {FD465481-1384-11d0-ABBD-0020AFDFD10A}
EXTERN_C const IID IID_IImnAccountManager =
    { 0xfd465481, 0x1384, 0x11d0, { 0xab, 0xbd, 0x0, 0x20, 0xaf, 0xdf, 0xd1, 0xa } };

// {C43DFC6F-62BB-11d2-A727-00C04F79E7C8}
EXTERN_C const IID IID_IImnAccountManager2 =
    { 0xc43dfc6f, 0x62bb, 0x11d2, { 0xa7, 0x27, 0x0, 0xc0, 0x4f, 0x79, 0xe7, 0xc8 } };

// {FD465482-1384-11d0-ABBD-0020AFDFD10A}
EXTERN_C const IID IID_IImnAccount =
    { 0xfd465482, 0x1384, 0x11d0, { 0xab, 0xbd, 0x0, 0x20, 0xaf, 0xdf, 0xd1, 0xa } };

// {FD465483-1384-11d0-ABBD-0020AFDFD10A}
EXTERN_C const IID IID_IImnEnumAccounts =
    { 0xfd465483, 0x1384, 0x11d0, { 0xab, 0xbd, 0x0, 0x20, 0xaf, 0xdf, 0xd1, 0xa } };

// {8D0AED11-1638-11d0-81B9-00C04FD85AB4}
EXTERN_C const IID IID_IImnAdviseMigrateServer =
    { 0x8d0aed11, 0x1638, 0x11d0, { 0x81, 0xb9, 0x0, 0xc0, 0x4f, 0xd8, 0x5a, 0xb4 } };

// {0A06BD31-166F-11d0-81B9-00C04FD85AB4}
EXTERN_C const IID IID_IImnAdviseAccount =
    { 0xa06bd31, 0x166f, 0x11d0, { 0x81, 0xb9, 0x0, 0xc0, 0x4f, 0xd8, 0x5a, 0xb4 } };

#endif //WIN16 && !__cplusplus
#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */
/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER HWND_UserSize     (ULONG *, ULONG, HWND *);
unsigned char * __RPC_USER HWND_UserMarshal  (ULONG *, unsigned char *, HWND *);
unsigned char * __RPC_USER HWND_UserUnmarshal(ULONG *, unsigned char *, HWND *);
void            __RPC_USER HWND_UserFree     (ULONG *, HWND *);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __imnact_h__ */
