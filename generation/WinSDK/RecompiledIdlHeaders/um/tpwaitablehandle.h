/*** Autogenerated by WIDL 7.0-rc1 from ./tpwaitablehandle.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __tpwaitablehandle_h__
#define __tpwaitablehandle_h__

/* Forward declarations */

#ifndef __ISignalableNotifier_FWD_DEFINED__
#define __ISignalableNotifier_FWD_DEFINED__
typedef interface ISignalableNotifier ISignalableNotifier;
#ifdef __cplusplus
interface ISignalableNotifier;
#endif /* __cplusplus */
#endif

#ifndef __SignalableNotifier_FWD_DEFINED__
#define __SignalableNotifier_FWD_DEFINED__
#ifdef __cplusplus
typedef class SignalableNotifier SignalableNotifier;
#else
typedef struct SignalableNotifier SignalableNotifier;
#endif /* defined __cplusplus */
#endif /* defined __SignalableNotifier_FWD_DEFINED__ */

/* Headers for imported files */

#include <oaidl.h>
#include <ocidl.h>

#ifdef __cplusplus
extern "C" {
#endif

#if (NTDDI_VERSION >= NTDDI_WIN8)
/*****************************************************************************
 * ISignalableNotifier interface
 */
#ifndef __ISignalableNotifier_INTERFACE_DEFINED__
#define __ISignalableNotifier_INTERFACE_DEFINED__

DEFINE_GUID(IID_ISignalableNotifier, 0x46305c32, 0x09c6, 0x45b2, 0xb0,0x32, 0xc1,0x2e,0x46,0x7d,0x7c,0x7e);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("46305c32-09c6-45b2-b032-c12e467d7c7e")
ISignalableNotifier : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE AttachToWaitHandle(
        HANDLE_PTR waitableHandle,
        IUnknown *handler,
        IUnknown *pUnkOuter,
        REFIID riid,
        void **SignalNotifier) = 0;

    virtual HRESULT STDMETHODCALLTYPE AttachToWaitHandleWithTimeout(
        HANDLE_PTR waitableHandle,
        IUnknown *handler,
        LARGE_INTEGER timeout,
        IUnknown *pUnkOuter,
        REFIID riid,
        void **SignalNotifier) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ISignalableNotifier, 0x46305c32, 0x09c6, 0x45b2, 0xb0,0x32, 0xc1,0x2e,0x46,0x7d,0x7c,0x7e)
#endif
#else
typedef struct ISignalableNotifierVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ISignalableNotifier *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ISignalableNotifier *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ISignalableNotifier *This);

    /*** ISignalableNotifier methods ***/
    HRESULT (STDMETHODCALLTYPE *AttachToWaitHandle)(
        ISignalableNotifier *This,
        HANDLE_PTR waitableHandle,
        IUnknown *handler,
        IUnknown *pUnkOuter,
        REFIID riid,
        void **SignalNotifier);

    HRESULT (STDMETHODCALLTYPE *AttachToWaitHandleWithTimeout)(
        ISignalableNotifier *This,
        HANDLE_PTR waitableHandle,
        IUnknown *handler,
        LARGE_INTEGER timeout,
        IUnknown *pUnkOuter,
        REFIID riid,
        void **SignalNotifier);

    END_INTERFACE
} ISignalableNotifierVtbl;

interface ISignalableNotifier {
    CONST_VTBL ISignalableNotifierVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ISignalableNotifier_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ISignalableNotifier_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISignalableNotifier_Release(This) (This)->lpVtbl->Release(This)
/*** ISignalableNotifier methods ***/
#define ISignalableNotifier_AttachToWaitHandle(This,waitableHandle,handler,pUnkOuter,riid,SignalNotifier) (This)->lpVtbl->AttachToWaitHandle(This,waitableHandle,handler,pUnkOuter,riid,SignalNotifier)
#define ISignalableNotifier_AttachToWaitHandleWithTimeout(This,waitableHandle,handler,timeout,pUnkOuter,riid,SignalNotifier) (This)->lpVtbl->AttachToWaitHandleWithTimeout(This,waitableHandle,handler,timeout,pUnkOuter,riid,SignalNotifier)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ISignalableNotifier_QueryInterface(ISignalableNotifier* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ISignalableNotifier_AddRef(ISignalableNotifier* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ISignalableNotifier_Release(ISignalableNotifier* This) {
    return This->lpVtbl->Release(This);
}
/*** ISignalableNotifier methods ***/
static FORCEINLINE HRESULT ISignalableNotifier_AttachToWaitHandle(ISignalableNotifier* This,HANDLE_PTR waitableHandle,IUnknown *handler,IUnknown *pUnkOuter,REFIID riid,void **SignalNotifier) {
    return This->lpVtbl->AttachToWaitHandle(This,waitableHandle,handler,pUnkOuter,riid,SignalNotifier);
}
static FORCEINLINE HRESULT ISignalableNotifier_AttachToWaitHandleWithTimeout(ISignalableNotifier* This,HANDLE_PTR waitableHandle,IUnknown *handler,LARGE_INTEGER timeout,IUnknown *pUnkOuter,REFIID riid,void **SignalNotifier) {
    return This->lpVtbl->AttachToWaitHandleWithTimeout(This,waitableHandle,handler,timeout,pUnkOuter,riid,SignalNotifier);
}
#endif
#endif

#endif


#endif  /* __ISignalableNotifier_INTERFACE_DEFINED__ */

#ifndef __SignalableNotifierProviders_LIBRARY_DEFINED__
#define __SignalableNotifierProviders_LIBRARY_DEFINED__

DEFINE_GUID(LIBID_SignalableNotifierProviders, 0x89739276, 0xdc62, 0x4a6d, 0xa7,0x90, 0x7f,0x10,0x32,0x3e,0xf1,0x5e);

/*****************************************************************************
 * SignalableNotifier coclass
 */

DEFINE_GUID(CLSID_SignalableNotifier, 0x96c7a5ef, 0x0e2c, 0x46d7, 0x9b,0xc1, 0x64,0x45,0xc2,0x44,0x4d,0x7a);

#ifdef __cplusplus
class DECLSPEC_UUID("96c7a5ef-0e2c-46d7-9bc1-6445c2444d7a") SignalableNotifier;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(SignalableNotifier, 0x96c7a5ef, 0x0e2c, 0x46d7, 0x9b,0xc1, 0x64,0x45,0xc2,0x44,0x4d,0x7a)
#endif
#endif

#endif /* __SignalableNotifierProviders_LIBRARY_DEFINED__ */
#endif // (NTDDI >= NTDDI_WIN8)
/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __tpwaitablehandle_h__ */
