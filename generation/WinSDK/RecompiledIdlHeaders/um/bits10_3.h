/*** Autogenerated by WIDL 7.0-rc1 from ./bits10_3.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __bits10_3_h__
#define __bits10_3_h__

/* Forward declarations */

#ifndef __IBackgroundCopyServerCertificateValidationCallback_FWD_DEFINED__
#define __IBackgroundCopyServerCertificateValidationCallback_FWD_DEFINED__
typedef interface IBackgroundCopyServerCertificateValidationCallback IBackgroundCopyServerCertificateValidationCallback;
#ifdef __cplusplus
interface IBackgroundCopyServerCertificateValidationCallback;
#endif /* __cplusplus */
#endif

#ifndef __IBackgroundCopyJobHttpOptions3_FWD_DEFINED__
#define __IBackgroundCopyJobHttpOptions3_FWD_DEFINED__
typedef interface IBackgroundCopyJobHttpOptions3 IBackgroundCopyJobHttpOptions3;
#ifdef __cplusplus
interface IBackgroundCopyJobHttpOptions3;
#endif /* __cplusplus */
#endif

#ifndef __BackgroundCopyManager10_3_FWD_DEFINED__
#define __BackgroundCopyManager10_3_FWD_DEFINED__
#ifdef __cplusplus
typedef class BackgroundCopyManager10_3 BackgroundCopyManager10_3;
#else
typedef struct BackgroundCopyManager10_3 BackgroundCopyManager10_3;
#endif /* defined __cplusplus */
#endif /* defined __BackgroundCopyManager10_3_FWD_DEFINED__ */

/* Headers for imported files */

#include <bits.h>
#include <bits1_5.h>
#include <bits2_0.h>
#include <bits2_5.h>
#include <bits3_0.h>
#include <bits4_0.h>
#include <bits5_0.h>
#include <bits10_1.h>
#include <bits10_2.h>

#ifdef __cplusplus
extern "C" {
#endif

#include <winapifamily.h>
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
/*****************************************************************************
 * IBackgroundCopyServerCertificateValidationCallback interface
 */
#ifndef __IBackgroundCopyServerCertificateValidationCallback_INTERFACE_DEFINED__
#define __IBackgroundCopyServerCertificateValidationCallback_INTERFACE_DEFINED__

DEFINE_GUID(IID_IBackgroundCopyServerCertificateValidationCallback, 0x4cec0d02, 0xdef7, 0x4158, 0x81,0x3a, 0xc3,0x2a,0x46,0x94,0x5f,0xf7);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("4cec0d02-def7-4158-813a-c32a46945ff7")
IBackgroundCopyServerCertificateValidationCallback : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE ValidateServerCertificate(
        IBackgroundCopyJob *job,
        IBackgroundCopyFile *file,
        DWORD certLength,
        const BYTE certData[],
        DWORD certEncodingType,
        DWORD certStoreLength,
        const BYTE certStoreData[]) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IBackgroundCopyServerCertificateValidationCallback, 0x4cec0d02, 0xdef7, 0x4158, 0x81,0x3a, 0xc3,0x2a,0x46,0x94,0x5f,0xf7)
#endif
#else
typedef struct IBackgroundCopyServerCertificateValidationCallbackVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IBackgroundCopyServerCertificateValidationCallback *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IBackgroundCopyServerCertificateValidationCallback *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IBackgroundCopyServerCertificateValidationCallback *This);

    /*** IBackgroundCopyServerCertificateValidationCallback methods ***/
    HRESULT (STDMETHODCALLTYPE *ValidateServerCertificate)(
        IBackgroundCopyServerCertificateValidationCallback *This,
        IBackgroundCopyJob *job,
        IBackgroundCopyFile *file,
        DWORD certLength,
        const BYTE certData[],
        DWORD certEncodingType,
        DWORD certStoreLength,
        const BYTE certStoreData[]);

    END_INTERFACE
} IBackgroundCopyServerCertificateValidationCallbackVtbl;

interface IBackgroundCopyServerCertificateValidationCallback {
    CONST_VTBL IBackgroundCopyServerCertificateValidationCallbackVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IBackgroundCopyServerCertificateValidationCallback_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IBackgroundCopyServerCertificateValidationCallback_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IBackgroundCopyServerCertificateValidationCallback_Release(This) (This)->lpVtbl->Release(This)
/*** IBackgroundCopyServerCertificateValidationCallback methods ***/
#define IBackgroundCopyServerCertificateValidationCallback_ValidateServerCertificate(This,job,file,certLength,certData,certEncodingType,certStoreLength,certStoreData) (This)->lpVtbl->ValidateServerCertificate(This,job,file,certLength,certData,certEncodingType,certStoreLength,certStoreData)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IBackgroundCopyServerCertificateValidationCallback_QueryInterface(IBackgroundCopyServerCertificateValidationCallback* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IBackgroundCopyServerCertificateValidationCallback_AddRef(IBackgroundCopyServerCertificateValidationCallback* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IBackgroundCopyServerCertificateValidationCallback_Release(IBackgroundCopyServerCertificateValidationCallback* This) {
    return This->lpVtbl->Release(This);
}
/*** IBackgroundCopyServerCertificateValidationCallback methods ***/
static FORCEINLINE HRESULT IBackgroundCopyServerCertificateValidationCallback_ValidateServerCertificate(IBackgroundCopyServerCertificateValidationCallback* This,IBackgroundCopyJob *job,IBackgroundCopyFile *file,DWORD certLength,const BYTE certData[],DWORD certEncodingType,DWORD certStoreLength,const BYTE certStoreData[]) {
    return This->lpVtbl->ValidateServerCertificate(This,job,file,certLength,certData,certEncodingType,certStoreLength,certStoreData);
}
#endif
#endif

#endif


#endif  /* __IBackgroundCopyServerCertificateValidationCallback_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IBackgroundCopyJobHttpOptions3 interface
 */
#ifndef __IBackgroundCopyJobHttpOptions3_INTERFACE_DEFINED__
#define __IBackgroundCopyJobHttpOptions3_INTERFACE_DEFINED__

DEFINE_GUID(IID_IBackgroundCopyJobHttpOptions3, 0x8a9263d3, 0xfd4c, 0x4eda, 0x9b,0x28, 0x30,0x13,0x2a,0x4d,0x4e,0x3c);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("8a9263d3-fd4c-4eda-9b28-30132a4d4e3c")
IBackgroundCopyJobHttpOptions3 : public IBackgroundCopyJobHttpOptions2
{
    virtual HRESULT STDMETHODCALLTYPE SetServerCertificateValidationInterface(
        IUnknown *certValidationCallback) = 0;

    virtual HRESULT STDMETHODCALLTYPE MakeCustomHeadersWriteOnly(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IBackgroundCopyJobHttpOptions3, 0x8a9263d3, 0xfd4c, 0x4eda, 0x9b,0x28, 0x30,0x13,0x2a,0x4d,0x4e,0x3c)
#endif
#else
typedef struct IBackgroundCopyJobHttpOptions3Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IBackgroundCopyJobHttpOptions3 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IBackgroundCopyJobHttpOptions3 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IBackgroundCopyJobHttpOptions3 *This);

    /*** IBackgroundCopyJobHttpOptions methods ***/
    HRESULT (STDMETHODCALLTYPE *SetClientCertificateByID)(
        IBackgroundCopyJobHttpOptions3 *This,
        BG_CERT_STORE_LOCATION StoreLocation,
        LPCWSTR StoreName,
        byte *pCertHashBlob);

    HRESULT (STDMETHODCALLTYPE *SetClientCertificateByName)(
        IBackgroundCopyJobHttpOptions3 *This,
        BG_CERT_STORE_LOCATION StoreLocation,
        LPCWSTR StoreName,
        LPCWSTR SubjectName);

    HRESULT (STDMETHODCALLTYPE *RemoveClientCertificate)(
        IBackgroundCopyJobHttpOptions3 *This);

    HRESULT (STDMETHODCALLTYPE *GetClientCertificate)(
        IBackgroundCopyJobHttpOptions3 *This,
        BG_CERT_STORE_LOCATION *pStoreLocation,
        LPWSTR *pStoreName,
        byte **ppCertHashBlob,
        LPWSTR *pSubjectName);

    HRESULT (STDMETHODCALLTYPE *SetCustomHeaders)(
        IBackgroundCopyJobHttpOptions3 *This,
        LPCWSTR RequestHeaders);

    HRESULT (STDMETHODCALLTYPE *GetCustomHeaders)(
        IBackgroundCopyJobHttpOptions3 *This,
        LPWSTR *pRequestHeaders);

    HRESULT (STDMETHODCALLTYPE *SetSecurityFlags)(
        IBackgroundCopyJobHttpOptions3 *This,
        ULONG Flags);

    HRESULT (STDMETHODCALLTYPE *GetSecurityFlags)(
        IBackgroundCopyJobHttpOptions3 *This,
        ULONG *pFlags);

    /*** IBackgroundCopyJobHttpOptions2 methods ***/
    HRESULT (STDMETHODCALLTYPE *SetHttpMethod)(
        IBackgroundCopyJobHttpOptions3 *This,
        LPCWSTR method);

    HRESULT (STDMETHODCALLTYPE *GetHttpMethod)(
        IBackgroundCopyJobHttpOptions3 *This,
        LPWSTR *method);

    /*** IBackgroundCopyJobHttpOptions3 methods ***/
    HRESULT (STDMETHODCALLTYPE *SetServerCertificateValidationInterface)(
        IBackgroundCopyJobHttpOptions3 *This,
        IUnknown *certValidationCallback);

    HRESULT (STDMETHODCALLTYPE *MakeCustomHeadersWriteOnly)(
        IBackgroundCopyJobHttpOptions3 *This);

    END_INTERFACE
} IBackgroundCopyJobHttpOptions3Vtbl;

interface IBackgroundCopyJobHttpOptions3 {
    CONST_VTBL IBackgroundCopyJobHttpOptions3Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IBackgroundCopyJobHttpOptions3_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IBackgroundCopyJobHttpOptions3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IBackgroundCopyJobHttpOptions3_Release(This) (This)->lpVtbl->Release(This)
/*** IBackgroundCopyJobHttpOptions methods ***/
#define IBackgroundCopyJobHttpOptions3_SetClientCertificateByID(This,StoreLocation,StoreName,pCertHashBlob) (This)->lpVtbl->SetClientCertificateByID(This,StoreLocation,StoreName,pCertHashBlob)
#define IBackgroundCopyJobHttpOptions3_SetClientCertificateByName(This,StoreLocation,StoreName,SubjectName) (This)->lpVtbl->SetClientCertificateByName(This,StoreLocation,StoreName,SubjectName)
#define IBackgroundCopyJobHttpOptions3_RemoveClientCertificate(This) (This)->lpVtbl->RemoveClientCertificate(This)
#define IBackgroundCopyJobHttpOptions3_GetClientCertificate(This,pStoreLocation,pStoreName,ppCertHashBlob,pSubjectName) (This)->lpVtbl->GetClientCertificate(This,pStoreLocation,pStoreName,ppCertHashBlob,pSubjectName)
#define IBackgroundCopyJobHttpOptions3_SetCustomHeaders(This,RequestHeaders) (This)->lpVtbl->SetCustomHeaders(This,RequestHeaders)
#define IBackgroundCopyJobHttpOptions3_GetCustomHeaders(This,pRequestHeaders) (This)->lpVtbl->GetCustomHeaders(This,pRequestHeaders)
#define IBackgroundCopyJobHttpOptions3_SetSecurityFlags(This,Flags) (This)->lpVtbl->SetSecurityFlags(This,Flags)
#define IBackgroundCopyJobHttpOptions3_GetSecurityFlags(This,pFlags) (This)->lpVtbl->GetSecurityFlags(This,pFlags)
/*** IBackgroundCopyJobHttpOptions2 methods ***/
#define IBackgroundCopyJobHttpOptions3_SetHttpMethod(This,method) (This)->lpVtbl->SetHttpMethod(This,method)
#define IBackgroundCopyJobHttpOptions3_GetHttpMethod(This,method) (This)->lpVtbl->GetHttpMethod(This,method)
/*** IBackgroundCopyJobHttpOptions3 methods ***/
#define IBackgroundCopyJobHttpOptions3_SetServerCertificateValidationInterface(This,certValidationCallback) (This)->lpVtbl->SetServerCertificateValidationInterface(This,certValidationCallback)
#define IBackgroundCopyJobHttpOptions3_MakeCustomHeadersWriteOnly(This) (This)->lpVtbl->MakeCustomHeadersWriteOnly(This)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions3_QueryInterface(IBackgroundCopyJobHttpOptions3* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IBackgroundCopyJobHttpOptions3_AddRef(IBackgroundCopyJobHttpOptions3* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IBackgroundCopyJobHttpOptions3_Release(IBackgroundCopyJobHttpOptions3* This) {
    return This->lpVtbl->Release(This);
}
/*** IBackgroundCopyJobHttpOptions methods ***/
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions3_SetClientCertificateByID(IBackgroundCopyJobHttpOptions3* This,BG_CERT_STORE_LOCATION StoreLocation,LPCWSTR StoreName,byte *pCertHashBlob) {
    return This->lpVtbl->SetClientCertificateByID(This,StoreLocation,StoreName,pCertHashBlob);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions3_SetClientCertificateByName(IBackgroundCopyJobHttpOptions3* This,BG_CERT_STORE_LOCATION StoreLocation,LPCWSTR StoreName,LPCWSTR SubjectName) {
    return This->lpVtbl->SetClientCertificateByName(This,StoreLocation,StoreName,SubjectName);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions3_RemoveClientCertificate(IBackgroundCopyJobHttpOptions3* This) {
    return This->lpVtbl->RemoveClientCertificate(This);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions3_GetClientCertificate(IBackgroundCopyJobHttpOptions3* This,BG_CERT_STORE_LOCATION *pStoreLocation,LPWSTR *pStoreName,byte **ppCertHashBlob,LPWSTR *pSubjectName) {
    return This->lpVtbl->GetClientCertificate(This,pStoreLocation,pStoreName,ppCertHashBlob,pSubjectName);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions3_SetCustomHeaders(IBackgroundCopyJobHttpOptions3* This,LPCWSTR RequestHeaders) {
    return This->lpVtbl->SetCustomHeaders(This,RequestHeaders);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions3_GetCustomHeaders(IBackgroundCopyJobHttpOptions3* This,LPWSTR *pRequestHeaders) {
    return This->lpVtbl->GetCustomHeaders(This,pRequestHeaders);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions3_SetSecurityFlags(IBackgroundCopyJobHttpOptions3* This,ULONG Flags) {
    return This->lpVtbl->SetSecurityFlags(This,Flags);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions3_GetSecurityFlags(IBackgroundCopyJobHttpOptions3* This,ULONG *pFlags) {
    return This->lpVtbl->GetSecurityFlags(This,pFlags);
}
/*** IBackgroundCopyJobHttpOptions2 methods ***/
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions3_SetHttpMethod(IBackgroundCopyJobHttpOptions3* This,LPCWSTR method) {
    return This->lpVtbl->SetHttpMethod(This,method);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions3_GetHttpMethod(IBackgroundCopyJobHttpOptions3* This,LPWSTR *method) {
    return This->lpVtbl->GetHttpMethod(This,method);
}
/*** IBackgroundCopyJobHttpOptions3 methods ***/
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions3_SetServerCertificateValidationInterface(IBackgroundCopyJobHttpOptions3* This,IUnknown *certValidationCallback) {
    return This->lpVtbl->SetServerCertificateValidationInterface(This,certValidationCallback);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions3_MakeCustomHeadersWriteOnly(IBackgroundCopyJobHttpOptions3* This) {
    return This->lpVtbl->MakeCustomHeadersWriteOnly(This);
}
#endif
#endif

#endif


#endif  /* __IBackgroundCopyJobHttpOptions3_INTERFACE_DEFINED__ */

#ifndef __BackgroundCopyManager10_3_LIBRARY_DEFINED__
#define __BackgroundCopyManager10_3_LIBRARY_DEFINED__

DEFINE_GUID(LIBID_BackgroundCopyManager10_3, 0x9fd340e7, 0xbb7e, 0x46e6, 0xb9,0x12, 0xc6,0xd0,0x89,0x4f,0x9a,0xc9);

/*****************************************************************************
 * BackgroundCopyManager10_3 coclass
 */

DEFINE_GUID(CLSID_BackgroundCopyManager10_3, 0x5fd42ad5, 0xc04e, 0x4d36, 0xad,0xc7, 0xe0,0x8f,0xf1,0x57,0x37,0xad);

#ifdef __cplusplus
class DECLSPEC_UUID("5fd42ad5-c04e-4d36-adc7-e08ff15737ad") BackgroundCopyManager10_3;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(BackgroundCopyManager10_3, 0x5fd42ad5, 0xc04e, 0x4d36, 0xad,0xc7, 0xe0,0x8f,0xf1,0x57,0x37,0xad)
#endif
#endif

#ifndef __IBackgroundCopyCallback3_FWD_DEFINED__
#define __IBackgroundCopyCallback3_FWD_DEFINED__
typedef interface IBackgroundCopyCallback3 IBackgroundCopyCallback3;
#ifdef __cplusplus
interface IBackgroundCopyCallback3;
#endif /* __cplusplus */
#endif

#ifndef __IBackgroundCopyFile6_FWD_DEFINED__
#define __IBackgroundCopyFile6_FWD_DEFINED__
typedef interface IBackgroundCopyFile6 IBackgroundCopyFile6;
#ifdef __cplusplus
interface IBackgroundCopyFile6;
#endif /* __cplusplus */
#endif

#ifndef __IBackgroundCopyJob5_FWD_DEFINED__
#define __IBackgroundCopyJob5_FWD_DEFINED__
typedef interface IBackgroundCopyJob5 IBackgroundCopyJob5;
#ifdef __cplusplus
interface IBackgroundCopyJob5;
#endif /* __cplusplus */
#endif

#ifndef __IBackgroundCopyJobHttpOptions3_FWD_DEFINED__
#define __IBackgroundCopyJobHttpOptions3_FWD_DEFINED__
typedef interface IBackgroundCopyJobHttpOptions3 IBackgroundCopyJobHttpOptions3;
#ifdef __cplusplus
interface IBackgroundCopyJobHttpOptions3;
#endif /* __cplusplus */
#endif

#ifndef __IBackgroundCopyServerCertificateValidationCallback_FWD_DEFINED__
#define __IBackgroundCopyServerCertificateValidationCallback_FWD_DEFINED__
typedef interface IBackgroundCopyServerCertificateValidationCallback IBackgroundCopyServerCertificateValidationCallback;
#ifdef __cplusplus
interface IBackgroundCopyServerCertificateValidationCallback;
#endif /* __cplusplus */
#endif

#ifndef __IBitsPeer_FWD_DEFINED__
#define __IBitsPeer_FWD_DEFINED__
typedef interface IBitsPeer IBitsPeer;
#ifdef __cplusplus
interface IBitsPeer;
#endif /* __cplusplus */
#endif

#ifndef __IBitsPeerCacheAdministration_FWD_DEFINED__
#define __IBitsPeerCacheAdministration_FWD_DEFINED__
typedef interface IBitsPeerCacheAdministration IBitsPeerCacheAdministration;
#ifdef __cplusplus
interface IBitsPeerCacheAdministration;
#endif /* __cplusplus */
#endif

#ifndef __IBitsPeerCacheRecord_FWD_DEFINED__
#define __IBitsPeerCacheRecord_FWD_DEFINED__
typedef interface IBitsPeerCacheRecord IBitsPeerCacheRecord;
#ifdef __cplusplus
interface IBitsPeerCacheRecord;
#endif /* __cplusplus */
#endif

#ifndef __IBitsTokenOptions_FWD_DEFINED__
#define __IBitsTokenOptions_FWD_DEFINED__
typedef interface IBitsTokenOptions IBitsTokenOptions;
#ifdef __cplusplus
interface IBitsTokenOptions;
#endif /* __cplusplus */
#endif

#ifndef __IEnumBitsPeerCacheRecords_FWD_DEFINED__
#define __IEnumBitsPeerCacheRecords_FWD_DEFINED__
typedef interface IEnumBitsPeerCacheRecords IEnumBitsPeerCacheRecords;
#ifdef __cplusplus
interface IEnumBitsPeerCacheRecords;
#endif /* __cplusplus */
#endif

#ifndef __IEnumBitsPeers_FWD_DEFINED__
#define __IEnumBitsPeers_FWD_DEFINED__
typedef interface IEnumBitsPeers IEnumBitsPeers;
#ifdef __cplusplus
interface IEnumBitsPeers;
#endif /* __cplusplus */
#endif

#endif /* __BackgroundCopyManager10_3_LIBRARY_DEFINED__ */
#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */
/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __bits10_3_h__ */
