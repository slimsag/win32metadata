/*** Autogenerated by WIDL 5.0 from ./windows.ui.xaml.media.dxinterop.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __windows_ui_xaml_media_dxinterop_h__
#define __windows_ui_xaml_media_dxinterop_h__

/* Forward declarations */

#ifndef __ISurfaceImageSourceNative_FWD_DEFINED__
#define __ISurfaceImageSourceNative_FWD_DEFINED__
typedef interface ISurfaceImageSourceNative ISurfaceImageSourceNative;
#ifdef __cplusplus
interface ISurfaceImageSourceNative;
#endif /* __cplusplus */
#endif

#ifndef __IVirtualSurfaceUpdatesCallbackNative_FWD_DEFINED__
#define __IVirtualSurfaceUpdatesCallbackNative_FWD_DEFINED__
typedef interface IVirtualSurfaceUpdatesCallbackNative IVirtualSurfaceUpdatesCallbackNative;
#ifdef __cplusplus
interface IVirtualSurfaceUpdatesCallbackNative;
#endif /* __cplusplus */
#endif

#ifndef __IVirtualSurfaceImageSourceNative_FWD_DEFINED__
#define __IVirtualSurfaceImageSourceNative_FWD_DEFINED__
typedef interface IVirtualSurfaceImageSourceNative IVirtualSurfaceImageSourceNative;
#ifdef __cplusplus
interface IVirtualSurfaceImageSourceNative;
#endif /* __cplusplus */
#endif

#ifndef __ISwapChainBackgroundPanelNative_FWD_DEFINED__
#define __ISwapChainBackgroundPanelNative_FWD_DEFINED__
typedef interface ISwapChainBackgroundPanelNative ISwapChainBackgroundPanelNative;
#ifdef __cplusplus
interface ISwapChainBackgroundPanelNative;
#endif /* __cplusplus */
#endif

#ifndef __ISurfaceImageSourceManagerNative_FWD_DEFINED__
#define __ISurfaceImageSourceManagerNative_FWD_DEFINED__
typedef interface ISurfaceImageSourceManagerNative ISurfaceImageSourceManagerNative;
#ifdef __cplusplus
interface ISurfaceImageSourceManagerNative;
#endif /* __cplusplus */
#endif

#ifndef __ISurfaceImageSourceNativeWithD2D_FWD_DEFINED__
#define __ISurfaceImageSourceNativeWithD2D_FWD_DEFINED__
typedef interface ISurfaceImageSourceNativeWithD2D ISurfaceImageSourceNativeWithD2D;
#ifdef __cplusplus
interface ISurfaceImageSourceNativeWithD2D;
#endif /* __cplusplus */
#endif

#ifndef __ISwapChainPanelNative_FWD_DEFINED__
#define __ISwapChainPanelNative_FWD_DEFINED__
typedef interface ISwapChainPanelNative ISwapChainPanelNative;
#ifdef __cplusplus
interface ISwapChainPanelNative;
#endif /* __cplusplus */
#endif

#ifndef __ISwapChainPanelNative2_FWD_DEFINED__
#define __ISwapChainPanelNative2_FWD_DEFINED__
typedef interface ISwapChainPanelNative2 ISwapChainPanelNative2;
#ifdef __cplusplus
interface ISwapChainPanelNative2;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <oaidl.h>
#include <dxgi.h>

#ifdef __cplusplus
extern "C" {
#endif

#if (NTDDI_VERSION >= NTDDI_WIN8)
#if 0
typedef RECT *REFRECT;
#endif // 0
#ifndef REFRECT
#ifdef __cplusplus
#define REFRECT const RECT &
#else // !__cplusplus
#define REFRECT const RECT * __MIDL_CONST
#endif // __cplusplus
#endif //REFRECT
/*****************************************************************************
 * ISurfaceImageSourceNative interface
 */
#ifndef __ISurfaceImageSourceNative_INTERFACE_DEFINED__
#define __ISurfaceImageSourceNative_INTERFACE_DEFINED__

DEFINE_GUID(IID_ISurfaceImageSourceNative, 0xf2e9edc1, 0xd307, 0x4525, 0x98,0x86, 0x0f,0xaf,0xaa,0x44,0x16,0x3c);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("f2e9edc1-d307-4525-9886-0fafaa44163c")
ISurfaceImageSourceNative : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE SetDevice(
        IDXGIDevice *device) = 0;

    virtual HRESULT STDMETHODCALLTYPE BeginDraw(
        RECT updateRect,
        IDXGISurface **surface,
        POINT *offset) = 0;

    virtual HRESULT STDMETHODCALLTYPE EndDraw(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ISurfaceImageSourceNative, 0xf2e9edc1, 0xd307, 0x4525, 0x98,0x86, 0x0f,0xaf,0xaa,0x44,0x16,0x3c)
#endif
#else
typedef struct ISurfaceImageSourceNativeVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ISurfaceImageSourceNative *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ISurfaceImageSourceNative *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ISurfaceImageSourceNative *This);

    /*** ISurfaceImageSourceNative methods ***/
    HRESULT (STDMETHODCALLTYPE *SetDevice)(
        ISurfaceImageSourceNative *This,
        IDXGIDevice *device);

    HRESULT (STDMETHODCALLTYPE *BeginDraw)(
        ISurfaceImageSourceNative *This,
        RECT updateRect,
        IDXGISurface **surface,
        POINT *offset);

    HRESULT (STDMETHODCALLTYPE *EndDraw)(
        ISurfaceImageSourceNative *This);

    END_INTERFACE
} ISurfaceImageSourceNativeVtbl;

interface ISurfaceImageSourceNative {
    CONST_VTBL ISurfaceImageSourceNativeVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ISurfaceImageSourceNative_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ISurfaceImageSourceNative_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISurfaceImageSourceNative_Release(This) (This)->lpVtbl->Release(This)
/*** ISurfaceImageSourceNative methods ***/
#define ISurfaceImageSourceNative_SetDevice(This,device) (This)->lpVtbl->SetDevice(This,device)
#define ISurfaceImageSourceNative_BeginDraw(This,updateRect,surface,offset) (This)->lpVtbl->BeginDraw(This,updateRect,surface,offset)
#define ISurfaceImageSourceNative_EndDraw(This) (This)->lpVtbl->EndDraw(This)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ISurfaceImageSourceNative_QueryInterface(ISurfaceImageSourceNative* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ISurfaceImageSourceNative_AddRef(ISurfaceImageSourceNative* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ISurfaceImageSourceNative_Release(ISurfaceImageSourceNative* This) {
    return This->lpVtbl->Release(This);
}
/*** ISurfaceImageSourceNative methods ***/
static FORCEINLINE HRESULT ISurfaceImageSourceNative_SetDevice(ISurfaceImageSourceNative* This,IDXGIDevice *device) {
    return This->lpVtbl->SetDevice(This,device);
}
static FORCEINLINE HRESULT ISurfaceImageSourceNative_BeginDraw(ISurfaceImageSourceNative* This,RECT updateRect,IDXGISurface **surface,POINT *offset) {
    return This->lpVtbl->BeginDraw(This,updateRect,surface,offset);
}
static FORCEINLINE HRESULT ISurfaceImageSourceNative_EndDraw(ISurfaceImageSourceNative* This) {
    return This->lpVtbl->EndDraw(This);
}
#endif
#endif

#endif


#endif  /* __ISurfaceImageSourceNative_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IVirtualSurfaceUpdatesCallbackNative interface
 */
#ifndef __IVirtualSurfaceUpdatesCallbackNative_INTERFACE_DEFINED__
#define __IVirtualSurfaceUpdatesCallbackNative_INTERFACE_DEFINED__

DEFINE_GUID(IID_IVirtualSurfaceUpdatesCallbackNative, 0xdbf2e947, 0x8e6c, 0x4254, 0x9e,0xee, 0x77,0x38,0xf7,0x13,0x86,0xc9);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("dbf2e947-8e6c-4254-9eee-7738f71386c9")
IVirtualSurfaceUpdatesCallbackNative : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE UpdatesNeeded(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IVirtualSurfaceUpdatesCallbackNative, 0xdbf2e947, 0x8e6c, 0x4254, 0x9e,0xee, 0x77,0x38,0xf7,0x13,0x86,0xc9)
#endif
#else
typedef struct IVirtualSurfaceUpdatesCallbackNativeVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IVirtualSurfaceUpdatesCallbackNative *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IVirtualSurfaceUpdatesCallbackNative *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IVirtualSurfaceUpdatesCallbackNative *This);

    /*** IVirtualSurfaceUpdatesCallbackNative methods ***/
    HRESULT (STDMETHODCALLTYPE *UpdatesNeeded)(
        IVirtualSurfaceUpdatesCallbackNative *This);

    END_INTERFACE
} IVirtualSurfaceUpdatesCallbackNativeVtbl;

interface IVirtualSurfaceUpdatesCallbackNative {
    CONST_VTBL IVirtualSurfaceUpdatesCallbackNativeVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IVirtualSurfaceUpdatesCallbackNative_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IVirtualSurfaceUpdatesCallbackNative_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IVirtualSurfaceUpdatesCallbackNative_Release(This) (This)->lpVtbl->Release(This)
/*** IVirtualSurfaceUpdatesCallbackNative methods ***/
#define IVirtualSurfaceUpdatesCallbackNative_UpdatesNeeded(This) (This)->lpVtbl->UpdatesNeeded(This)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IVirtualSurfaceUpdatesCallbackNative_QueryInterface(IVirtualSurfaceUpdatesCallbackNative* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IVirtualSurfaceUpdatesCallbackNative_AddRef(IVirtualSurfaceUpdatesCallbackNative* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IVirtualSurfaceUpdatesCallbackNative_Release(IVirtualSurfaceUpdatesCallbackNative* This) {
    return This->lpVtbl->Release(This);
}
/*** IVirtualSurfaceUpdatesCallbackNative methods ***/
static FORCEINLINE HRESULT IVirtualSurfaceUpdatesCallbackNative_UpdatesNeeded(IVirtualSurfaceUpdatesCallbackNative* This) {
    return This->lpVtbl->UpdatesNeeded(This);
}
#endif
#endif

#endif


#endif  /* __IVirtualSurfaceUpdatesCallbackNative_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IVirtualSurfaceImageSourceNative interface
 */
#ifndef __IVirtualSurfaceImageSourceNative_INTERFACE_DEFINED__
#define __IVirtualSurfaceImageSourceNative_INTERFACE_DEFINED__

DEFINE_GUID(IID_IVirtualSurfaceImageSourceNative, 0xe9550983, 0x360b, 0x4f53, 0xb3,0x91, 0xaf,0xd6,0x95,0x07,0x86,0x91);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("e9550983-360b-4f53-b391-afd695078691")
IVirtualSurfaceImageSourceNative : public ISurfaceImageSourceNative
{
    virtual HRESULT STDMETHODCALLTYPE Invalidate(
        RECT updateRect) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetUpdateRectCount(
        DWORD *count) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetUpdateRects(
        RECT *updates,
        DWORD count) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetVisibleBounds(
        RECT *bounds) = 0;

    virtual HRESULT STDMETHODCALLTYPE RegisterForUpdatesNeeded(
        IVirtualSurfaceUpdatesCallbackNative *callback) = 0;

    virtual HRESULT STDMETHODCALLTYPE Resize(
        INT newWidth,
        INT newHeight) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IVirtualSurfaceImageSourceNative, 0xe9550983, 0x360b, 0x4f53, 0xb3,0x91, 0xaf,0xd6,0x95,0x07,0x86,0x91)
#endif
#else
typedef struct IVirtualSurfaceImageSourceNativeVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IVirtualSurfaceImageSourceNative *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IVirtualSurfaceImageSourceNative *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IVirtualSurfaceImageSourceNative *This);

    /*** ISurfaceImageSourceNative methods ***/
    HRESULT (STDMETHODCALLTYPE *SetDevice)(
        IVirtualSurfaceImageSourceNative *This,
        IDXGIDevice *device);

    HRESULT (STDMETHODCALLTYPE *BeginDraw)(
        IVirtualSurfaceImageSourceNative *This,
        RECT updateRect,
        IDXGISurface **surface,
        POINT *offset);

    HRESULT (STDMETHODCALLTYPE *EndDraw)(
        IVirtualSurfaceImageSourceNative *This);

    /*** IVirtualSurfaceImageSourceNative methods ***/
    HRESULT (STDMETHODCALLTYPE *Invalidate)(
        IVirtualSurfaceImageSourceNative *This,
        RECT updateRect);

    HRESULT (STDMETHODCALLTYPE *GetUpdateRectCount)(
        IVirtualSurfaceImageSourceNative *This,
        DWORD *count);

    HRESULT (STDMETHODCALLTYPE *GetUpdateRects)(
        IVirtualSurfaceImageSourceNative *This,
        RECT *updates,
        DWORD count);

    HRESULT (STDMETHODCALLTYPE *GetVisibleBounds)(
        IVirtualSurfaceImageSourceNative *This,
        RECT *bounds);

    HRESULT (STDMETHODCALLTYPE *RegisterForUpdatesNeeded)(
        IVirtualSurfaceImageSourceNative *This,
        IVirtualSurfaceUpdatesCallbackNative *callback);

    HRESULT (STDMETHODCALLTYPE *Resize)(
        IVirtualSurfaceImageSourceNative *This,
        INT newWidth,
        INT newHeight);

    END_INTERFACE
} IVirtualSurfaceImageSourceNativeVtbl;

interface IVirtualSurfaceImageSourceNative {
    CONST_VTBL IVirtualSurfaceImageSourceNativeVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IVirtualSurfaceImageSourceNative_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IVirtualSurfaceImageSourceNative_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IVirtualSurfaceImageSourceNative_Release(This) (This)->lpVtbl->Release(This)
/*** ISurfaceImageSourceNative methods ***/
#define IVirtualSurfaceImageSourceNative_SetDevice(This,device) (This)->lpVtbl->SetDevice(This,device)
#define IVirtualSurfaceImageSourceNative_BeginDraw(This,updateRect,surface,offset) (This)->lpVtbl->BeginDraw(This,updateRect,surface,offset)
#define IVirtualSurfaceImageSourceNative_EndDraw(This) (This)->lpVtbl->EndDraw(This)
/*** IVirtualSurfaceImageSourceNative methods ***/
#define IVirtualSurfaceImageSourceNative_Invalidate(This,updateRect) (This)->lpVtbl->Invalidate(This,updateRect)
#define IVirtualSurfaceImageSourceNative_GetUpdateRectCount(This,count) (This)->lpVtbl->GetUpdateRectCount(This,count)
#define IVirtualSurfaceImageSourceNative_GetUpdateRects(This,updates,count) (This)->lpVtbl->GetUpdateRects(This,updates,count)
#define IVirtualSurfaceImageSourceNative_GetVisibleBounds(This,bounds) (This)->lpVtbl->GetVisibleBounds(This,bounds)
#define IVirtualSurfaceImageSourceNative_RegisterForUpdatesNeeded(This,callback) (This)->lpVtbl->RegisterForUpdatesNeeded(This,callback)
#define IVirtualSurfaceImageSourceNative_Resize(This,newWidth,newHeight) (This)->lpVtbl->Resize(This,newWidth,newHeight)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IVirtualSurfaceImageSourceNative_QueryInterface(IVirtualSurfaceImageSourceNative* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IVirtualSurfaceImageSourceNative_AddRef(IVirtualSurfaceImageSourceNative* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IVirtualSurfaceImageSourceNative_Release(IVirtualSurfaceImageSourceNative* This) {
    return This->lpVtbl->Release(This);
}
/*** ISurfaceImageSourceNative methods ***/
static FORCEINLINE HRESULT IVirtualSurfaceImageSourceNative_SetDevice(IVirtualSurfaceImageSourceNative* This,IDXGIDevice *device) {
    return This->lpVtbl->SetDevice(This,device);
}
static FORCEINLINE HRESULT IVirtualSurfaceImageSourceNative_BeginDraw(IVirtualSurfaceImageSourceNative* This,RECT updateRect,IDXGISurface **surface,POINT *offset) {
    return This->lpVtbl->BeginDraw(This,updateRect,surface,offset);
}
static FORCEINLINE HRESULT IVirtualSurfaceImageSourceNative_EndDraw(IVirtualSurfaceImageSourceNative* This) {
    return This->lpVtbl->EndDraw(This);
}
/*** IVirtualSurfaceImageSourceNative methods ***/
static FORCEINLINE HRESULT IVirtualSurfaceImageSourceNative_Invalidate(IVirtualSurfaceImageSourceNative* This,RECT updateRect) {
    return This->lpVtbl->Invalidate(This,updateRect);
}
static FORCEINLINE HRESULT IVirtualSurfaceImageSourceNative_GetUpdateRectCount(IVirtualSurfaceImageSourceNative* This,DWORD *count) {
    return This->lpVtbl->GetUpdateRectCount(This,count);
}
static FORCEINLINE HRESULT IVirtualSurfaceImageSourceNative_GetUpdateRects(IVirtualSurfaceImageSourceNative* This,RECT *updates,DWORD count) {
    return This->lpVtbl->GetUpdateRects(This,updates,count);
}
static FORCEINLINE HRESULT IVirtualSurfaceImageSourceNative_GetVisibleBounds(IVirtualSurfaceImageSourceNative* This,RECT *bounds) {
    return This->lpVtbl->GetVisibleBounds(This,bounds);
}
static FORCEINLINE HRESULT IVirtualSurfaceImageSourceNative_RegisterForUpdatesNeeded(IVirtualSurfaceImageSourceNative* This,IVirtualSurfaceUpdatesCallbackNative *callback) {
    return This->lpVtbl->RegisterForUpdatesNeeded(This,callback);
}
static FORCEINLINE HRESULT IVirtualSurfaceImageSourceNative_Resize(IVirtualSurfaceImageSourceNative* This,INT newWidth,INT newHeight) {
    return This->lpVtbl->Resize(This,newWidth,newHeight);
}
#endif
#endif

#endif


#endif  /* __IVirtualSurfaceImageSourceNative_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ISwapChainBackgroundPanelNative interface
 */
#ifndef __ISwapChainBackgroundPanelNative_INTERFACE_DEFINED__
#define __ISwapChainBackgroundPanelNative_INTERFACE_DEFINED__

DEFINE_GUID(IID_ISwapChainBackgroundPanelNative, 0x43bebd4e, 0xadd5, 0x4035, 0x8f,0x85, 0x56,0x08,0xd0,0x8e,0x9d,0xc9);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("43bebd4e-add5-4035-8f85-5608d08e9dc9")
ISwapChainBackgroundPanelNative : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE SetSwapChain(
        IDXGISwapChain *swapChain) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ISwapChainBackgroundPanelNative, 0x43bebd4e, 0xadd5, 0x4035, 0x8f,0x85, 0x56,0x08,0xd0,0x8e,0x9d,0xc9)
#endif
#else
typedef struct ISwapChainBackgroundPanelNativeVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ISwapChainBackgroundPanelNative *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ISwapChainBackgroundPanelNative *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ISwapChainBackgroundPanelNative *This);

    /*** ISwapChainBackgroundPanelNative methods ***/
    HRESULT (STDMETHODCALLTYPE *SetSwapChain)(
        ISwapChainBackgroundPanelNative *This,
        IDXGISwapChain *swapChain);

    END_INTERFACE
} ISwapChainBackgroundPanelNativeVtbl;

interface ISwapChainBackgroundPanelNative {
    CONST_VTBL ISwapChainBackgroundPanelNativeVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ISwapChainBackgroundPanelNative_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ISwapChainBackgroundPanelNative_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISwapChainBackgroundPanelNative_Release(This) (This)->lpVtbl->Release(This)
/*** ISwapChainBackgroundPanelNative methods ***/
#define ISwapChainBackgroundPanelNative_SetSwapChain(This,swapChain) (This)->lpVtbl->SetSwapChain(This,swapChain)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ISwapChainBackgroundPanelNative_QueryInterface(ISwapChainBackgroundPanelNative* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ISwapChainBackgroundPanelNative_AddRef(ISwapChainBackgroundPanelNative* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ISwapChainBackgroundPanelNative_Release(ISwapChainBackgroundPanelNative* This) {
    return This->lpVtbl->Release(This);
}
/*** ISwapChainBackgroundPanelNative methods ***/
static FORCEINLINE HRESULT ISwapChainBackgroundPanelNative_SetSwapChain(ISwapChainBackgroundPanelNative* This,IDXGISwapChain *swapChain) {
    return This->lpVtbl->SetSwapChain(This,swapChain);
}
#endif
#endif

#endif


#endif  /* __ISwapChainBackgroundPanelNative_INTERFACE_DEFINED__ */

#endif // NTDDI_VERSION >= NTDDI_WIN8
#if (NTDDI_VERSION >= NTDDI_WINBLUE)
#define E_SURFACE_CONTENTS_LOST 0x802b0020
/*****************************************************************************
 * ISurfaceImageSourceManagerNative interface
 */
#ifndef __ISurfaceImageSourceManagerNative_INTERFACE_DEFINED__
#define __ISurfaceImageSourceManagerNative_INTERFACE_DEFINED__

DEFINE_GUID(IID_ISurfaceImageSourceManagerNative, 0x4c8798b7, 0x1d88, 0x4a0f, 0xb5,0x9b, 0xb9,0x3f,0x60,0x0d,0xe8,0xc8);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("4c8798b7-1d88-4a0f-b59b-b93f600de8c8")
ISurfaceImageSourceManagerNative : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE FlushAllSurfacesWithDevice(
        IUnknown *device) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ISurfaceImageSourceManagerNative, 0x4c8798b7, 0x1d88, 0x4a0f, 0xb5,0x9b, 0xb9,0x3f,0x60,0x0d,0xe8,0xc8)
#endif
#else
typedef struct ISurfaceImageSourceManagerNativeVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ISurfaceImageSourceManagerNative *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ISurfaceImageSourceManagerNative *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ISurfaceImageSourceManagerNative *This);

    /*** ISurfaceImageSourceManagerNative methods ***/
    HRESULT (STDMETHODCALLTYPE *FlushAllSurfacesWithDevice)(
        ISurfaceImageSourceManagerNative *This,
        IUnknown *device);

    END_INTERFACE
} ISurfaceImageSourceManagerNativeVtbl;

interface ISurfaceImageSourceManagerNative {
    CONST_VTBL ISurfaceImageSourceManagerNativeVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ISurfaceImageSourceManagerNative_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ISurfaceImageSourceManagerNative_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISurfaceImageSourceManagerNative_Release(This) (This)->lpVtbl->Release(This)
/*** ISurfaceImageSourceManagerNative methods ***/
#define ISurfaceImageSourceManagerNative_FlushAllSurfacesWithDevice(This,device) (This)->lpVtbl->FlushAllSurfacesWithDevice(This,device)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ISurfaceImageSourceManagerNative_QueryInterface(ISurfaceImageSourceManagerNative* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ISurfaceImageSourceManagerNative_AddRef(ISurfaceImageSourceManagerNative* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ISurfaceImageSourceManagerNative_Release(ISurfaceImageSourceManagerNative* This) {
    return This->lpVtbl->Release(This);
}
/*** ISurfaceImageSourceManagerNative methods ***/
static FORCEINLINE HRESULT ISurfaceImageSourceManagerNative_FlushAllSurfacesWithDevice(ISurfaceImageSourceManagerNative* This,IUnknown *device) {
    return This->lpVtbl->FlushAllSurfacesWithDevice(This,device);
}
#endif
#endif

#endif


#endif  /* __ISurfaceImageSourceManagerNative_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ISurfaceImageSourceNativeWithD2D interface
 */
#ifndef __ISurfaceImageSourceNativeWithD2D_INTERFACE_DEFINED__
#define __ISurfaceImageSourceNativeWithD2D_INTERFACE_DEFINED__

DEFINE_GUID(IID_ISurfaceImageSourceNativeWithD2D, 0x54298223, 0x41e1, 0x4a41, 0x9c,0x08, 0x02,0xe8,0x25,0x68,0x64,0xa1);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("54298223-41e1-4a41-9c08-02e8256864a1")
ISurfaceImageSourceNativeWithD2D : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE SetDevice(
        IUnknown *device) = 0;

    virtual HRESULT STDMETHODCALLTYPE BeginDraw(
        REFRECT updateRect,
        REFIID iid,
        void **updateObject,
        POINT *offset) = 0;

    virtual HRESULT STDMETHODCALLTYPE EndDraw(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE SuspendDraw(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE ResumeDraw(
        ) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ISurfaceImageSourceNativeWithD2D, 0x54298223, 0x41e1, 0x4a41, 0x9c,0x08, 0x02,0xe8,0x25,0x68,0x64,0xa1)
#endif
#else
typedef struct ISurfaceImageSourceNativeWithD2DVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ISurfaceImageSourceNativeWithD2D *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ISurfaceImageSourceNativeWithD2D *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ISurfaceImageSourceNativeWithD2D *This);

    /*** ISurfaceImageSourceNativeWithD2D methods ***/
    HRESULT (STDMETHODCALLTYPE *SetDevice)(
        ISurfaceImageSourceNativeWithD2D *This,
        IUnknown *device);

    HRESULT (STDMETHODCALLTYPE *BeginDraw)(
        ISurfaceImageSourceNativeWithD2D *This,
        REFRECT updateRect,
        REFIID iid,
        void **updateObject,
        POINT *offset);

    HRESULT (STDMETHODCALLTYPE *EndDraw)(
        ISurfaceImageSourceNativeWithD2D *This);

    HRESULT (STDMETHODCALLTYPE *SuspendDraw)(
        ISurfaceImageSourceNativeWithD2D *This);

    HRESULT (STDMETHODCALLTYPE *ResumeDraw)(
        ISurfaceImageSourceNativeWithD2D *This);

    END_INTERFACE
} ISurfaceImageSourceNativeWithD2DVtbl;

interface ISurfaceImageSourceNativeWithD2D {
    CONST_VTBL ISurfaceImageSourceNativeWithD2DVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ISurfaceImageSourceNativeWithD2D_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ISurfaceImageSourceNativeWithD2D_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISurfaceImageSourceNativeWithD2D_Release(This) (This)->lpVtbl->Release(This)
/*** ISurfaceImageSourceNativeWithD2D methods ***/
#define ISurfaceImageSourceNativeWithD2D_SetDevice(This,device) (This)->lpVtbl->SetDevice(This,device)
#define ISurfaceImageSourceNativeWithD2D_BeginDraw(This,updateRect,iid,updateObject,offset) (This)->lpVtbl->BeginDraw(This,updateRect,iid,updateObject,offset)
#define ISurfaceImageSourceNativeWithD2D_EndDraw(This) (This)->lpVtbl->EndDraw(This)
#define ISurfaceImageSourceNativeWithD2D_SuspendDraw(This) (This)->lpVtbl->SuspendDraw(This)
#define ISurfaceImageSourceNativeWithD2D_ResumeDraw(This) (This)->lpVtbl->ResumeDraw(This)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ISurfaceImageSourceNativeWithD2D_QueryInterface(ISurfaceImageSourceNativeWithD2D* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ISurfaceImageSourceNativeWithD2D_AddRef(ISurfaceImageSourceNativeWithD2D* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ISurfaceImageSourceNativeWithD2D_Release(ISurfaceImageSourceNativeWithD2D* This) {
    return This->lpVtbl->Release(This);
}
/*** ISurfaceImageSourceNativeWithD2D methods ***/
static FORCEINLINE HRESULT ISurfaceImageSourceNativeWithD2D_SetDevice(ISurfaceImageSourceNativeWithD2D* This,IUnknown *device) {
    return This->lpVtbl->SetDevice(This,device);
}
static FORCEINLINE HRESULT ISurfaceImageSourceNativeWithD2D_BeginDraw(ISurfaceImageSourceNativeWithD2D* This,REFRECT updateRect,REFIID iid,void **updateObject,POINT *offset) {
    return This->lpVtbl->BeginDraw(This,updateRect,iid,updateObject,offset);
}
static FORCEINLINE HRESULT ISurfaceImageSourceNativeWithD2D_EndDraw(ISurfaceImageSourceNativeWithD2D* This) {
    return This->lpVtbl->EndDraw(This);
}
static FORCEINLINE HRESULT ISurfaceImageSourceNativeWithD2D_SuspendDraw(ISurfaceImageSourceNativeWithD2D* This) {
    return This->lpVtbl->SuspendDraw(This);
}
static FORCEINLINE HRESULT ISurfaceImageSourceNativeWithD2D_ResumeDraw(ISurfaceImageSourceNativeWithD2D* This) {
    return This->lpVtbl->ResumeDraw(This);
}
#endif
#endif

#endif


#endif  /* __ISurfaceImageSourceNativeWithD2D_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ISwapChainPanelNative interface
 */
#ifndef __ISwapChainPanelNative_INTERFACE_DEFINED__
#define __ISwapChainPanelNative_INTERFACE_DEFINED__

DEFINE_GUID(IID_ISwapChainPanelNative, 0xf92f19d2, 0x3ade, 0x45a6, 0xa2,0x0c, 0xf6,0xf1,0xea,0x90,0x55,0x4b);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("f92f19d2-3ade-45a6-a20c-f6f1ea90554b")
ISwapChainPanelNative : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE SetSwapChain(
        IDXGISwapChain *swapChain) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ISwapChainPanelNative, 0xf92f19d2, 0x3ade, 0x45a6, 0xa2,0x0c, 0xf6,0xf1,0xea,0x90,0x55,0x4b)
#endif
#else
typedef struct ISwapChainPanelNativeVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ISwapChainPanelNative *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ISwapChainPanelNative *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ISwapChainPanelNative *This);

    /*** ISwapChainPanelNative methods ***/
    HRESULT (STDMETHODCALLTYPE *SetSwapChain)(
        ISwapChainPanelNative *This,
        IDXGISwapChain *swapChain);

    END_INTERFACE
} ISwapChainPanelNativeVtbl;

interface ISwapChainPanelNative {
    CONST_VTBL ISwapChainPanelNativeVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ISwapChainPanelNative_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ISwapChainPanelNative_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISwapChainPanelNative_Release(This) (This)->lpVtbl->Release(This)
/*** ISwapChainPanelNative methods ***/
#define ISwapChainPanelNative_SetSwapChain(This,swapChain) (This)->lpVtbl->SetSwapChain(This,swapChain)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ISwapChainPanelNative_QueryInterface(ISwapChainPanelNative* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ISwapChainPanelNative_AddRef(ISwapChainPanelNative* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ISwapChainPanelNative_Release(ISwapChainPanelNative* This) {
    return This->lpVtbl->Release(This);
}
/*** ISwapChainPanelNative methods ***/
static FORCEINLINE HRESULT ISwapChainPanelNative_SetSwapChain(ISwapChainPanelNative* This,IDXGISwapChain *swapChain) {
    return This->lpVtbl->SetSwapChain(This,swapChain);
}
#endif
#endif

#endif


#endif  /* __ISwapChainPanelNative_INTERFACE_DEFINED__ */

#endif // NTDDI_VERSION >= NTDDI_WINBLUE
#if (NTDDI_VERSION >= NTDDI_WINTHRESHOLD)
/*****************************************************************************
 * ISwapChainPanelNative2 interface
 */
#ifndef __ISwapChainPanelNative2_INTERFACE_DEFINED__
#define __ISwapChainPanelNative2_INTERFACE_DEFINED__

DEFINE_GUID(IID_ISwapChainPanelNative2, 0xd5a2f60c, 0x37b2, 0x44a2, 0x93,0x7b, 0x8d,0x8e,0xb9,0x72,0x68,0x21);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("d5a2f60c-37b2-44a2-937b-8d8eb9726821")
ISwapChainPanelNative2 : public ISwapChainPanelNative
{
    virtual HRESULT STDMETHODCALLTYPE SetSwapChainHandle(
        HANDLE swapChainHandle) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(ISwapChainPanelNative2, 0xd5a2f60c, 0x37b2, 0x44a2, 0x93,0x7b, 0x8d,0x8e,0xb9,0x72,0x68,0x21)
#endif
#else
typedef struct ISwapChainPanelNative2Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ISwapChainPanelNative2 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ISwapChainPanelNative2 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ISwapChainPanelNative2 *This);

    /*** ISwapChainPanelNative methods ***/
    HRESULT (STDMETHODCALLTYPE *SetSwapChain)(
        ISwapChainPanelNative2 *This,
        IDXGISwapChain *swapChain);

    /*** ISwapChainPanelNative2 methods ***/
    HRESULT (STDMETHODCALLTYPE *SetSwapChainHandle)(
        ISwapChainPanelNative2 *This,
        HANDLE swapChainHandle);

    END_INTERFACE
} ISwapChainPanelNative2Vtbl;

interface ISwapChainPanelNative2 {
    CONST_VTBL ISwapChainPanelNative2Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define ISwapChainPanelNative2_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ISwapChainPanelNative2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ISwapChainPanelNative2_Release(This) (This)->lpVtbl->Release(This)
/*** ISwapChainPanelNative methods ***/
#define ISwapChainPanelNative2_SetSwapChain(This,swapChain) (This)->lpVtbl->SetSwapChain(This,swapChain)
/*** ISwapChainPanelNative2 methods ***/
#define ISwapChainPanelNative2_SetSwapChainHandle(This,swapChainHandle) (This)->lpVtbl->SetSwapChainHandle(This,swapChainHandle)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT ISwapChainPanelNative2_QueryInterface(ISwapChainPanelNative2* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG ISwapChainPanelNative2_AddRef(ISwapChainPanelNative2* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG ISwapChainPanelNative2_Release(ISwapChainPanelNative2* This) {
    return This->lpVtbl->Release(This);
}
/*** ISwapChainPanelNative methods ***/
static FORCEINLINE HRESULT ISwapChainPanelNative2_SetSwapChain(ISwapChainPanelNative2* This,IDXGISwapChain *swapChain) {
    return This->lpVtbl->SetSwapChain(This,swapChain);
}
/*** ISwapChainPanelNative2 methods ***/
static FORCEINLINE HRESULT ISwapChainPanelNative2_SetSwapChainHandle(ISwapChainPanelNative2* This,HANDLE swapChainHandle) {
    return This->lpVtbl->SetSwapChainHandle(This,swapChainHandle);
}
#endif
#endif

#endif


#endif  /* __ISwapChainPanelNative2_INTERFACE_DEFINED__ */

#endif // NTDDI_VERSION >= NTDDI_WINTHRESHOLD
/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __windows_ui_xaml_media_dxinterop_h__ */
