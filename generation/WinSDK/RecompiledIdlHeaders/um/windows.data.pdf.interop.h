/*** Autogenerated by WIDL 5.0 from ./windows.data.pdf.interop.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __windows_data_pdf_interop_h__
#define __windows_data_pdf_interop_h__

/* Forward declarations */

#ifndef __IPdfRendererNative_FWD_DEFINED__
#define __IPdfRendererNative_FWD_DEFINED__
typedef interface IPdfRendererNative IPdfRendererNative;
#ifdef __cplusplus
interface IPdfRendererNative;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <oaidl.h>
#include <dxgi.h>

#ifdef __cplusplus
extern "C" {
#endif

#include <d2dbasetypes.h>
#if (NTDDI_VERSION >= NTDDI_WINBLUE)
#if 0
typedef DWORD *ID2D1DeviceContext;
typedef DWORD *D2D_RECT_F;
typedef DWORD *D2D_COLOR_F;
#endif
typedef interface ID2D1DeviceContext ID2D1DeviceContext;
typedef HRESULT (WINAPI* PFN_PDF_CREATE_RENDERER)(
    _In_ IDXGIDevice*,
    _Out_ IPdfRendererNative**);

HRESULT WINAPI PdfCreateRenderer(
    _In_ IDXGIDevice* pDevice,
    _Out_ IPdfRendererNative** ppRenderer);

typedef struct PDF_RENDER_PARAMS {
    D2D_RECT_F SourceRect;
    UINT32 DestinationWidth;
    UINT32 DestinationHeight;
    D2D_COLOR_F BackgroundColor;
    BOOLEAN IgnoreHighContrast;
} PDF_RENDER_PARAMS;
#if defined(__cplusplus) && !defined(CINTERFACE)
static const D2D_RECT_F sc_PdfRenderParamsDefaultSrcRect = {0.f, 0.f, 0.f, 0.f};
static const D2D_COLOR_F sc_PdfRenderParamsDefaultBkColor = {1.f, 1.f, 1.f, 1.f};
__inline PDF_RENDER_PARAMS PdfRenderParams(
                                  _In_ CONST D2D_RECT_F& srcRect = sc_PdfRenderParamsDefaultSrcRect,
                                  _In_ UINT32 destinationWidth = 0.f,
                                  _In_ UINT32 destinationHeight = 0.f,
                                  _In_ CONST D2D_COLOR_F& bkColor = sc_PdfRenderParamsDefaultBkColor,
                                  _In_ BOOLEAN ignoreHighContrast = TRUE)
{ PDF_RENDER_PARAMS p = {srcRect, destinationWidth, destinationHeight, bkColor, ignoreHighContrast}; return p; }
#endif
/*****************************************************************************
 * IPdfRendererNative interface
 */
#ifndef __IPdfRendererNative_INTERFACE_DEFINED__
#define __IPdfRendererNative_INTERFACE_DEFINED__

DEFINE_GUID(IID_IPdfRendererNative, 0x7d9dcd91, 0xd277, 0x4947, 0x85,0x27, 0x07,0xa0,0xda,0xed,0xa9,0x4a);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("7d9dcd91-d277-4947-8527-07a0daeda94a")
IPdfRendererNative : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE RenderPageToSurface(
        IUnknown *pdfPage,
        IDXGISurface *pSurface,
        POINT offset,
        PDF_RENDER_PARAMS *pRenderParams) = 0;

    virtual HRESULT STDMETHODCALLTYPE RenderPageToDeviceContext(
        IUnknown *pdfPage,
        ID2D1DeviceContext *pD2DDeviceContext,
        PDF_RENDER_PARAMS *pRenderParams) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IPdfRendererNative, 0x7d9dcd91, 0xd277, 0x4947, 0x85,0x27, 0x07,0xa0,0xda,0xed,0xa9,0x4a)
#endif
#else
typedef struct IPdfRendererNativeVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IPdfRendererNative *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IPdfRendererNative *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IPdfRendererNative *This);

    /*** IPdfRendererNative methods ***/
    HRESULT (STDMETHODCALLTYPE *RenderPageToSurface)(
        IPdfRendererNative *This,
        IUnknown *pdfPage,
        IDXGISurface *pSurface,
        POINT offset,
        PDF_RENDER_PARAMS *pRenderParams);

    HRESULT (STDMETHODCALLTYPE *RenderPageToDeviceContext)(
        IPdfRendererNative *This,
        IUnknown *pdfPage,
        ID2D1DeviceContext *pD2DDeviceContext,
        PDF_RENDER_PARAMS *pRenderParams);

    END_INTERFACE
} IPdfRendererNativeVtbl;

interface IPdfRendererNative {
    CONST_VTBL IPdfRendererNativeVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IPdfRendererNative_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IPdfRendererNative_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IPdfRendererNative_Release(This) (This)->lpVtbl->Release(This)
/*** IPdfRendererNative methods ***/
#define IPdfRendererNative_RenderPageToSurface(This,pdfPage,pSurface,offset,pRenderParams) (This)->lpVtbl->RenderPageToSurface(This,pdfPage,pSurface,offset,pRenderParams)
#define IPdfRendererNative_RenderPageToDeviceContext(This,pdfPage,pD2DDeviceContext,pRenderParams) (This)->lpVtbl->RenderPageToDeviceContext(This,pdfPage,pD2DDeviceContext,pRenderParams)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IPdfRendererNative_QueryInterface(IPdfRendererNative* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IPdfRendererNative_AddRef(IPdfRendererNative* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IPdfRendererNative_Release(IPdfRendererNative* This) {
    return This->lpVtbl->Release(This);
}
/*** IPdfRendererNative methods ***/
static FORCEINLINE HRESULT IPdfRendererNative_RenderPageToSurface(IPdfRendererNative* This,IUnknown *pdfPage,IDXGISurface *pSurface,POINT offset,PDF_RENDER_PARAMS *pRenderParams) {
    return This->lpVtbl->RenderPageToSurface(This,pdfPage,pSurface,offset,pRenderParams);
}
static FORCEINLINE HRESULT IPdfRendererNative_RenderPageToDeviceContext(IPdfRendererNative* This,IUnknown *pdfPage,ID2D1DeviceContext *pD2DDeviceContext,PDF_RENDER_PARAMS *pRenderParams) {
    return This->lpVtbl->RenderPageToDeviceContext(This,pdfPage,pD2DDeviceContext,pRenderParams);
}
#endif
#endif

#endif


#endif  /* __IPdfRendererNative_INTERFACE_DEFINED__ */

#endif // NTDDI_VERSION >= NTDDI_WINBUE
/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __windows_data_pdf_interop_h__ */
