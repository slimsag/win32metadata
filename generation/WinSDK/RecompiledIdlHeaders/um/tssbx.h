/*** Autogenerated by WIDL 7.0-rc1 from ./tssbx.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __tssbx_h__
#define __tssbx_h__

/* Forward declarations */

#ifndef __IWTSSBPlugin_FWD_DEFINED__
#define __IWTSSBPlugin_FWD_DEFINED__
typedef interface IWTSSBPlugin IWTSSBPlugin;
#ifdef __cplusplus
interface IWTSSBPlugin;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <oaidl.h>
#include <ocidl.h>

#ifdef __cplusplus
extern "C" {
#endif

#include <winapifamily.h>
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)

#define PLUGIN_CAPABILITY_EXTERNAL_REDIRECTION 0x1

/*****************************************************************************
 * IWTSSBPlugin interface
 */
#ifndef __IWTSSBPlugin_INTERFACE_DEFINED__
#define __IWTSSBPlugin_INTERFACE_DEFINED__

#define MaxFQDN_Len (256)

#define MaxNetBiosName_Len (16)

#define MaxNumOfExposed_IPs (12)

#define MaxUserName_Len (104)

#define MaxDomainName_Len (256)

#define MaxFarm_Len (256)

#define MaxAppName_Len (256)

typedef enum __WIDL_tssbx_generated_name_00000020 {
    WTSSBX_MACHINE_DRAIN_UNSPEC = 0x0,
    WTSSBX_MACHINE_DRAIN_OFF = 0x1,
    WTSSBX_MACHINE_DRAIN_ON = 0x2
} WTSSBX_MACHINE_DRAIN;
typedef enum __WIDL_tssbx_generated_name_00000021 {
    WTSSBX_MACHINE_SESSION_MODE_UNSPEC = 0x0,
    WTSSBX_MACHINE_SESSION_MODE_SINGLE = 0x1,
    WTSSBX_MACHINE_SESSION_MODE_MULTIPLE = 0x2
} WTSSBX_MACHINE_SESSION_MODE;
typedef enum __WIDL_tssbx_generated_name_00000022 {
    WTSSBX_ADDRESS_FAMILY_AF_UNSPEC = 0x0,
    WTSSBX_ADDRESS_FAMILY_AF_INET = 0x1,
    WTSSBX_ADDRESS_FAMILY_AF_INET6 = 0x2,
    WTSSBX_ADDRESS_FAMILY_AF_IPX = 0x3,
    WTSSBX_ADDRESS_FAMILY_AF_NETBIOS = 0x4
} WTSSBX_ADDRESS_FAMILY;
typedef struct __WIDL_tssbx_generated_name_00000023 {
    WTSSBX_ADDRESS_FAMILY AddressFamily;
    BYTE Address[16];
    unsigned short PortNumber;
    DWORD dwScope;
} WTSSBX_IP_ADDRESS;
typedef enum __WIDL_tssbx_generated_name_00000024 {
    WTSSBX_MACHINE_STATE_UNSPEC = 0x0,
    WTSSBX_MACHINE_STATE_READY = 0x1,
    WTSSBX_MACHINE_STATE_SYNCHRONIZING = 0x2
} WTSSBX_MACHINE_STATE;
typedef struct __WIDL_tssbx_generated_name_00000025 {
    WCHAR wczMachineFQDN[257];
    WCHAR wczMachineNetBiosName[17];
    DWORD dwNumOfIPAddr;
    WTSSBX_IP_ADDRESS IPaddr[12];
} WTSSBX_MACHINE_CONNECT_INFO;
typedef struct __WIDL_tssbx_generated_name_00000026 {
    WTSSBX_MACHINE_CONNECT_INFO ClientConnectInfo;
    WCHAR wczFarmName[257];
    WTSSBX_IP_ADDRESS InternalIPAddress;
    DWORD dwMaxSessionsLimit;
    DWORD ServerWeight;
    WTSSBX_MACHINE_SESSION_MODE SingleSessionMode;
    WTSSBX_MACHINE_DRAIN InDrain;
    WTSSBX_MACHINE_STATE MachineState;
} WTSSBX_MACHINE_INFO;
typedef enum __WIDL_tssbx_generated_name_00000027 {
    WTSSBX_SESSION_STATE_UNSPEC = 0x0,
    WTSSBX_SESSION_STATE_ACTIVE = 0x1,
    WTSSBX_SESSION_STATE_DISCONNECTED = 0x2
} WTSSBX_SESSION_STATE;
typedef struct __WIDL_tssbx_generated_name_00000028 {
    WCHAR wszUserName[105];
    WCHAR wszDomainName[257];
    WCHAR ApplicationType[257];
    DWORD dwSessionId;
    FILETIME CreateTime;
    FILETIME DisconnectTime;
    WTSSBX_SESSION_STATE SessionState;
} WTSSBX_SESSION_INFO;
typedef enum __WIDL_tssbx_generated_name_00000029 {
    WTSSBX_NOTIFICATION_REMOVED = 0x1,
    WTSSBX_NOTIFICATION_CHANGED = 0x2,
    WTSSBX_NOTIFICATION_ADDED = 0x4,
    WTSSBX_NOTIFICATION_RESYNC = 0x8
} WTSSBX_NOTIFICATION_TYPE;
DEFINE_GUID(IID_IWTSSBPlugin, 0xdc44be78, 0xb18d, 0x4399, 0xb2,0x10, 0x64,0x1b,0xf6,0x7a,0x00,0x2c);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("dc44be78-b18d-4399-b210-641bf67a002c")
IWTSSBPlugin : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE Initialize(
        DWORD *PluginCapabilities) = 0;

    virtual HRESULT STDMETHODCALLTYPE WTSSBX_MachineChangeNotification(
        WTSSBX_NOTIFICATION_TYPE NotificationType,
        LONG MachineId,
        WTSSBX_MACHINE_INFO *pMachineInfo) = 0;

    virtual HRESULT STDMETHODCALLTYPE WTSSBX_SessionChangeNotification(
        WTSSBX_NOTIFICATION_TYPE NotificationType,
        LONG MachineId,
        DWORD NumOfSessions,
        WTSSBX_SESSION_INFO SessionInfo[]) = 0;

    virtual HRESULT STDMETHODCALLTYPE WTSSBX_GetMostSuitableServer(
        WCHAR *UserName,
        WCHAR *DomainName,
        WCHAR *ApplicationType,
        WCHAR *FarmName,
        LONG *pMachineId) = 0;

    virtual HRESULT STDMETHODCALLTYPE Terminated(
        ) = 0;

    virtual HRESULT STDMETHODCALLTYPE WTSSBX_GetUserExternalSession(
        WCHAR *UserName,
        WCHAR *DomainName,
        WCHAR *ApplicationType,
        WTSSBX_IP_ADDRESS *RedirectorInternalIP,
        DWORD *pSessionId,
        WTSSBX_MACHINE_CONNECT_INFO *pMachineConnectInfo) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IWTSSBPlugin, 0xdc44be78, 0xb18d, 0x4399, 0xb2,0x10, 0x64,0x1b,0xf6,0x7a,0x00,0x2c)
#endif
#else
typedef struct IWTSSBPluginVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IWTSSBPlugin *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IWTSSBPlugin *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IWTSSBPlugin *This);

    /*** IWTSSBPlugin methods ***/
    HRESULT (STDMETHODCALLTYPE *Initialize)(
        IWTSSBPlugin *This,
        DWORD *PluginCapabilities);

    HRESULT (STDMETHODCALLTYPE *WTSSBX_MachineChangeNotification)(
        IWTSSBPlugin *This,
        WTSSBX_NOTIFICATION_TYPE NotificationType,
        LONG MachineId,
        WTSSBX_MACHINE_INFO *pMachineInfo);

    HRESULT (STDMETHODCALLTYPE *WTSSBX_SessionChangeNotification)(
        IWTSSBPlugin *This,
        WTSSBX_NOTIFICATION_TYPE NotificationType,
        LONG MachineId,
        DWORD NumOfSessions,
        WTSSBX_SESSION_INFO SessionInfo[]);

    HRESULT (STDMETHODCALLTYPE *WTSSBX_GetMostSuitableServer)(
        IWTSSBPlugin *This,
        WCHAR *UserName,
        WCHAR *DomainName,
        WCHAR *ApplicationType,
        WCHAR *FarmName,
        LONG *pMachineId);

    HRESULT (STDMETHODCALLTYPE *Terminated)(
        IWTSSBPlugin *This);

    HRESULT (STDMETHODCALLTYPE *WTSSBX_GetUserExternalSession)(
        IWTSSBPlugin *This,
        WCHAR *UserName,
        WCHAR *DomainName,
        WCHAR *ApplicationType,
        WTSSBX_IP_ADDRESS *RedirectorInternalIP,
        DWORD *pSessionId,
        WTSSBX_MACHINE_CONNECT_INFO *pMachineConnectInfo);

    END_INTERFACE
} IWTSSBPluginVtbl;

interface IWTSSBPlugin {
    CONST_VTBL IWTSSBPluginVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IWTSSBPlugin_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IWTSSBPlugin_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IWTSSBPlugin_Release(This) (This)->lpVtbl->Release(This)
/*** IWTSSBPlugin methods ***/
#define IWTSSBPlugin_Initialize(This,PluginCapabilities) (This)->lpVtbl->Initialize(This,PluginCapabilities)
#define IWTSSBPlugin_WTSSBX_MachineChangeNotification(This,NotificationType,MachineId,pMachineInfo) (This)->lpVtbl->WTSSBX_MachineChangeNotification(This,NotificationType,MachineId,pMachineInfo)
#define IWTSSBPlugin_WTSSBX_SessionChangeNotification(This,NotificationType,MachineId,NumOfSessions,SessionInfo) (This)->lpVtbl->WTSSBX_SessionChangeNotification(This,NotificationType,MachineId,NumOfSessions,SessionInfo)
#define IWTSSBPlugin_WTSSBX_GetMostSuitableServer(This,UserName,DomainName,ApplicationType,FarmName,pMachineId) (This)->lpVtbl->WTSSBX_GetMostSuitableServer(This,UserName,DomainName,ApplicationType,FarmName,pMachineId)
#define IWTSSBPlugin_Terminated(This) (This)->lpVtbl->Terminated(This)
#define IWTSSBPlugin_WTSSBX_GetUserExternalSession(This,UserName,DomainName,ApplicationType,RedirectorInternalIP,pSessionId,pMachineConnectInfo) (This)->lpVtbl->WTSSBX_GetUserExternalSession(This,UserName,DomainName,ApplicationType,RedirectorInternalIP,pSessionId,pMachineConnectInfo)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IWTSSBPlugin_QueryInterface(IWTSSBPlugin* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IWTSSBPlugin_AddRef(IWTSSBPlugin* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IWTSSBPlugin_Release(IWTSSBPlugin* This) {
    return This->lpVtbl->Release(This);
}
/*** IWTSSBPlugin methods ***/
static FORCEINLINE HRESULT IWTSSBPlugin_Initialize(IWTSSBPlugin* This,DWORD *PluginCapabilities) {
    return This->lpVtbl->Initialize(This,PluginCapabilities);
}
static FORCEINLINE HRESULT IWTSSBPlugin_WTSSBX_MachineChangeNotification(IWTSSBPlugin* This,WTSSBX_NOTIFICATION_TYPE NotificationType,LONG MachineId,WTSSBX_MACHINE_INFO *pMachineInfo) {
    return This->lpVtbl->WTSSBX_MachineChangeNotification(This,NotificationType,MachineId,pMachineInfo);
}
static FORCEINLINE HRESULT IWTSSBPlugin_WTSSBX_SessionChangeNotification(IWTSSBPlugin* This,WTSSBX_NOTIFICATION_TYPE NotificationType,LONG MachineId,DWORD NumOfSessions,WTSSBX_SESSION_INFO SessionInfo[]) {
    return This->lpVtbl->WTSSBX_SessionChangeNotification(This,NotificationType,MachineId,NumOfSessions,SessionInfo);
}
static FORCEINLINE HRESULT IWTSSBPlugin_WTSSBX_GetMostSuitableServer(IWTSSBPlugin* This,WCHAR *UserName,WCHAR *DomainName,WCHAR *ApplicationType,WCHAR *FarmName,LONG *pMachineId) {
    return This->lpVtbl->WTSSBX_GetMostSuitableServer(This,UserName,DomainName,ApplicationType,FarmName,pMachineId);
}
static FORCEINLINE HRESULT IWTSSBPlugin_Terminated(IWTSSBPlugin* This) {
    return This->lpVtbl->Terminated(This);
}
static FORCEINLINE HRESULT IWTSSBPlugin_WTSSBX_GetUserExternalSession(IWTSSBPlugin* This,WCHAR *UserName,WCHAR *DomainName,WCHAR *ApplicationType,WTSSBX_IP_ADDRESS *RedirectorInternalIP,DWORD *pSessionId,WTSSBX_MACHINE_CONNECT_INFO *pMachineConnectInfo) {
    return This->lpVtbl->WTSSBX_GetUserExternalSession(This,UserName,DomainName,ApplicationType,RedirectorInternalIP,pSessionId,pMachineConnectInfo);
}
#endif
#endif

#endif


#endif  /* __IWTSSBPlugin_INTERFACE_DEFINED__ */

#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */
/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __tssbx_h__ */
