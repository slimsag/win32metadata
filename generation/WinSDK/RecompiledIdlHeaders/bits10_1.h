/*** Autogenerated by WIDL 5.0 from ./um/bits10_1.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __bits10_1_h__
#define __bits10_1_h__

/* Forward declarations */

#ifndef __IBackgroundCopyCallback3_FWD_DEFINED__
#define __IBackgroundCopyCallback3_FWD_DEFINED__
typedef interface IBackgroundCopyCallback3 IBackgroundCopyCallback3;
#ifdef __cplusplus
interface IBackgroundCopyCallback3;
#endif /* __cplusplus */
#endif

#ifndef __IBackgroundCopyFile6_FWD_DEFINED__
#define __IBackgroundCopyFile6_FWD_DEFINED__
typedef interface IBackgroundCopyFile6 IBackgroundCopyFile6;
#ifdef __cplusplus
interface IBackgroundCopyFile6;
#endif /* __cplusplus */
#endif

#ifndef __BackgroundCopyManager10_1_FWD_DEFINED__
#define __BackgroundCopyManager10_1_FWD_DEFINED__
#ifdef __cplusplus
typedef class BackgroundCopyManager10_1 BackgroundCopyManager10_1;
#else
typedef struct BackgroundCopyManager10_1 BackgroundCopyManager10_1;
#endif /* defined __cplusplus */
#endif /* defined __BackgroundCopyManager10_1_FWD_DEFINED__ */

/* Headers for imported files */

#include <bits.h>
#include <bits1_5.h>
#include <bits2_0.h>
#include <bits2_5.h>
#include <bits3_0.h>
#include <bits4_0.h>
#include <bits5_0.h>

#ifdef __cplusplus
extern "C" {
#endif

#include <winapifamily.h>
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
/*****************************************************************************
 * IBackgroundCopyCallback3 interface
 */
#ifndef __IBackgroundCopyCallback3_INTERFACE_DEFINED__
#define __IBackgroundCopyCallback3_INTERFACE_DEFINED__

DEFINE_GUID(IID_IBackgroundCopyCallback3, 0x98c97bd2, 0xe32b, 0x4ad8, 0xa5,0x28, 0x95,0xfd,0x8b,0x16,0xbd,0x42);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("98c97bd2-e32b-4ad8-a528-95fd8b16bd42")
IBackgroundCopyCallback3 : public IBackgroundCopyCallback2
{
    virtual HRESULT STDMETHODCALLTYPE FileRangesTransferred(
        IBackgroundCopyJob *job,
        IBackgroundCopyFile *file,
        DWORD rangeCount,
        const BG_FILE_RANGE ranges[]) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IBackgroundCopyCallback3, 0x98c97bd2, 0xe32b, 0x4ad8, 0xa5,0x28, 0x95,0xfd,0x8b,0x16,0xbd,0x42)
#endif
#else
typedef struct IBackgroundCopyCallback3Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IBackgroundCopyCallback3 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IBackgroundCopyCallback3 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IBackgroundCopyCallback3 *This);

    /*** IBackgroundCopyCallback methods ***/
    HRESULT (STDMETHODCALLTYPE *JobTransferred)(
        IBackgroundCopyCallback3 *This,
        IBackgroundCopyJob *pJob);

    HRESULT (STDMETHODCALLTYPE *JobError)(
        IBackgroundCopyCallback3 *This,
        IBackgroundCopyJob *pJob,
        IBackgroundCopyError *pError);

    HRESULT (STDMETHODCALLTYPE *JobModification)(
        IBackgroundCopyCallback3 *This,
        IBackgroundCopyJob *pJob,
        DWORD dwReserved);

    /*** IBackgroundCopyCallback2 methods ***/
    HRESULT (STDMETHODCALLTYPE *FileTransferred)(
        IBackgroundCopyCallback3 *This,
        IBackgroundCopyJob *pJob,
        IBackgroundCopyFile *pFile);

    /*** IBackgroundCopyCallback3 methods ***/
    HRESULT (STDMETHODCALLTYPE *FileRangesTransferred)(
        IBackgroundCopyCallback3 *This,
        IBackgroundCopyJob *job,
        IBackgroundCopyFile *file,
        DWORD rangeCount,
        const BG_FILE_RANGE ranges[]);

    END_INTERFACE
} IBackgroundCopyCallback3Vtbl;

interface IBackgroundCopyCallback3 {
    CONST_VTBL IBackgroundCopyCallback3Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IBackgroundCopyCallback3_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IBackgroundCopyCallback3_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IBackgroundCopyCallback3_Release(This) (This)->lpVtbl->Release(This)
/*** IBackgroundCopyCallback methods ***/
#define IBackgroundCopyCallback3_JobTransferred(This,pJob) (This)->lpVtbl->JobTransferred(This,pJob)
#define IBackgroundCopyCallback3_JobError(This,pJob,pError) (This)->lpVtbl->JobError(This,pJob,pError)
#define IBackgroundCopyCallback3_JobModification(This,pJob,dwReserved) (This)->lpVtbl->JobModification(This,pJob,dwReserved)
/*** IBackgroundCopyCallback2 methods ***/
#define IBackgroundCopyCallback3_FileTransferred(This,pJob,pFile) (This)->lpVtbl->FileTransferred(This,pJob,pFile)
/*** IBackgroundCopyCallback3 methods ***/
#define IBackgroundCopyCallback3_FileRangesTransferred(This,job,file,rangeCount,ranges) (This)->lpVtbl->FileRangesTransferred(This,job,file,rangeCount,ranges)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IBackgroundCopyCallback3_QueryInterface(IBackgroundCopyCallback3* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IBackgroundCopyCallback3_AddRef(IBackgroundCopyCallback3* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IBackgroundCopyCallback3_Release(IBackgroundCopyCallback3* This) {
    return This->lpVtbl->Release(This);
}
/*** IBackgroundCopyCallback methods ***/
static FORCEINLINE HRESULT IBackgroundCopyCallback3_JobTransferred(IBackgroundCopyCallback3* This,IBackgroundCopyJob *pJob) {
    return This->lpVtbl->JobTransferred(This,pJob);
}
static FORCEINLINE HRESULT IBackgroundCopyCallback3_JobError(IBackgroundCopyCallback3* This,IBackgroundCopyJob *pJob,IBackgroundCopyError *pError) {
    return This->lpVtbl->JobError(This,pJob,pError);
}
static FORCEINLINE HRESULT IBackgroundCopyCallback3_JobModification(IBackgroundCopyCallback3* This,IBackgroundCopyJob *pJob,DWORD dwReserved) {
    return This->lpVtbl->JobModification(This,pJob,dwReserved);
}
/*** IBackgroundCopyCallback2 methods ***/
static FORCEINLINE HRESULT IBackgroundCopyCallback3_FileTransferred(IBackgroundCopyCallback3* This,IBackgroundCopyJob *pJob,IBackgroundCopyFile *pFile) {
    return This->lpVtbl->FileTransferred(This,pJob,pFile);
}
/*** IBackgroundCopyCallback3 methods ***/
static FORCEINLINE HRESULT IBackgroundCopyCallback3_FileRangesTransferred(IBackgroundCopyCallback3* This,IBackgroundCopyJob *job,IBackgroundCopyFile *file,DWORD rangeCount,const BG_FILE_RANGE ranges[]) {
    return This->lpVtbl->FileRangesTransferred(This,job,file,rangeCount,ranges);
}
#endif
#endif

#endif


#endif  /* __IBackgroundCopyCallback3_INTERFACE_DEFINED__ */

/*****************************************************************************
 * IBackgroundCopyFile6 interface
 */
#ifndef __IBackgroundCopyFile6_INTERFACE_DEFINED__
#define __IBackgroundCopyFile6_INTERFACE_DEFINED__

DEFINE_GUID(IID_IBackgroundCopyFile6, 0xcf6784f7, 0xd677, 0x49fd, 0x93,0x68, 0xcb,0x47,0xae,0xe9,0xd1,0xad);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("cf6784f7-d677-49fd-9368-cb47aee9d1ad")
IBackgroundCopyFile6 : public IBackgroundCopyFile5
{
    virtual HRESULT STDMETHODCALLTYPE UpdateDownloadPosition(
        UINT64 offset) = 0;

    virtual HRESULT STDMETHODCALLTYPE RequestFileRanges(
        DWORD rangeCount,
        const BG_FILE_RANGE ranges[]) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetFilledFileRanges(
        DWORD *rangeCount,
        BG_FILE_RANGE **ranges) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IBackgroundCopyFile6, 0xcf6784f7, 0xd677, 0x49fd, 0x93,0x68, 0xcb,0x47,0xae,0xe9,0xd1,0xad)
#endif
#else
typedef struct IBackgroundCopyFile6Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IBackgroundCopyFile6 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IBackgroundCopyFile6 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IBackgroundCopyFile6 *This);

    /*** IBackgroundCopyFile methods ***/
    HRESULT (STDMETHODCALLTYPE *GetRemoteName)(
        IBackgroundCopyFile6 *This,
        LPWSTR *pVal);

    HRESULT (STDMETHODCALLTYPE *GetLocalName)(
        IBackgroundCopyFile6 *This,
        LPWSTR *pVal);

    HRESULT (STDMETHODCALLTYPE *GetProgress)(
        IBackgroundCopyFile6 *This,
        BG_FILE_PROGRESS *pVal);

    /*** IBackgroundCopyFile2 methods ***/
    HRESULT (STDMETHODCALLTYPE *GetFileRanges)(
        IBackgroundCopyFile6 *This,
        DWORD *RangeCount,
        BG_FILE_RANGE **Ranges);

    HRESULT (STDMETHODCALLTYPE *SetRemoteName)(
        IBackgroundCopyFile6 *This,
        LPCWSTR Val);

    /*** IBackgroundCopyFile3 methods ***/
    HRESULT (STDMETHODCALLTYPE *GetTemporaryName)(
        IBackgroundCopyFile6 *This,
        LPWSTR *pFilename);

    HRESULT (STDMETHODCALLTYPE *SetValidationState)(
        IBackgroundCopyFile6 *This,
        BOOL state);

    HRESULT (STDMETHODCALLTYPE *GetValidationState)(
        IBackgroundCopyFile6 *This,
        BOOL *pState);

    HRESULT (STDMETHODCALLTYPE *IsDownloadedFromPeer)(
        IBackgroundCopyFile6 *This,
        BOOL *pVal);

    /*** IBackgroundCopyFile4 methods ***/
    HRESULT (STDMETHODCALLTYPE *GetPeerDownloadStats)(
        IBackgroundCopyFile6 *This,
        PUINT64 pFromOrigin,
        PUINT64 pFromPeers);

    /*** IBackgroundCopyFile5 methods ***/
    HRESULT (STDMETHODCALLTYPE *SetProperty)(
        IBackgroundCopyFile6 *This,
        BITS_FILE_PROPERTY_ID PropertyId,
        BITS_FILE_PROPERTY_VALUE PropertyValue);

    HRESULT (STDMETHODCALLTYPE *GetProperty)(
        IBackgroundCopyFile6 *This,
        BITS_FILE_PROPERTY_ID PropertyId,
        BITS_FILE_PROPERTY_VALUE *PropertyValue);

    /*** IBackgroundCopyFile6 methods ***/
    HRESULT (STDMETHODCALLTYPE *UpdateDownloadPosition)(
        IBackgroundCopyFile6 *This,
        UINT64 offset);

    HRESULT (STDMETHODCALLTYPE *RequestFileRanges)(
        IBackgroundCopyFile6 *This,
        DWORD rangeCount,
        const BG_FILE_RANGE ranges[]);

    HRESULT (STDMETHODCALLTYPE *GetFilledFileRanges)(
        IBackgroundCopyFile6 *This,
        DWORD *rangeCount,
        BG_FILE_RANGE **ranges);

    END_INTERFACE
} IBackgroundCopyFile6Vtbl;

interface IBackgroundCopyFile6 {
    CONST_VTBL IBackgroundCopyFile6Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IBackgroundCopyFile6_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IBackgroundCopyFile6_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IBackgroundCopyFile6_Release(This) (This)->lpVtbl->Release(This)
/*** IBackgroundCopyFile methods ***/
#define IBackgroundCopyFile6_GetRemoteName(This,pVal) (This)->lpVtbl->GetRemoteName(This,pVal)
#define IBackgroundCopyFile6_GetLocalName(This,pVal) (This)->lpVtbl->GetLocalName(This,pVal)
#define IBackgroundCopyFile6_GetProgress(This,pVal) (This)->lpVtbl->GetProgress(This,pVal)
/*** IBackgroundCopyFile2 methods ***/
#define IBackgroundCopyFile6_GetFileRanges(This,RangeCount,Ranges) (This)->lpVtbl->GetFileRanges(This,RangeCount,Ranges)
#define IBackgroundCopyFile6_SetRemoteName(This,Val) (This)->lpVtbl->SetRemoteName(This,Val)
/*** IBackgroundCopyFile3 methods ***/
#define IBackgroundCopyFile6_GetTemporaryName(This,pFilename) (This)->lpVtbl->GetTemporaryName(This,pFilename)
#define IBackgroundCopyFile6_SetValidationState(This,state) (This)->lpVtbl->SetValidationState(This,state)
#define IBackgroundCopyFile6_GetValidationState(This,pState) (This)->lpVtbl->GetValidationState(This,pState)
#define IBackgroundCopyFile6_IsDownloadedFromPeer(This,pVal) (This)->lpVtbl->IsDownloadedFromPeer(This,pVal)
/*** IBackgroundCopyFile4 methods ***/
#define IBackgroundCopyFile6_GetPeerDownloadStats(This,pFromOrigin,pFromPeers) (This)->lpVtbl->GetPeerDownloadStats(This,pFromOrigin,pFromPeers)
/*** IBackgroundCopyFile5 methods ***/
#define IBackgroundCopyFile6_SetProperty(This,PropertyId,PropertyValue) (This)->lpVtbl->SetProperty(This,PropertyId,PropertyValue)
#define IBackgroundCopyFile6_GetProperty(This,PropertyId,PropertyValue) (This)->lpVtbl->GetProperty(This,PropertyId,PropertyValue)
/*** IBackgroundCopyFile6 methods ***/
#define IBackgroundCopyFile6_UpdateDownloadPosition(This,offset) (This)->lpVtbl->UpdateDownloadPosition(This,offset)
#define IBackgroundCopyFile6_RequestFileRanges(This,rangeCount,ranges) (This)->lpVtbl->RequestFileRanges(This,rangeCount,ranges)
#define IBackgroundCopyFile6_GetFilledFileRanges(This,rangeCount,ranges) (This)->lpVtbl->GetFilledFileRanges(This,rangeCount,ranges)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IBackgroundCopyFile6_QueryInterface(IBackgroundCopyFile6* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IBackgroundCopyFile6_AddRef(IBackgroundCopyFile6* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IBackgroundCopyFile6_Release(IBackgroundCopyFile6* This) {
    return This->lpVtbl->Release(This);
}
/*** IBackgroundCopyFile methods ***/
static FORCEINLINE HRESULT IBackgroundCopyFile6_GetRemoteName(IBackgroundCopyFile6* This,LPWSTR *pVal) {
    return This->lpVtbl->GetRemoteName(This,pVal);
}
static FORCEINLINE HRESULT IBackgroundCopyFile6_GetLocalName(IBackgroundCopyFile6* This,LPWSTR *pVal) {
    return This->lpVtbl->GetLocalName(This,pVal);
}
static FORCEINLINE HRESULT IBackgroundCopyFile6_GetProgress(IBackgroundCopyFile6* This,BG_FILE_PROGRESS *pVal) {
    return This->lpVtbl->GetProgress(This,pVal);
}
/*** IBackgroundCopyFile2 methods ***/
static FORCEINLINE HRESULT IBackgroundCopyFile6_GetFileRanges(IBackgroundCopyFile6* This,DWORD *RangeCount,BG_FILE_RANGE **Ranges) {
    return This->lpVtbl->GetFileRanges(This,RangeCount,Ranges);
}
static FORCEINLINE HRESULT IBackgroundCopyFile6_SetRemoteName(IBackgroundCopyFile6* This,LPCWSTR Val) {
    return This->lpVtbl->SetRemoteName(This,Val);
}
/*** IBackgroundCopyFile3 methods ***/
static FORCEINLINE HRESULT IBackgroundCopyFile6_GetTemporaryName(IBackgroundCopyFile6* This,LPWSTR *pFilename) {
    return This->lpVtbl->GetTemporaryName(This,pFilename);
}
static FORCEINLINE HRESULT IBackgroundCopyFile6_SetValidationState(IBackgroundCopyFile6* This,BOOL state) {
    return This->lpVtbl->SetValidationState(This,state);
}
static FORCEINLINE HRESULT IBackgroundCopyFile6_GetValidationState(IBackgroundCopyFile6* This,BOOL *pState) {
    return This->lpVtbl->GetValidationState(This,pState);
}
static FORCEINLINE HRESULT IBackgroundCopyFile6_IsDownloadedFromPeer(IBackgroundCopyFile6* This,BOOL *pVal) {
    return This->lpVtbl->IsDownloadedFromPeer(This,pVal);
}
/*** IBackgroundCopyFile4 methods ***/
static FORCEINLINE HRESULT IBackgroundCopyFile6_GetPeerDownloadStats(IBackgroundCopyFile6* This,PUINT64 pFromOrigin,PUINT64 pFromPeers) {
    return This->lpVtbl->GetPeerDownloadStats(This,pFromOrigin,pFromPeers);
}
/*** IBackgroundCopyFile5 methods ***/
static FORCEINLINE HRESULT IBackgroundCopyFile6_SetProperty(IBackgroundCopyFile6* This,BITS_FILE_PROPERTY_ID PropertyId,BITS_FILE_PROPERTY_VALUE PropertyValue) {
    return This->lpVtbl->SetProperty(This,PropertyId,PropertyValue);
}
static FORCEINLINE HRESULT IBackgroundCopyFile6_GetProperty(IBackgroundCopyFile6* This,BITS_FILE_PROPERTY_ID PropertyId,BITS_FILE_PROPERTY_VALUE *PropertyValue) {
    return This->lpVtbl->GetProperty(This,PropertyId,PropertyValue);
}
/*** IBackgroundCopyFile6 methods ***/
static FORCEINLINE HRESULT IBackgroundCopyFile6_UpdateDownloadPosition(IBackgroundCopyFile6* This,UINT64 offset) {
    return This->lpVtbl->UpdateDownloadPosition(This,offset);
}
static FORCEINLINE HRESULT IBackgroundCopyFile6_RequestFileRanges(IBackgroundCopyFile6* This,DWORD rangeCount,const BG_FILE_RANGE ranges[]) {
    return This->lpVtbl->RequestFileRanges(This,rangeCount,ranges);
}
static FORCEINLINE HRESULT IBackgroundCopyFile6_GetFilledFileRanges(IBackgroundCopyFile6* This,DWORD *rangeCount,BG_FILE_RANGE **ranges) {
    return This->lpVtbl->GetFilledFileRanges(This,rangeCount,ranges);
}
#endif
#endif

#endif


#endif  /* __IBackgroundCopyFile6_INTERFACE_DEFINED__ */


DEFINE_GUID(LIBID_BackgroundCopyManager10_1, 0x8a39e4b6, 0x22c9, 0x4b39, 0x9e,0x0c, 0xb1,0xcd,0xf5,0xf9,0x67,0xfd);

/*****************************************************************************
 * BackgroundCopyManager10_1 coclass
 */

DEFINE_GUID(CLSID_BackgroundCopyManager10_1, 0x4bd3e4e1, 0x7bd4, 0x4a2b, 0x99,0x64, 0x49,0x64,0x00,0xde,0x51,0x93);

#ifdef __cplusplus
class DECLSPEC_UUID("4bd3e4e1-7bd4-4a2b-9964-496400de5193") BackgroundCopyManager10_1;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(BackgroundCopyManager10_1, 0x4bd3e4e1, 0x7bd4, 0x4a2b, 0x99,0x64, 0x49,0x64,0x00,0xde,0x51,0x93)
#endif
#endif

#ifndef __IBackgroundCopyCallback3_FWD_DEFINED__
#define __IBackgroundCopyCallback3_FWD_DEFINED__
typedef interface IBackgroundCopyCallback3 IBackgroundCopyCallback3;
#ifdef __cplusplus
interface IBackgroundCopyCallback3;
#endif /* __cplusplus */
#endif

#ifndef __IBackgroundCopyFile6_FWD_DEFINED__
#define __IBackgroundCopyFile6_FWD_DEFINED__
typedef interface IBackgroundCopyFile6 IBackgroundCopyFile6;
#ifdef __cplusplus
interface IBackgroundCopyFile6;
#endif /* __cplusplus */
#endif

#ifndef __IBackgroundCopyJob5_FWD_DEFINED__
#define __IBackgroundCopyJob5_FWD_DEFINED__
typedef interface IBackgroundCopyJob5 IBackgroundCopyJob5;
#ifdef __cplusplus
interface IBackgroundCopyJob5;
#endif /* __cplusplus */
#endif

#ifndef __IBackgroundCopyJobHttpOptions_FWD_DEFINED__
#define __IBackgroundCopyJobHttpOptions_FWD_DEFINED__
typedef interface IBackgroundCopyJobHttpOptions IBackgroundCopyJobHttpOptions;
#ifdef __cplusplus
interface IBackgroundCopyJobHttpOptions;
#endif /* __cplusplus */
#endif

#ifndef __IBitsPeer_FWD_DEFINED__
#define __IBitsPeer_FWD_DEFINED__
typedef interface IBitsPeer IBitsPeer;
#ifdef __cplusplus
interface IBitsPeer;
#endif /* __cplusplus */
#endif

#ifndef __IBitsPeerCacheAdministration_FWD_DEFINED__
#define __IBitsPeerCacheAdministration_FWD_DEFINED__
typedef interface IBitsPeerCacheAdministration IBitsPeerCacheAdministration;
#ifdef __cplusplus
interface IBitsPeerCacheAdministration;
#endif /* __cplusplus */
#endif

#ifndef __IBitsPeerCacheRecord_FWD_DEFINED__
#define __IBitsPeerCacheRecord_FWD_DEFINED__
typedef interface IBitsPeerCacheRecord IBitsPeerCacheRecord;
#ifdef __cplusplus
interface IBitsPeerCacheRecord;
#endif /* __cplusplus */
#endif

#ifndef __IBitsTokenOptions_FWD_DEFINED__
#define __IBitsTokenOptions_FWD_DEFINED__
typedef interface IBitsTokenOptions IBitsTokenOptions;
#ifdef __cplusplus
interface IBitsTokenOptions;
#endif /* __cplusplus */
#endif

#ifndef __IEnumBitsPeerCacheRecords_FWD_DEFINED__
#define __IEnumBitsPeerCacheRecords_FWD_DEFINED__
typedef interface IEnumBitsPeerCacheRecords IEnumBitsPeerCacheRecords;
#ifdef __cplusplus
interface IEnumBitsPeerCacheRecords;
#endif /* __cplusplus */
#endif

#ifndef __IEnumBitsPeers_FWD_DEFINED__
#define __IEnumBitsPeers_FWD_DEFINED__
typedef interface IEnumBitsPeers IEnumBitsPeers;
#ifdef __cplusplus
interface IEnumBitsPeers;
#endif /* __cplusplus */
#endif

#include "bits10_2.h"
#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */
/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __bits10_1_h__ */
