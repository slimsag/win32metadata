/*** Autogenerated by WIDL 5.0 from ./um/playtomanagerinterop.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __playtomanagerinterop_h__
#define __playtomanagerinterop_h__

/* Forward declarations */

#ifndef __IPlayToManagerInterop_FWD_DEFINED__
#define __IPlayToManagerInterop_FWD_DEFINED__
typedef interface IPlayToManagerInterop IPlayToManagerInterop;
#ifdef __cplusplus
interface IPlayToManagerInterop;
#endif /* __cplusplus */
#endif

/* Headers for imported files */

#include <inspectable.h>

#ifdef __cplusplus
extern "C" {
#endif

#include <winapifamily.h>
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
#if (NTDDI_VERSION >= NTDDI_WIN8)
/*****************************************************************************
 * IPlayToManagerInterop interface
 */
#ifndef __IPlayToManagerInterop_INTERFACE_DEFINED__
#define __IPlayToManagerInterop_INTERFACE_DEFINED__

DEFINE_GUID(IID_IPlayToManagerInterop, 0x24394699, 0x1f2c, 0x4eb3, 0x8c,0xd7, 0x0e,0xc1,0xda,0x42,0xa5,0x40);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("24394699-1f2c-4eb3-8cd7-0ec1da42a540")
IPlayToManagerInterop : public IInspectable
{
    virtual HRESULT STDMETHODCALLTYPE GetForWindow(
        HWND appWindow,
        REFIID riid,
        void **playToManager) = 0;

    virtual HRESULT STDMETHODCALLTYPE ShowPlayToUIForWindow(
        HWND appWindow) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IPlayToManagerInterop, 0x24394699, 0x1f2c, 0x4eb3, 0x8c,0xd7, 0x0e,0xc1,0xda,0x42,0xa5,0x40)
#endif
#else
typedef struct IPlayToManagerInteropVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IPlayToManagerInterop *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IPlayToManagerInterop *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IPlayToManagerInterop *This);

    /*** IInspectable methods ***/
    HRESULT (STDMETHODCALLTYPE *GetIids)(
        IPlayToManagerInterop *This,
        ULONG *iidCount,
        IID **iids);

    HRESULT (STDMETHODCALLTYPE *GetRuntimeClassName)(
        IPlayToManagerInterop *This,
        HSTRING *className);

    HRESULT (STDMETHODCALLTYPE *GetTrustLevel)(
        IPlayToManagerInterop *This,
        TrustLevel *trustLevel);

    /*** IPlayToManagerInterop methods ***/
    HRESULT (STDMETHODCALLTYPE *GetForWindow)(
        IPlayToManagerInterop *This,
        HWND appWindow,
        REFIID riid,
        void **playToManager);

    HRESULT (STDMETHODCALLTYPE *ShowPlayToUIForWindow)(
        IPlayToManagerInterop *This,
        HWND appWindow);

    END_INTERFACE
} IPlayToManagerInteropVtbl;

interface IPlayToManagerInterop {
    CONST_VTBL IPlayToManagerInteropVtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IPlayToManagerInterop_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IPlayToManagerInterop_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IPlayToManagerInterop_Release(This) (This)->lpVtbl->Release(This)
/*** IInspectable methods ***/
#define IPlayToManagerInterop_GetIids(This,iidCount,iids) (This)->lpVtbl->GetIids(This,iidCount,iids)
#define IPlayToManagerInterop_GetRuntimeClassName(This,className) (This)->lpVtbl->GetRuntimeClassName(This,className)
#define IPlayToManagerInterop_GetTrustLevel(This,trustLevel) (This)->lpVtbl->GetTrustLevel(This,trustLevel)
/*** IPlayToManagerInterop methods ***/
#define IPlayToManagerInterop_GetForWindow(This,appWindow,riid,playToManager) (This)->lpVtbl->GetForWindow(This,appWindow,riid,playToManager)
#define IPlayToManagerInterop_ShowPlayToUIForWindow(This,appWindow) (This)->lpVtbl->ShowPlayToUIForWindow(This,appWindow)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IPlayToManagerInterop_QueryInterface(IPlayToManagerInterop* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IPlayToManagerInterop_AddRef(IPlayToManagerInterop* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IPlayToManagerInterop_Release(IPlayToManagerInterop* This) {
    return This->lpVtbl->Release(This);
}
/*** IInspectable methods ***/
static FORCEINLINE HRESULT IPlayToManagerInterop_GetIids(IPlayToManagerInterop* This,ULONG *iidCount,IID **iids) {
    return This->lpVtbl->GetIids(This,iidCount,iids);
}
static FORCEINLINE HRESULT IPlayToManagerInterop_GetRuntimeClassName(IPlayToManagerInterop* This,HSTRING *className) {
    return This->lpVtbl->GetRuntimeClassName(This,className);
}
static FORCEINLINE HRESULT IPlayToManagerInterop_GetTrustLevel(IPlayToManagerInterop* This,TrustLevel *trustLevel) {
    return This->lpVtbl->GetTrustLevel(This,trustLevel);
}
/*** IPlayToManagerInterop methods ***/
static FORCEINLINE HRESULT IPlayToManagerInterop_GetForWindow(IPlayToManagerInterop* This,HWND appWindow,REFIID riid,void **playToManager) {
    return This->lpVtbl->GetForWindow(This,appWindow,riid,playToManager);
}
static FORCEINLINE HRESULT IPlayToManagerInterop_ShowPlayToUIForWindow(IPlayToManagerInterop* This,HWND appWindow) {
    return This->lpVtbl->ShowPlayToUIForWindow(This,appWindow);
}
#endif
#endif

#endif


#endif  /* __IPlayToManagerInterop_INTERFACE_DEFINED__ */

#endif //(NTDDI_VERSION >= NTDDI_WIN8)
#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */
/* Begin additional prototypes for all interfaces */

ULONG           __RPC_USER HWND_UserSize     (ULONG *, ULONG, HWND *);
unsigned char * __RPC_USER HWND_UserMarshal  (ULONG *, unsigned char *, HWND *);
unsigned char * __RPC_USER HWND_UserUnmarshal(ULONG *, unsigned char *, HWND *);
void            __RPC_USER HWND_UserFree     (ULONG *, HWND *);

/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __playtomanagerinterop_h__ */
