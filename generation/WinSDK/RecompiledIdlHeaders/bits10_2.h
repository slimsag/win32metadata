/*** Autogenerated by WIDL 5.0 from ./um/bits10_2.idl - Do not edit ***/

#ifdef _WIN32
#ifndef __REQUIRED_RPCNDR_H_VERSION__
#define __REQUIRED_RPCNDR_H_VERSION__ 475
#endif
#include <rpc.h>
#include <rpcndr.h>
#endif

#ifndef COM_NO_WINDOWS_H
#include <windows.h>
#include <ole2.h>
#endif

#ifndef __bits10_2_h__
#define __bits10_2_h__

/* Forward declarations */

#ifndef __IBackgroundCopyJobHttpOptions2_FWD_DEFINED__
#define __IBackgroundCopyJobHttpOptions2_FWD_DEFINED__
typedef interface IBackgroundCopyJobHttpOptions2 IBackgroundCopyJobHttpOptions2;
#ifdef __cplusplus
interface IBackgroundCopyJobHttpOptions2;
#endif /* __cplusplus */
#endif

#ifndef __BackgroundCopyManager10_2_FWD_DEFINED__
#define __BackgroundCopyManager10_2_FWD_DEFINED__
#ifdef __cplusplus
typedef class BackgroundCopyManager10_2 BackgroundCopyManager10_2;
#else
typedef struct BackgroundCopyManager10_2 BackgroundCopyManager10_2;
#endif /* defined __cplusplus */
#endif /* defined __BackgroundCopyManager10_2_FWD_DEFINED__ */

/* Headers for imported files */

#include <bits.h>
#include <bits1_5.h>
#include <bits2_0.h>
#include <bits2_5.h>
#include <bits3_0.h>
#include <bits4_0.h>
#include <bits5_0.h>
#include <bits10_1.h>

#ifdef __cplusplus
extern "C" {
#endif

#if (NTDDI_VERSION >= NTDDI_WIN10_RS5)
#include <winapifamily.h>
#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)
/*****************************************************************************
 * IBackgroundCopyJobHttpOptions2 interface
 */
#ifndef __IBackgroundCopyJobHttpOptions2_INTERFACE_DEFINED__
#define __IBackgroundCopyJobHttpOptions2_INTERFACE_DEFINED__

DEFINE_GUID(IID_IBackgroundCopyJobHttpOptions2, 0xb591a192, 0xa405, 0x4fc3, 0x83,0x23, 0x4c,0x5c,0x54,0x25,0x78,0xfc);
#if defined(__cplusplus) && !defined(CINTERFACE)
MIDL_INTERFACE("b591a192-a405-4fc3-8323-4c5c542578fc")
IBackgroundCopyJobHttpOptions2 : public IBackgroundCopyJobHttpOptions
{
    virtual HRESULT STDMETHODCALLTYPE SetHttpMethod(
        LPCWSTR method) = 0;

    virtual HRESULT STDMETHODCALLTYPE GetHttpMethod(
        LPWSTR *method) = 0;

};
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(IBackgroundCopyJobHttpOptions2, 0xb591a192, 0xa405, 0x4fc3, 0x83,0x23, 0x4c,0x5c,0x54,0x25,0x78,0xfc)
#endif
#else
typedef struct IBackgroundCopyJobHttpOptions2Vtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        IBackgroundCopyJobHttpOptions2 *This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        IBackgroundCopyJobHttpOptions2 *This);

    ULONG (STDMETHODCALLTYPE *Release)(
        IBackgroundCopyJobHttpOptions2 *This);

    /*** IBackgroundCopyJobHttpOptions methods ***/
    HRESULT (STDMETHODCALLTYPE *SetClientCertificateByID)(
        IBackgroundCopyJobHttpOptions2 *This,
        BG_CERT_STORE_LOCATION StoreLocation,
        LPCWSTR StoreName,
        byte *pCertHashBlob);

    HRESULT (STDMETHODCALLTYPE *SetClientCertificateByName)(
        IBackgroundCopyJobHttpOptions2 *This,
        BG_CERT_STORE_LOCATION StoreLocation,
        LPCWSTR StoreName,
        LPCWSTR SubjectName);

    HRESULT (STDMETHODCALLTYPE *RemoveClientCertificate)(
        IBackgroundCopyJobHttpOptions2 *This);

    HRESULT (STDMETHODCALLTYPE *GetClientCertificate)(
        IBackgroundCopyJobHttpOptions2 *This,
        BG_CERT_STORE_LOCATION *pStoreLocation,
        LPWSTR *pStoreName,
        byte **ppCertHashBlob,
        LPWSTR *pSubjectName);

    HRESULT (STDMETHODCALLTYPE *SetCustomHeaders)(
        IBackgroundCopyJobHttpOptions2 *This,
        LPCWSTR RequestHeaders);

    HRESULT (STDMETHODCALLTYPE *GetCustomHeaders)(
        IBackgroundCopyJobHttpOptions2 *This,
        LPWSTR *pRequestHeaders);

    HRESULT (STDMETHODCALLTYPE *SetSecurityFlags)(
        IBackgroundCopyJobHttpOptions2 *This,
        ULONG Flags);

    HRESULT (STDMETHODCALLTYPE *GetSecurityFlags)(
        IBackgroundCopyJobHttpOptions2 *This,
        ULONG *pFlags);

    /*** IBackgroundCopyJobHttpOptions2 methods ***/
    HRESULT (STDMETHODCALLTYPE *SetHttpMethod)(
        IBackgroundCopyJobHttpOptions2 *This,
        LPCWSTR method);

    HRESULT (STDMETHODCALLTYPE *GetHttpMethod)(
        IBackgroundCopyJobHttpOptions2 *This,
        LPWSTR *method);

    END_INTERFACE
} IBackgroundCopyJobHttpOptions2Vtbl;

interface IBackgroundCopyJobHttpOptions2 {
    CONST_VTBL IBackgroundCopyJobHttpOptions2Vtbl* lpVtbl;
};

#ifdef COBJMACROS
#ifndef WIDL_C_INLINE_WRAPPERS
/*** IUnknown methods ***/
#define IBackgroundCopyJobHttpOptions2_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define IBackgroundCopyJobHttpOptions2_AddRef(This) (This)->lpVtbl->AddRef(This)
#define IBackgroundCopyJobHttpOptions2_Release(This) (This)->lpVtbl->Release(This)
/*** IBackgroundCopyJobHttpOptions methods ***/
#define IBackgroundCopyJobHttpOptions2_SetClientCertificateByID(This,StoreLocation,StoreName,pCertHashBlob) (This)->lpVtbl->SetClientCertificateByID(This,StoreLocation,StoreName,pCertHashBlob)
#define IBackgroundCopyJobHttpOptions2_SetClientCertificateByName(This,StoreLocation,StoreName,SubjectName) (This)->lpVtbl->SetClientCertificateByName(This,StoreLocation,StoreName,SubjectName)
#define IBackgroundCopyJobHttpOptions2_RemoveClientCertificate(This) (This)->lpVtbl->RemoveClientCertificate(This)
#define IBackgroundCopyJobHttpOptions2_GetClientCertificate(This,pStoreLocation,pStoreName,ppCertHashBlob,pSubjectName) (This)->lpVtbl->GetClientCertificate(This,pStoreLocation,pStoreName,ppCertHashBlob,pSubjectName)
#define IBackgroundCopyJobHttpOptions2_SetCustomHeaders(This,RequestHeaders) (This)->lpVtbl->SetCustomHeaders(This,RequestHeaders)
#define IBackgroundCopyJobHttpOptions2_GetCustomHeaders(This,pRequestHeaders) (This)->lpVtbl->GetCustomHeaders(This,pRequestHeaders)
#define IBackgroundCopyJobHttpOptions2_SetSecurityFlags(This,Flags) (This)->lpVtbl->SetSecurityFlags(This,Flags)
#define IBackgroundCopyJobHttpOptions2_GetSecurityFlags(This,pFlags) (This)->lpVtbl->GetSecurityFlags(This,pFlags)
/*** IBackgroundCopyJobHttpOptions2 methods ***/
#define IBackgroundCopyJobHttpOptions2_SetHttpMethod(This,method) (This)->lpVtbl->SetHttpMethod(This,method)
#define IBackgroundCopyJobHttpOptions2_GetHttpMethod(This,method) (This)->lpVtbl->GetHttpMethod(This,method)
#else
/*** IUnknown methods ***/
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions2_QueryInterface(IBackgroundCopyJobHttpOptions2* This,REFIID riid,void **ppvObject) {
    return This->lpVtbl->QueryInterface(This,riid,ppvObject);
}
static FORCEINLINE ULONG IBackgroundCopyJobHttpOptions2_AddRef(IBackgroundCopyJobHttpOptions2* This) {
    return This->lpVtbl->AddRef(This);
}
static FORCEINLINE ULONG IBackgroundCopyJobHttpOptions2_Release(IBackgroundCopyJobHttpOptions2* This) {
    return This->lpVtbl->Release(This);
}
/*** IBackgroundCopyJobHttpOptions methods ***/
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions2_SetClientCertificateByID(IBackgroundCopyJobHttpOptions2* This,BG_CERT_STORE_LOCATION StoreLocation,LPCWSTR StoreName,byte *pCertHashBlob) {
    return This->lpVtbl->SetClientCertificateByID(This,StoreLocation,StoreName,pCertHashBlob);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions2_SetClientCertificateByName(IBackgroundCopyJobHttpOptions2* This,BG_CERT_STORE_LOCATION StoreLocation,LPCWSTR StoreName,LPCWSTR SubjectName) {
    return This->lpVtbl->SetClientCertificateByName(This,StoreLocation,StoreName,SubjectName);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions2_RemoveClientCertificate(IBackgroundCopyJobHttpOptions2* This) {
    return This->lpVtbl->RemoveClientCertificate(This);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions2_GetClientCertificate(IBackgroundCopyJobHttpOptions2* This,BG_CERT_STORE_LOCATION *pStoreLocation,LPWSTR *pStoreName,byte **ppCertHashBlob,LPWSTR *pSubjectName) {
    return This->lpVtbl->GetClientCertificate(This,pStoreLocation,pStoreName,ppCertHashBlob,pSubjectName);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions2_SetCustomHeaders(IBackgroundCopyJobHttpOptions2* This,LPCWSTR RequestHeaders) {
    return This->lpVtbl->SetCustomHeaders(This,RequestHeaders);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions2_GetCustomHeaders(IBackgroundCopyJobHttpOptions2* This,LPWSTR *pRequestHeaders) {
    return This->lpVtbl->GetCustomHeaders(This,pRequestHeaders);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions2_SetSecurityFlags(IBackgroundCopyJobHttpOptions2* This,ULONG Flags) {
    return This->lpVtbl->SetSecurityFlags(This,Flags);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions2_GetSecurityFlags(IBackgroundCopyJobHttpOptions2* This,ULONG *pFlags) {
    return This->lpVtbl->GetSecurityFlags(This,pFlags);
}
/*** IBackgroundCopyJobHttpOptions2 methods ***/
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions2_SetHttpMethod(IBackgroundCopyJobHttpOptions2* This,LPCWSTR method) {
    return This->lpVtbl->SetHttpMethod(This,method);
}
static FORCEINLINE HRESULT IBackgroundCopyJobHttpOptions2_GetHttpMethod(IBackgroundCopyJobHttpOptions2* This,LPWSTR *method) {
    return This->lpVtbl->GetHttpMethod(This,method);
}
#endif
#endif

#endif


#endif  /* __IBackgroundCopyJobHttpOptions2_INTERFACE_DEFINED__ */


DEFINE_GUID(LIBID_BackgroundCopyManager10_2, 0x70cdc92e, 0x4b95, 0x49eb, 0x8c,0xda, 0xad,0x39,0xaa,0x7c,0xc4,0xa0);

/*****************************************************************************
 * BackgroundCopyManager10_2 coclass
 */

DEFINE_GUID(CLSID_BackgroundCopyManager10_2, 0x4575438f, 0xa6c8, 0x4976, 0xb0,0xfe, 0x2f,0x26,0xb8,0x0d,0x95,0x9e);

#ifdef __cplusplus
class DECLSPEC_UUID("4575438f-a6c8-4976-b0fe-2f26b80d959e") BackgroundCopyManager10_2;
#ifdef __CRT_UUID_DECL
__CRT_UUID_DECL(BackgroundCopyManager10_2, 0x4575438f, 0xa6c8, 0x4976, 0xb0,0xfe, 0x2f,0x26,0xb8,0x0d,0x95,0x9e)
#endif
#endif

#ifndef __IBackgroundCopyCallback3_FWD_DEFINED__
#define __IBackgroundCopyCallback3_FWD_DEFINED__
typedef interface IBackgroundCopyCallback3 IBackgroundCopyCallback3;
#ifdef __cplusplus
interface IBackgroundCopyCallback3;
#endif /* __cplusplus */
#endif

#ifndef __IBackgroundCopyFile6_FWD_DEFINED__
#define __IBackgroundCopyFile6_FWD_DEFINED__
typedef interface IBackgroundCopyFile6 IBackgroundCopyFile6;
#ifdef __cplusplus
interface IBackgroundCopyFile6;
#endif /* __cplusplus */
#endif

#ifndef __IBackgroundCopyJob5_FWD_DEFINED__
#define __IBackgroundCopyJob5_FWD_DEFINED__
typedef interface IBackgroundCopyJob5 IBackgroundCopyJob5;
#ifdef __cplusplus
interface IBackgroundCopyJob5;
#endif /* __cplusplus */
#endif

#ifndef __IBackgroundCopyJobHttpOptions2_FWD_DEFINED__
#define __IBackgroundCopyJobHttpOptions2_FWD_DEFINED__
typedef interface IBackgroundCopyJobHttpOptions2 IBackgroundCopyJobHttpOptions2;
#ifdef __cplusplus
interface IBackgroundCopyJobHttpOptions2;
#endif /* __cplusplus */
#endif

#ifndef __IBitsPeer_FWD_DEFINED__
#define __IBitsPeer_FWD_DEFINED__
typedef interface IBitsPeer IBitsPeer;
#ifdef __cplusplus
interface IBitsPeer;
#endif /* __cplusplus */
#endif

#ifndef __IBitsPeerCacheAdministration_FWD_DEFINED__
#define __IBitsPeerCacheAdministration_FWD_DEFINED__
typedef interface IBitsPeerCacheAdministration IBitsPeerCacheAdministration;
#ifdef __cplusplus
interface IBitsPeerCacheAdministration;
#endif /* __cplusplus */
#endif

#ifndef __IBitsPeerCacheRecord_FWD_DEFINED__
#define __IBitsPeerCacheRecord_FWD_DEFINED__
typedef interface IBitsPeerCacheRecord IBitsPeerCacheRecord;
#ifdef __cplusplus
interface IBitsPeerCacheRecord;
#endif /* __cplusplus */
#endif

#ifndef __IBitsTokenOptions_FWD_DEFINED__
#define __IBitsTokenOptions_FWD_DEFINED__
typedef interface IBitsTokenOptions IBitsTokenOptions;
#ifdef __cplusplus
interface IBitsTokenOptions;
#endif /* __cplusplus */
#endif

#ifndef __IEnumBitsPeerCacheRecords_FWD_DEFINED__
#define __IEnumBitsPeerCacheRecords_FWD_DEFINED__
typedef interface IEnumBitsPeerCacheRecords IEnumBitsPeerCacheRecords;
#ifdef __cplusplus
interface IEnumBitsPeerCacheRecords;
#endif /* __cplusplus */
#endif

#ifndef __IEnumBitsPeers_FWD_DEFINED__
#define __IEnumBitsPeers_FWD_DEFINED__
typedef interface IEnumBitsPeers IEnumBitsPeers;
#ifdef __cplusplus
interface IEnumBitsPeers;
#endif /* __cplusplus */
#endif

#include "bits10_3.h"
#endif /* WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) */
#endif /* NTDDI_VERSION >= NTDDI_WIN10_RS5 */
/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __bits10_2_h__ */
